2017-01-12 04:35:33 - // include directory, this will be replaced by the kernel
2017-01-12 04:35:33 - #I "/IfSharp/bin"
2017-01-12 04:35:33 - // load base dlls
2017-01-12 04:35:33 - #r "IfSharp.Kernel.dll"
2017-01-12 04:35:33 - #r "NetMQ.dll"
2017-01-12 04:35:33 - // open the global functions and methods
2017-01-12 04:35:33 - open IfSharp.Kernel
2017-01-12 04:35:33 - open IfSharp.Kernel.Globals
2017-01-12 04:35:35 - F# Interactive for F# 4.1
2017-01-12 04:35:35 - Freely distributed under the Apache 2.0 Open Source License
2017-01-12 04:35:35 - For help type #help;;
2017-01-12 04:35:35 - > val it : ResizeArray<System.Type * (obj -> seq<string * string> * string)> =
2017-01-12 04:35:35 -   seq []
2017-01-12 04:35:35 - --> Added '/IfSharp/bin' to library include path
2017-01-12 04:35:35 - --> Referenced '/IfSharp/bin/IfSharp.Kernel.dll' (file may be locked by F# Interactive process)
2017-01-12 04:35:35 - --> Referenced '/IfSharp/bin/NetMQ.dll' (file may be locked by F# Interactive process)
2017-01-12 13:46:41 - shutdown request
2017-01-19 03:07:00 - // include directory, this will be replaced by the kernel
2017-01-19 03:07:00 - #I "/IfSharp/bin"
2017-01-19 03:07:00 - // load base dlls
2017-01-19 03:07:00 - #r "IfSharp.Kernel.dll"
2017-01-19 03:07:00 - #r "NetMQ.dll"
2017-01-19 03:07:00 - // open the global functions and methods
2017-01-19 03:07:00 - open IfSharp.Kernel
2017-01-19 03:07:00 - open IfSharp.Kernel.Globals
2017-01-19 03:07:02 - F# Interactive for F# 4.1
2017-01-19 03:07:02 - Freely distributed under the Apache 2.0 Open Source License
2017-01-19 03:07:02 - For help type #help;;
2017-01-19 03:07:02 - > val it : ResizeArray<System.Type * (obj -> seq<string * string> * string)> =
2017-01-19 03:07:02 -   seq []
2017-01-19 03:07:02 - --> Added '/IfSharp/bin' to library include path
2017-01-19 03:07:02 - --> Referenced '/IfSharp/bin/IfSharp.Kernel.dll' (file may be locked by F# Interactive process)
2017-01-19 03:07:02 - --> Referenced '/IfSharp/bin/NetMQ.dll' (file may be locked by F# Interactive process)
2017-01-19 03:11:03 - open System
2017-01-19 03:11:34 - open System
2017-01-19 03:11:34 - #load "XPlot.Plotly.Paket.fsx"
2017-01-19 03:11:34 - #load "XPlot.Plotly.fsx"
2017-01-19 03:11:34 - open XPlot.Plotly
2017-01-19 03:11:43 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 03:11:43 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x4123daf0 + 0x00183> in <filename unknown>:0 
2017-01-19 03:11:43 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x411bf2c0 + 0x00047> in <filename unknown>:0 
2017-01-19 03:11:43 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x4105e080 + 0x00d27> in <filename unknown>:0 
2017-01-19 03:11:43 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41565d70 + 0x00287> in <filename unknown>:0 
2017-01-19 03:11:44 -  2 + 2
2017-01-19 03:11:53 - open System
2017-01-19 03:11:53 - open XPlot.Plotly
2017-01-19 03:11:53 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 03:11:53 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x4123daf0 + 0x00183> in <filename unknown>:0 
2017-01-19 03:11:53 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x411bf2c0 + 0x00047> in <filename unknown>:0 
2017-01-19 03:11:53 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x4105e080 + 0x00d27> in <filename unknown>:0 
2017-01-19 03:11:53 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41565d70 + 0x00287> in <filename unknown>:0 
2017-01-19 03:12:58 - #load "Paket.fsx" 
2017-01-19 03:12:58 - open System
2017-01-19 03:12:58 - open XPlot.Plotly
2017-01-19 03:13:17 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 03:13:17 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x4123daf0 + 0x00183> in <filename unknown>:0 
2017-01-19 03:13:17 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x411bf2c0 + 0x00047> in <filename unknown>:0 
2017-01-19 03:13:17 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x4105e080 + 0x00d27> in <filename unknown>:0 
2017-01-19 03:13:17 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41565d70 + 0x00287> in <filename unknown>:0 
2017-01-19 03:14:29 - #load "Paket.fsx" 
2017-01-19 03:14:29 - Paket.Packagep["XPlot.Plotly"]
2017-01-19 03:14:29 - open System
2017-01-19 03:14:29 - open XPlot.Plotly
2017-01-19 03:14:29 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 03:14:29 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x4123daf0 + 0x00183> in <filename unknown>:0 
2017-01-19 03:14:29 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x411bf2c0 + 0x00047> in <filename unknown>:0 
2017-01-19 03:14:29 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x4105e080 + 0x00d27> in <filename unknown>:0 
2017-01-19 03:14:29 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41565d70 + 0x00287> in <filename unknown>:0 
2017-01-19 03:14:35 - #load "Paket.fsx" 
2017-01-19 03:14:35 - Paket.Package["XPlot.Plotly"]
2017-01-19 03:14:35 - open System
2017-01-19 03:14:35 - open XPlot.Plotly
2017-01-19 03:14:35 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 03:14:35 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x4123daf0 + 0x00183> in <filename unknown>:0 
2017-01-19 03:14:35 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x411bf2c0 + 0x00047> in <filename unknown>:0 
2017-01-19 03:14:35 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x4105e080 + 0x00d27> in <filename unknown>:0 
2017-01-19 03:14:35 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41565d70 + 0x00287> in <filename unknown>:0 
2017-01-19 03:18:12 - open System
2017-01-19 03:18:12 - #load "XPlot.Plotly.Paket.fsx"
2017-01-19 03:18:12 - #load "XPlot.Plotly.fsx"
2017-01-19 03:18:12 - open XPlot.Plotly
2017-01-19 03:18:14 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 03:18:14 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x4123daf0 + 0x00183> in <filename unknown>:0 
2017-01-19 03:18:14 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x411bf2c0 + 0x00047> in <filename unknown>:0 
2017-01-19 03:18:14 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x4105e080 + 0x00d27> in <filename unknown>:0 
2017-01-19 03:18:14 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41565d70 + 0x00287> in <filename unknown>:0 
2017-01-19 03:20:56 - shutdown request
2017-01-19 03:57:35 - // include directory, this will be replaced by the kernel
2017-01-19 03:57:35 - #I "/IfSharp/bin"
2017-01-19 03:57:35 - // load base dlls
2017-01-19 03:57:35 - #r "IfSharp.Kernel.dll"
2017-01-19 03:57:35 - #r "NetMQ.dll"
2017-01-19 03:57:35 - // open the global functions and methods
2017-01-19 03:57:35 - open IfSharp.Kernel
2017-01-19 03:57:35 - open IfSharp.Kernel.Globals
2017-01-19 03:57:37 - F# Interactive for F# 4.1
2017-01-19 03:57:37 - Freely distributed under the Apache 2.0 Open Source License
2017-01-19 03:57:37 - For help type #help;;
2017-01-19 03:57:37 - > val it : ResizeArray<System.Type * (obj -> seq<string * string> * string)> =
2017-01-19 03:57:37 -   seq []
2017-01-19 03:57:37 - --> Added '/IfSharp/bin' to library include path
2017-01-19 03:57:37 - --> Referenced '/IfSharp/bin/IfSharp.Kernel.dll' (file may be locked by F# Interactive process)
2017-01-19 03:57:37 - --> Referenced '/IfSharp/bin/NetMQ.dll' (file may be locked by F# Interactive process)
2017-01-19 03:57:37 - open System
2017-01-19 03:57:37 - #load "XPlot.Plotly.Paket.fsx"
2017-01-19 03:57:37 - #load "XPlot.Plotly.fsx"
2017-01-19 03:57:37 - open XPlot.Plotly
2017-01-19 04:16:29 - let n = 512
2017-01-19 04:16:29 - let samp = [0..N-1]
2017-01-19 04:16:29 - let fo = 1.0/n
2017-01-19 04:16:29 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:16:29 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:16:29 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:16:29 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:16:29 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:16:35 - let n = 512
2017-01-19 04:16:35 - let samp = [0..n-1]
2017-01-19 04:16:35 - let fo = 1.0/n
2017-01-19 04:16:35 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:16:35 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:16:35 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:16:35 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:16:35 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:16:43 - let n = 512
2017-01-19 04:16:43 - let samp = [0..n-1]
2017-01-19 04:16:43 - let fo = 1/n
2017-01-19 04:17:33 - let n = 512.0
2017-01-19 04:17:33 - let samp = [0..n-1.0]
2017-01-19 04:17:33 - let fo = 1.0/n
2017-01-19 04:17:33 - let x = 6.0 * sin(2.0*Math.PI*fo*n)
2017-01-19 04:17:33 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:17:33 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:17:33 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:17:33 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:17:33 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:17:52 - let n = 512.0
2017-01-19 04:17:52 - let samp = [0.0 .. n-1.0]
2017-01-19 04:17:52 - let fo = 1.0/n
2017-01-19 04:17:52 - let x = 6.0 * sin(2.0*Math.PI*fo*n)
2017-01-19 04:17:56 - let n = 512.0
2017-01-19 04:17:56 - let samp = [0.0 .. n-1.0]
2017-01-19 04:17:56 - let fo = 1.0/n
2017-01-19 04:17:56 - let x = 6.0 * sin(2.0*Math.PI*fo*n)
2017-01-19 04:18:14 - let n = 512.0
2017-01-19 04:18:14 - let samp = [0.0 .. n-1.0]
2017-01-19 04:18:14 - let fo = 1.0/n
2017-01-19 04:18:14 - 6.0 * sin(2.0*Math.PI*fo*n)
2017-01-19 04:18:14 - |> Chart.Line
2017-01-19 04:18:14 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:18:14 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:18:14 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:18:14 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:18:14 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:18:31 - let n = 512.0
2017-01-19 04:18:31 - let samp = [0.0 .. n-1.0]
2017-01-19 04:18:31 - let fo = 1.0/n
2017-01-19 04:18:31 - 6.0 * sin(2.0*Math.PI*fo*n)
2017-01-19 04:18:31 - |> Chart.Plot
2017-01-19 04:18:31 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:18:31 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:18:31 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:18:31 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:18:31 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:18:52 - let n = 512.0
2017-01-19 04:18:52 - let samp = [|0.0 .. n-1.0|]
2017-01-19 04:18:52 - let fo = 1.0/n
2017-01-19 04:18:52 - 6.0 * sin(2.0*Math.PI*fo*n)
2017-01-19 04:18:52 - |> Chart.Plot
2017-01-19 04:18:52 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:18:52 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:18:52 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:18:52 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:18:52 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:21:10 - let n = 512.0
2017-01-19 04:21:10 - let fo = 1.0/n
2017-01-19 04:21:10 - [0.0 .. n-1.0]
2017-01-19 04:21:10 - List.mapi (fun i x -> x,6.0 * sin(2.0*Math.PI*fo*n) )
2017-01-19 04:21:10 - |> Chart.Line
2017-01-19 04:21:10 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:21:10 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:21:10 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:21:10 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:21:10 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:21:30 - let n = 512.0
2017-01-19 04:21:30 - let fo = 1.0/n
2017-01-19 04:21:30 - [0.0 .. n-1.0]
2017-01-19 04:21:30 - //List.mapi (fun i x -> x,6.0 * sin(2.0*Math.PI*fo*n) )
2017-01-19 04:21:30 - //|> Chart.Line
2017-01-19 04:21:30 - Chart.Line [ for x in 0. .. 0.5 .. 6.3 -> x, sin x ]
2017-01-19 04:22:44 - let n = 512.0
2017-01-19 04:22:44 - let fo = 1.0/n
2017-01-19 04:22:44 - [0.0 .. n-1.0]
2017-01-19 04:22:44 - List.mapi (fun i x -> (float(i),6.0 * sin(2.0*Math.PI*fo*n)) )
2017-01-19 04:22:44 - |> Chart.Line
2017-01-19 04:22:44 - //Chart.Line [ for x in 0. .. 0.5 .. 6.3 -> x, sin x ]
2017-01-19 04:22:44 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:22:44 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:22:44 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:22:44 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:22:44 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:23:14 - let n = 512.0
2017-01-19 04:23:14 - let fo = 1.0/n
2017-01-19 04:23:14 - [0.0 .. n-1.0]
2017-01-19 04:23:14 - |> List.mapi (fun i x -> (float(i),6.0 * sin(2.0*Math.PI*fo*n)) )
2017-01-19 04:23:14 - |> Chart.Line
2017-01-19 04:23:14 - //Chart.Line [ for x in 0. .. 0.5 .. 6.3 -> x, sin x ]
2017-01-19 04:23:28 - let n = 512.0
2017-01-19 04:23:28 - let fo = 1.0/n
2017-01-19 04:23:28 - [0.0 .. n-1.0]
2017-01-19 04:23:28 - |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*n) )
2017-01-19 04:23:28 - |> Chart.Line
2017-01-19 04:23:28 - //Chart.Line [ for x in 0. .. 0.5 .. 6.3 -> x, sin x ]
2017-01-19 04:23:52 - let n = 512.0
2017-01-19 04:23:52 - let fo = 1.0/n
2017-01-19 04:23:52 - [0.0 .. (n-1.0)]
2017-01-19 04:23:52 - |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*n) )
2017-01-19 04:23:52 - |> Chart.Line
2017-01-19 04:23:52 - //Chart.Line [ for x in 0. .. 0.5 .. 6.3 -> x, sin x ]
2017-01-19 04:24:07 - let n = 512.0
2017-01-19 04:24:07 - let fo = 1.0/n
2017-01-19 04:24:07 - [0.0 .. (n-1.0)]
2017-01-19 04:24:07 - |> List.mapi (fun i x -> float(i),6.0 * sin(x) )
2017-01-19 04:24:07 - |> Chart.Line
2017-01-19 04:24:07 - //Chart.Line [ for x in 0. .. 0.5 .. 6.3 -> x, sin x ]
2017-01-19 04:24:18 - let n = 512.0
2017-01-19 04:24:18 - let fo = 1.0/n
2017-01-19 04:24:18 - [0.0 .. (n-1.0)]
2017-01-19 04:24:18 - |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI) )
2017-01-19 04:24:18 - |> Chart.Line
2017-01-19 04:24:18 - //Chart.Line [ for x in 0. .. 0.5 .. 6.3 -> x, sin x ]
2017-01-19 04:24:25 - let n = 512.0
2017-01-19 04:24:25 - let fo = 1.0/n
2017-01-19 04:24:25 - [0.0 .. (n-1.0)]
2017-01-19 04:24:25 - |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI()) )
2017-01-19 04:24:25 - |> Chart.Line
2017-01-19 04:24:25 - //Chart.Line [ for x in 0. .. 0.5 .. 6.3 -> x, sin x ]
2017-01-19 04:24:25 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:24:25 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:24:25 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:24:25 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:24:25 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:25:17 - let n = 512.0
2017-01-19 04:25:17 - let fo = 1.0/n
2017-01-19 04:25:17 - [0.0 .. (n-1.0)]
2017-01-19 04:25:17 - |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*fo*n) )
2017-01-19 04:25:17 - |> Chart.Line
2017-01-19 04:25:26 - let n = 512.0
2017-01-19 04:25:26 - let fo = 1.0/n
2017-01-19 04:25:26 - [0.0 .. (n-1.0)]
2017-01-19 04:25:26 - |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*x*fo*n) )
2017-01-19 04:25:26 - |> Chart.Line
2017-01-19 04:25:55 - let n = 512.0
2017-01-19 04:25:55 - let fo = 1.0/n
2017-01-19 04:25:55 - Math.PI
2017-01-19 04:26:20 - let n = 512.0
2017-01-19 04:26:20 - let fo = 1.0/n
2017-01-19 04:26:20 - [0.0 .. (n-1.0)]
2017-01-19 04:26:20 - |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 04:26:20 - |> Chart.Line
2017-01-19 04:26:20 - Math.PI
2017-01-19 04:26:24 - let n = 512.0
2017-01-19 04:26:24 - let fo = 1.0/n
2017-01-19 04:26:24 - [0.0 .. (n-1.0)]
2017-01-19 04:26:24 - |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 04:26:24 - |> Chart.Line
2017-01-19 04:26:48 - let n = 512.0
2017-01-19 04:26:48 - let fo = 1.0/n
2017-01-19 04:26:48 - {0.0 .. (n-1.0)}
2017-01-19 04:26:48 - |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 04:26:48 - |> Chart.Line
2017-01-19 04:27:15 - let n = 512.0
2017-01-19 04:27:15 - let fo = 1.0/n
2017-01-19 04:27:15 - let x = {0.0 .. (n-1.0)}
2017-01-19 04:27:15 - |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 04:27:15 - x
2017-01-19 04:27:15 - |> Chart.Line
2017-01-19 04:27:29 - let n = 512.0
2017-01-19 04:27:29 - let fo = 1.0/n
2017-01-19 04:27:29 - let x = {0.0 .. (n-1.0)}
2017-01-19 04:27:29 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 04:27:29 - x
2017-01-19 04:27:29 - |> Chart.Line
2017-01-19 04:33:00 - let n = 512.0
2017-01-19 04:33:00 - let fo = 1.0/n
2017-01-19 04:33:00 - let x = {0.0 .. (n-1.0)}
2017-01-19 04:33:00 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 04:33:00 - let options =
2017-01-19 04:33:00 -     Options(
2017-01-19 04:33:00 -         title = "The signal x whose amplitude exceeds the range [-\pi,\pi]'",
2017-01-19 04:33:00 -         hAxis =
2017-01-19 04:33:00 -             Axis(
2017-01-19 04:33:00 -                 title = "Year",
2017-01-19 04:33:00 -                 titleTextStyle = TextStyle(color = "#333")
2017-01-19 04:33:00 -             ),
2017-01-19 04:33:00 -         vAxis = Axis(minValue = 0)
2017-01-19 04:33:00 -     )
2017-01-19 04:33:00 - x
2017-01-19 04:33:00 - |> Chart.Line
2017-01-19 04:33:00 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:33:00 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:33:00 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:33:00 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:33:00 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:33:14 - let n = 512.0
2017-01-19 04:33:14 - let fo = 1.0/n
2017-01-19 04:33:14 - let x = {0.0 .. (n-1.0)}
2017-01-19 04:33:14 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 04:33:14 - let options =
2017-01-19 04:33:14 -     Options(
2017-01-19 04:33:14 -         title = "The signal x whose amplitude exceeds the range [-\pi,\pi]",
2017-01-19 04:33:14 -         hAxis =
2017-01-19 04:33:14 -             Axis(
2017-01-19 04:33:14 -                 title = "Year",
2017-01-19 04:33:14 -                 titleTextStyle = TextStyle(color = "#333")
2017-01-19 04:33:14 -             ),
2017-01-19 04:33:14 -         vAxis = Axis(minValue = 0)
2017-01-19 04:33:14 -     )
2017-01-19 04:33:14 - x
2017-01-19 04:33:14 - |> Chart.Line
2017-01-19 04:33:14 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:33:14 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:33:14 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:33:14 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:33:14 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:33:37 - let n = 512.0
2017-01-19 04:33:37 - let fo = 1.0/n
2017-01-19 04:33:37 - let x = {0.0 .. (n-1.0)}
2017-01-19 04:33:37 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 04:33:37 - let options =
2017-01-19 04:33:37 -     Options(
2017-01-19 04:33:37 -         title = "Company Performance",
2017-01-19 04:33:37 -         hAxis =
2017-01-19 04:33:37 -             Axis(
2017-01-19 04:33:37 -                 title = "Year",
2017-01-19 04:33:37 -                 titleTextStyle = TextStyle(color = "#333")
2017-01-19 04:33:37 -             ),
2017-01-19 04:33:37 -         vAxis = Axis(minValue = 0)
2017-01-19 04:33:37 -     )
2017-01-19 04:33:37 - x
2017-01-19 04:33:37 - |> Chart.Line
2017-01-19 04:33:37 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:33:37 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:33:37 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:33:37 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:33:37 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:34:07 - let n = 512.0
2017-01-19 04:34:07 - let fo = 1.0/n
2017-01-19 04:34:07 - let x = {0.0 .. (n-1.0)}
2017-01-19 04:34:07 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 04:34:07 - let options =
2017-01-19 04:34:07 -     Options(
2017-01-19 04:34:07 -         title = "Company Performance",
2017-01-19 04:34:07 -         xaxis =
2017-01-19 04:34:07 -             Axis(
2017-01-19 04:34:07 -                 title = "Year",
2017-01-19 04:34:07 -                 titleTextStyle = TextStyle(color = "#333")
2017-01-19 04:34:07 -             ),
2017-01-19 04:34:07 -         yaxis = Axis(minValue = 0)
2017-01-19 04:34:07 -     )
2017-01-19 04:34:07 - x
2017-01-19 04:34:07 - |> Chart.Line
2017-01-19 04:34:07 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:34:07 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:34:07 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:34:07 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:34:07 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:34:39 - let n = 512.0
2017-01-19 04:34:39 - let fo = 1.0/n
2017-01-19 04:34:39 - let x = {0.0 .. (n-1.0)}
2017-01-19 04:34:39 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 04:34:39 - let options =
2017-01-19 04:34:39 -     Options(
2017-01-19 04:34:39 -         title = "Company Performance",
2017-01-19 04:34:39 -         xaxis =
2017-01-19 04:34:39 -             axis(
2017-01-19 04:34:39 -                 title = "Year",
2017-01-19 04:34:39 -                 titleTextStyle = TextStyle(color = "#333")
2017-01-19 04:34:39 -             ),
2017-01-19 04:34:39 -         yaxis = Axis(minValue = 0)
2017-01-19 04:34:39 -     )
2017-01-19 04:34:39 - x
2017-01-19 04:34:39 - |> Chart.Line
2017-01-19 04:34:39 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:34:39 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:34:39 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:34:39 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:34:39 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 04:37:12 - let n = 512.0
2017-01-19 04:37:12 - let fo = 1.0/n
2017-01-19 04:37:12 - let x = {0.0 .. (n-1.0)}
2017-01-19 04:37:12 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 04:37:12 - let options =
2017-01-19 04:37:12 -     Options(
2017-01-19 04:37:12 -         title = "Company Performance",
2017-01-19 04:37:12 -         xaxis =
2017-01-19 04:37:12 -             xaxis(
2017-01-19 04:37:12 -                 title = "Year",
2017-01-19 04:37:12 -                 titleTextStyle = TextStyle(color = "#333")
2017-01-19 04:37:12 -             ),
2017-01-19 04:37:12 -         yaxis = Axis(minValue = 0)
2017-01-19 04:37:12 -     )
2017-01-19 04:37:12 - x
2017-01-19 04:37:12 - |> Chart.Line
2017-01-19 04:37:12 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 04:37:12 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 04:37:12 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 04:37:12 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 04:37:12 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 06:07:16 - let n = 512.0
2017-01-19 06:07:16 - let fo = 1.0/n
2017-01-19 06:07:16 - let x = {0.0 .. (n-1.0)}
2017-01-19 06:07:16 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 06:07:16 - x
2017-01-19 06:07:16 - |> Chart.Line
2017-01-19 14:06:42 - let n = 512.0
2017-01-19 14:06:42 - let fo = 1.0/n
2017-01-19 14:06:42 - let x = {0.0 .. (n-1.0)}
2017-01-19 14:06:42 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 14:06:42 - x
2017-01-19 14:06:42 - |> Chart.Line
2017-01-19 14:14:53 - let n = 512.0
2017-01-19 14:14:53 - let fo = 1.0/n
2017-01-19 14:14:53 - let x = {0.0 .. (n-1.0)}
2017-01-19 14:14:53 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 14:14:53 - let options =
2017-01-19 14:14:53 -   Options
2017-01-19 14:14:53 -     ( title = "Company Performance", curveType = "function",
2017-01-19 14:14:53 -       legend = Legend(position = "bottom") )
2017-01-19 14:14:53 - x
2017-01-19 14:14:53 - |> Chart.Line
2017-01-19 14:14:53 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 14:14:53 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 14:14:53 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 14:14:53 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 14:14:53 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 14:15:20 - let n = 512.0
2017-01-19 14:15:20 - let fo = 1.0/n
2017-01-19 14:15:20 - let x = {0.0 .. (n-1.0)}
2017-01-19 14:15:20 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 14:15:20 - let options =
2017-01-19 14:15:20 -   Options
2017-01-19 14:15:20 -     ( title = "Company Performance",
2017-01-19 14:15:20 -       legend = Legend(position = "bottom") )
2017-01-19 14:15:20 - x
2017-01-19 14:15:20 - |> Chart.Line
2017-01-19 14:15:20 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 14:15:20 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 14:15:20 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 14:15:20 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 14:15:20 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 14:19:02 - let n = 512.0
2017-01-19 14:19:02 - let fo = 1.0/n
2017-01-19 14:19:02 - let x = {0.0 .. (n-1.0)}
2017-01-19 14:19:02 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 14:19:02 - x
2017-01-19 14:19:02 - |> Chart.Line
2017-01-19 16:25:16 - let n = 512.0
2017-01-19 16:25:16 - let fo = 1.0/n
2017-01-19 16:25:16 - let x = {0.0 .. (n-1.0)}
2017-01-19 16:25:16 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 16:25:16 - x
2017-01-19 16:25:16 - |> Chart.Line
2017-01-19 16:25:16 - |> Chart.WithLabels ["Sales"; "Expenses"]
2017-01-19 16:25:30 - let n = 512.0
2017-01-19 16:25:30 - let fo = 1.0/n
2017-01-19 16:25:30 - let x = {0.0 .. (n-1.0)}
2017-01-19 16:25:30 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 16:25:30 - x
2017-01-19 16:25:30 - |> Chart.Line
2017-01-19 16:25:30 - |> Chart.WithLabels ["Sales"; "Expenses"]
2017-01-19 16:25:59 - let n = 512.0
2017-01-19 16:25:59 - let fo = 1.0/n
2017-01-19 16:25:59 - let x = {0.0 .. (n-1.0)}
2017-01-19 16:25:59 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 16:25:59 - let options =
2017-01-19 16:25:59 -         Options(
2017-01-19 16:25:59 -             title = "Company Performance",
2017-01-19 16:25:59 -             curveType = "function",
2017-01-19 16:25:59 -             legend = Legend(position = "bottom")
2017-01-19 16:25:59 -         )
2017-01-19 16:25:59 - x
2017-01-19 16:25:59 - |> Chart.Line
2017-01-19 16:25:59 - |> Chart.WithLabels ["Sales"; "Expenses"]
2017-01-19 16:25:59 - |> Chart.WithOptions options
2017-01-19 16:25:59 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 16:25:59 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 16:25:59 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 16:25:59 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 16:25:59 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 16:26:35 - nuget install XPlot.Plotly
2017-01-19 16:26:35 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 16:26:35 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 16:26:35 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 16:26:35 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 16:26:35 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 16:26:44 - install XPlot.Plotly
2017-01-19 16:26:44 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 16:26:44 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 16:26:44 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 16:26:44 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 16:26:44 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 16:27:53 - #load "Packet.fsx"
2017-01-19 16:27:53 - Paket.Package["XPlot.Plotly"]
2017-01-19 16:27:53 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 16:27:53 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 16:27:53 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 16:27:53 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 16:27:53 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 16:28:39 - #load "Paket.fsx"
2017-01-19 16:28:39 - Paket.Package["XPlot.Plotly"]
2017-01-19 16:29:39 - open System
2017-01-19 16:29:39 - #r "./packages/XPlot.Plotly/lib/net45/XPlot.Plotly.dll"
2017-01-19 16:29:39 - open XPlot.Plotly
2017-01-19 16:29:41 - let n = 512.0
2017-01-19 16:29:41 - let fo = 1.0/n
2017-01-19 16:29:41 - let x = {0.0 .. (n-1.0)}
2017-01-19 16:29:41 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 16:29:41 - let options =
2017-01-19 16:29:41 -         Options(
2017-01-19 16:29:41 -             title = "Company Performance",
2017-01-19 16:29:41 -             curveType = "function",
2017-01-19 16:29:41 -             legend = Legend(position = "bottom")
2017-01-19 16:29:41 -         )
2017-01-19 16:29:41 - x
2017-01-19 16:29:41 - |> Chart.Line
2017-01-19 16:29:41 - |> Chart.WithLabels ["Sales"; "Expenses"]
2017-01-19 16:29:41 - |> Chart.WithOptions options
2017-01-19 16:29:41 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 16:29:41 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 16:29:41 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 16:29:41 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 16:29:41 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 16:32:27 - open System
2017-01-19 16:32:27 - #r "./packages/XPlot.Plotly/lib/net45/XPlot.Plotly.dll"
2017-01-19 16:32:27 - open XPlot.GoogleCharts
2017-01-19 16:32:27 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 16:32:27 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 16:32:27 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 16:32:27 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 16:32:27 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 16:36:55 - open System
2017-01-19 16:36:55 - #r "./packages/XPlot.Plotly/lib/net45/XPlot.Plotly.dll"
2017-01-19 16:36:55 - open XPlot.Plotly
2017-01-19 16:37:03 - let n = 512.0
2017-01-19 16:37:03 - let fo = 1.0/n
2017-01-19 16:37:03 - let x = {0.0 .. (n-1.0)}
2017-01-19 16:37:03 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 16:37:03 - x
2017-01-19 16:37:03 - |> Chart.Line
2017-01-19 16:46:26 - #load "Paket.fsx"
2017-01-19 16:46:26 - Paket.Package["XPlot.Plotly","XPlot.GoogleCharts"]
2017-01-19 16:46:27 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 16:46:27 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 16:46:27 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 16:46:27 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 16:46:27 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 16:46:40 - #load "Paket.fsx"
2017-01-19 16:46:40 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts"]
2017-01-19 16:46:47 - open System
2017-01-19 16:46:47 - #r "./packages/XPlot.GoogleCharts/lib/net45/XPlot.GoogleCharts.dll"
2017-01-19 16:46:47 - open XPlot.GoogleCharts
2017-01-19 16:46:48 - let n = 512.0
2017-01-19 16:46:48 - let fo = 1.0/n
2017-01-19 16:46:48 - let x = {0.0 .. (n-1.0)}
2017-01-19 16:46:48 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 16:46:48 - x
2017-01-19 16:46:48 - |> Chart.Line
2017-01-19 16:46:58 - let n = 512.0
2017-01-19 16:46:58 - let fo = 1.0/n
2017-01-19 16:46:58 - let x = {0.0 .. (n-1.0)}
2017-01-19 16:46:58 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 16:46:58 - x
2017-01-19 16:46:58 - |> Chart.Line
2017-01-19 16:46:58 - |> Chart.Show
2017-01-19 16:46:58 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 16:46:58 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41101af0 + 0x00183> in <filename unknown>:0 
2017-01-19 16:46:58 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41083470 + 0x00047> in <filename unknown>:0 
2017-01-19 16:46:58 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40f219d0 + 0x00cf3> in <filename unknown>:0 
2017-01-19 16:46:58 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x414134f0 + 0x00287> in <filename unknown>:0 
2017-01-19 16:47:26 - #load "Paket.fsx"
2017-01-19 16:47:26 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts"]
2017-01-19 16:47:29 - open System
2017-01-19 16:47:29 - #r "./packages/XPlot.Plotly/lib/net45/XPlot.Plotly.dll"
2017-01-19 16:47:29 - open XPlot.Plotly
2017-01-19 16:47:29 - let n = 512.0
2017-01-19 16:47:29 - let fo = 1.0/n
2017-01-19 16:47:29 - let x = {0.0 .. (n-1.0)}
2017-01-19 16:47:29 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 16:47:29 - x
2017-01-19 16:47:29 - |> Chart.Line
2017-01-19 16:48:31 - let n = 512.0
2017-01-19 16:48:31 - let fo = 1.0/n
2017-01-19 16:48:31 - let x = {0.0 .. (n-1.0)}
2017-01-19 16:48:31 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 16:48:38 - shutdown request
2017-01-19 16:48:39 - // include directory, this will be replaced by the kernel
2017-01-19 16:48:39 - #I "/IfSharp/bin"
2017-01-19 16:48:39 - // load base dlls
2017-01-19 16:48:39 - #r "IfSharp.Kernel.dll"
2017-01-19 16:48:39 - #r "NetMQ.dll"
2017-01-19 16:48:39 - // open the global functions and methods
2017-01-19 16:48:39 - open IfSharp.Kernel
2017-01-19 16:48:39 - open IfSharp.Kernel.Globals
2017-01-19 16:48:41 - F# Interactive for F# 4.1
2017-01-19 16:48:41 - Freely distributed under the Apache 2.0 Open Source License
2017-01-19 16:48:41 - For help type #help;;
2017-01-19 16:48:41 - > val it : ResizeArray<System.Type * (obj -> seq<string * string> * string)> =
2017-01-19 16:48:41 -   seq []
2017-01-19 16:48:41 - --> Added '/IfSharp/bin' to library include path
2017-01-19 16:48:41 - --> Referenced '/IfSharp/bin/IfSharp.Kernel.dll' (file may be locked by F# Interactive process)
2017-01-19 16:48:41 - --> Referenced '/IfSharp/bin/NetMQ.dll' (file may be locked by F# Interactive process)
2017-01-19 16:48:41 - #load "Paket.fsx"
2017-01-19 16:48:41 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts"]
2017-01-19 16:48:44 - open System
2017-01-19 16:48:44 - #r "./packages/XPlot.Plotly/lib/net45/XPlot.Plotly.dll"
2017-01-19 16:48:44 - open XPlot.Plotly
2017-01-19 16:48:45 - let n = 512.0
2017-01-19 16:48:45 - let fo = 1.0/n
2017-01-19 16:48:45 - let x = {0.0 .. (n-1.0)}
2017-01-19 16:48:45 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 16:49:27 - let styledTrace1 =
2017-01-19 16:49:27 -     Scatter(
2017-01-19 16:49:27 -         x = [52698; 43117],
2017-01-19 16:49:27 -         y = [53; 31],
2017-01-19 16:49:27 -         mode = "markers",
2017-01-19 16:49:27 -         name = "North America",
2017-01-19 16:49:27 -         text = ["United States"; "Canada"],
2017-01-19 16:49:27 -         marker =
2017-01-19 16:49:27 -             Marker(
2017-01-19 16:49:27 -                 color = "rgb(164, 194, 244)",
2017-01-19 16:49:27 -                 size = 12,
2017-01-19 16:49:27 -                 line =
2017-01-19 16:49:27 -                     Line(
2017-01-19 16:49:27 -                         color = "white",
2017-01-19 16:49:27 -                         width = 0.5
2017-01-19 16:49:27 -                     )
2017-01-19 16:49:27 -             )
2017-01-19 16:49:27 -     )
2017-01-19 16:49:27 - let styledLayout =
2017-01-19 16:49:27 -     Layout(
2017-01-19 16:49:27 -         title = "Quarter 1 Growth",
2017-01-19 16:49:27 -         xaxis =
2017-01-19 16:49:27 -             Xaxis(
2017-01-19 16:49:27 -                 title = "GDP per Capita",
2017-01-19 16:49:27 -                 showgrid = false,
2017-01-19 16:49:27 -                 zeroline = false
2017-01-19 16:49:27 -             ),
2017-01-19 16:49:27 -         yaxis =
2017-01-19 16:49:27 -             Yaxis(
2017-01-19 16:49:27 -                 title = "Percent",
2017-01-19 16:49:27 -                 showline = false
2017-01-19 16:49:27 -             )
2017-01-19 16:49:27 -     )
2017-01-19 16:49:27 - [styledTrace1]
2017-01-19 16:49:27 - |> Chart.Plot
2017-01-19 16:49:27 - |> Chart.WithLayout styledLayout
2017-01-19 16:49:27 - |> Chart.WithWidth 700
2017-01-19 16:49:27 - |> Chart.WithHeight 500    
2017-01-19 16:49:45 - let styledTrace1 =
2017-01-19 16:49:45 -     Scatter(
2017-01-19 16:49:45 -         x = [52698; 43117],
2017-01-19 16:49:45 -         y = [53; 31],
2017-01-19 16:49:45 -         mode = "markers",
2017-01-19 16:49:45 -         name = "North America",
2017-01-19 16:49:45 -         text = ["United States"; "Canada"],
2017-01-19 16:49:45 -         marker =
2017-01-19 16:49:45 -             Marker(
2017-01-19 16:49:45 -                 color = "rgb(164, 194, 244)",
2017-01-19 16:49:45 -                 size = 12,
2017-01-19 16:49:45 -                 line =
2017-01-19 16:49:45 -                     Line(
2017-01-19 16:49:45 -                         color = "white",
2017-01-19 16:49:45 -                         width = 0.5
2017-01-19 16:49:45 -                     )
2017-01-19 16:49:45 -             )
2017-01-19 16:49:45 -     )
2017-01-19 16:49:45 - let styledLayout =
2017-01-19 16:49:45 -     Layout(
2017-01-19 16:49:45 -         title = "Quarter 1 Growth",
2017-01-19 16:49:45 -         xaxis =
2017-01-19 16:49:45 -             Xaxis(
2017-01-19 16:49:45 -                 title = "GDP per Capita",
2017-01-19 16:49:45 -                 showgrid = false,
2017-01-19 16:49:45 -                 zeroline = false
2017-01-19 16:49:45 -             ),
2017-01-19 16:49:45 -         yaxis =
2017-01-19 16:49:45 -             Yaxis(
2017-01-19 16:49:45 -                 title = "Percent",
2017-01-19 16:49:45 -                 showline = false
2017-01-19 16:49:45 -             )
2017-01-19 16:49:45 -     )
2017-01-19 16:49:45 - [styledTrace1]
2017-01-19 16:49:45 - |> Chart.Plot
2017-01-19 16:49:45 - |> Chart.WithLayout styledLayout
2017-01-19 16:49:45 - |> Chart.WithWidth 700
2017-01-19 16:49:45 - |> Chart.WithHeight 500    
2017-01-19 16:49:51 - let styledTrace1 =
2017-01-19 16:49:51 -     Scatter(
2017-01-19 16:49:51 -         x = [52698; 43117],
2017-01-19 16:49:51 -         y = [53; 31],
2017-01-19 16:49:51 -         mode = "markers",
2017-01-19 16:49:51 -         name = "North America",
2017-01-19 16:49:51 -         text = ["United States"; "Canada"],
2017-01-19 16:49:51 -         marker =
2017-01-19 16:49:51 -             Marker(
2017-01-19 16:49:51 -                 color = "rgb(164, 194, 244)",
2017-01-19 16:49:51 -                 size = 12,
2017-01-19 16:49:51 -                 line =
2017-01-19 16:49:51 -                     Line(
2017-01-19 16:49:51 -                         color = "white",
2017-01-19 16:49:51 -                         width = 0.5
2017-01-19 16:49:51 -                     )
2017-01-19 16:49:51 -             )
2017-01-19 16:49:51 -     )
2017-01-19 16:49:51 - let styledLayout =
2017-01-19 16:49:51 -     Layout(
2017-01-19 16:49:51 -         title = "Quarter 1 Growth",
2017-01-19 16:49:51 -         xaxis =
2017-01-19 16:49:51 -             Xaxis(
2017-01-19 16:49:51 -                 title = "GDP per Capita",
2017-01-19 16:49:51 -                 showgrid = false,
2017-01-19 16:49:51 -                 zeroline = false
2017-01-19 16:49:51 -             ),
2017-01-19 16:49:51 -         yaxis =
2017-01-19 16:49:51 -             Yaxis(
2017-01-19 16:49:51 -                 title = "Percent",
2017-01-19 16:49:51 -                 showline = false
2017-01-19 16:49:51 -             )
2017-01-19 16:49:51 -     )
2017-01-19 16:49:51 - [styledTrace1]
2017-01-19 16:49:51 - |> Chart.Plot
2017-01-19 16:49:51 -   
2017-01-19 16:50:29 - let styledTrace1 =
2017-01-19 16:50:29 -     Scatter(
2017-01-19 16:50:29 -         x = [52698; 43117],
2017-01-19 16:50:29 -         y = [53; 31],
2017-01-19 16:50:29 -         mode = "markers",
2017-01-19 16:50:29 -         name = "North America",
2017-01-19 16:50:29 -         text = ["United States"; "Canada"],
2017-01-19 16:50:29 -         marker =
2017-01-19 16:50:29 -             Marker(
2017-01-19 16:50:29 -                 color = "rgb(164, 194, 244)",
2017-01-19 16:50:29 -                 size = 12,
2017-01-19 16:50:29 -                 line =
2017-01-19 16:50:29 -                     Line(
2017-01-19 16:50:29 -                         color = "white",
2017-01-19 16:50:29 -                         width = 0.5
2017-01-19 16:50:29 -                     )
2017-01-19 16:50:29 -             )
2017-01-19 16:50:29 -     )
2017-01-19 16:50:29 - let styledTrace2 =
2017-01-19 16:50:29 -     Scatter(
2017-01-19 16:50:29 -         x = [39317; 37236; 35650; 30066; 29570; 27159; 23557; 21046; 18007],
2017-01-19 16:50:29 -         y = [33; 20; 13; 19; 27; 19; 49; 44; 38],
2017-01-19 16:50:29 -         mode = "markers",
2017-01-19 16:50:29 -         name = "Europe",
2017-01-19 16:50:29 -         text =
2017-01-19 16:50:29 -             ["Germany"; "Britain"; "France"; "Spain"; "Italy"; "Czech Rep."; "Greece";
2017-01-19 16:50:29 -              "Poland"],
2017-01-19 16:50:29 -         marker =
2017-01-19 16:50:29 -             Marker(
2017-01-19 16:50:29 -                 color = "rgb(255, 217, 102)",
2017-01-19 16:50:29 -                 size = 12,
2017-01-19 16:50:29 -                 line=
2017-01-19 16:50:29 -                     Line(
2017-01-19 16:50:29 -                         color = "white",
2017-01-19 16:50:29 -                         width = 0.5
2017-01-19 16:50:29 -                     )
2017-01-19 16:50:29 -             )
2017-01-19 16:50:29 -     )
2017-01-19 16:50:29 - let styledTrace3 = 
2017-01-19 16:50:29 -     Scatter(
2017-01-19 16:50:29 -         x = [42952; 37037; 33106; 17478; 9813; 5253; 4692; 3899],
2017-01-19 16:50:29 -         y = [23; 42; 54; 89; 14; 99; 93; 70],
2017-01-19 16:50:29 -         mode = "markers",
2017-01-19 16:50:29 -         name = "Asia/Pacific",
2017-01-19 16:50:29 -         text =
2017-01-19 16:50:29 -             ["Australia"; "Japan"; "South Korea"; "Malaysia"; "China"; "Indonesia";
2017-01-19 16:50:29 -              "Philippines"; "India"],
2017-01-19 16:50:29 -         marker =
2017-01-19 16:50:29 -             Marker(
2017-01-19 16:50:29 -                 color = "rgb(234, 153, 153)",
2017-01-19 16:50:29 -                 size = 12,
2017-01-19 16:50:29 -                 line =
2017-01-19 16:50:29 -                     Line(
2017-01-19 16:50:29 -                         color = "white",
2017-01-19 16:50:29 -                         width = 0.5
2017-01-19 16:50:29 -                     )
2017-01-19 16:50:29 -             )
2017-01-19 16:50:29 -     )
2017-01-19 16:50:29 - let styledTrace4 =
2017-01-19 16:50:29 -     Scatter(
2017-01-19 16:50:29 -         x = [19097; 18601; 15595; 13546; 12026; 7434; 5419],
2017-01-19 16:50:29 -         y = [43; 47; 56; 80; 86; 93; 80],
2017-01-19 16:50:29 -         mode = "markers",
2017-01-19 16:50:29 -         name = "Latin America",
2017-01-19 16:50:29 -         text =
2017-01-19 16:50:29 -             ["Chile"; "Argentina"; "Mexico"; "Venezuela"; "Venezuela"; "El Salvador";
2017-01-19 16:50:29 -              "Bolivia"],
2017-01-19 16:50:29 -         marker = 
2017-01-19 16:50:29 -             Marker(
2017-01-19 16:50:29 -                 color = "rgb(142, 124, 195)",
2017-01-19 16:50:29 -                 size = 12,
2017-01-19 16:50:29 -                 line =
2017-01-19 16:50:29 -                     Line(
2017-01-19 16:50:29 -                         color = "white",
2017-01-19 16:50:29 -                         width = 0.5
2017-01-19 16:50:29 -                     )
2017-01-19 16:50:29 -             )
2017-01-19 16:50:29 -     )
2017-01-19 16:50:29 - let styledLayout =
2017-01-19 16:50:29 -     Layout(
2017-01-19 16:50:29 -         title = "Quarter 1 Growth",
2017-01-19 16:50:29 -         xaxis =
2017-01-19 16:50:29 -             Xaxis(
2017-01-19 16:50:29 -                 title = "GDP per Capita",
2017-01-19 16:50:29 -                 showgrid = false,
2017-01-19 16:50:29 -                 zeroline = false
2017-01-19 16:50:29 -             ),
2017-01-19 16:50:29 -         yaxis =
2017-01-19 16:50:29 -             Yaxis(
2017-01-19 16:50:29 -                 title = "Percent",
2017-01-19 16:50:29 -                 showline = false
2017-01-19 16:50:29 -             )
2017-01-19 16:50:29 -     )
2017-01-19 16:50:29 - [styledTrace1; styledTrace2; styledTrace3; styledTrace4]
2017-01-19 16:50:29 - |> Chart.Plot
2017-01-19 16:50:29 - |> Chart.WithLayout styledLayout
2017-01-19 16:50:29 - |> Chart.WithWidth 700
2017-01-19 16:50:29 - |> Chart.WithHeight 500
2017-01-19 16:51:04 - ["giraffes", 20; "orangutans", 14; "monkeys", 23]
2017-01-19 16:51:04 - |> Chart.Bar
2017-01-19 16:51:04 - |> Chart.WithLayout (Layout(title = "Basic Bar Chart"))
2017-01-19 16:51:04 - |> Chart.WithHeight 300
2017-01-19 16:51:04 - |> Chart.WithWidth 400
2017-01-19 17:49:45 - let styledTrace1 =
2017-01-19 17:49:45 -     Scatter(
2017-01-19 17:49:45 -         x = [52698; 43117],
2017-01-19 17:49:45 -         y = [53; 31],
2017-01-19 17:49:45 -         mode = "markers",
2017-01-19 17:49:45 -         name = "North America",
2017-01-19 17:49:45 -         text = ["United States"; "Canada"],
2017-01-19 17:49:45 -         marker =
2017-01-19 17:49:45 -             Marker(
2017-01-19 17:49:45 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:49:45 -                 size = 12,
2017-01-19 17:49:45 -                 line =
2017-01-19 17:49:45 -                     Line(
2017-01-19 17:49:45 -                         color = "white",
2017-01-19 17:49:45 -                         width = 0.5
2017-01-19 17:49:45 -                     )
2017-01-19 17:49:45 -             )
2017-01-19 17:49:45 -     )
2017-01-19 17:49:45 - let styledTrace2 =
2017-01-19 17:49:45 -     Scatter(
2017-01-19 17:49:45 -         x = [39317; 37236; 35650; 30066; 29570; 27159; 23557; 21046; 18007],
2017-01-19 17:49:45 -         y = [33; 20; 13; 19; 27; 19; 49; 44; 38],
2017-01-19 17:49:45 -         mode = "markers",
2017-01-19 17:49:45 -         name = "Europe",
2017-01-19 17:49:45 -         text =
2017-01-19 17:49:45 -             ["Germany"; "Britain"; "France"; "Spain"; "Italy"; "Czech Rep."; "Greece";
2017-01-19 17:49:45 -              "Poland"],
2017-01-19 17:49:45 -         marker =
2017-01-19 17:49:45 -             Marker(
2017-01-19 17:49:45 -                 color = "rgb(255, 217, 102)",
2017-01-19 17:49:45 -                 size = 12,
2017-01-19 17:49:45 -                 line=
2017-01-19 17:49:45 -                     Line(
2017-01-19 17:49:45 -                         color = "white",
2017-01-19 17:49:45 -                         width = 0.5
2017-01-19 17:49:45 -                     )
2017-01-19 17:49:45 -             )
2017-01-19 17:49:45 -     )
2017-01-19 17:49:45 - let styledTrace3 = 
2017-01-19 17:49:45 -     Scatter(
2017-01-19 17:49:45 -         x = [42952; 37037; 33106; 17478; 9813; 5253; 4692; 3899],
2017-01-19 17:49:45 -         y = [23; 42; 54; 89; 14; 99; 93; 70],
2017-01-19 17:49:45 -         mode = "markers",
2017-01-19 17:49:45 -         name = "Asia/Pacific",
2017-01-19 17:49:45 -         text =
2017-01-19 17:49:45 -             ["Australia"; "Japan"; "South Korea"; "Malaysia"; "China"; "Indonesia";
2017-01-19 17:49:45 -              "Philippines"; "India"],
2017-01-19 17:49:45 -         marker =
2017-01-19 17:49:45 -             Marker(
2017-01-19 17:49:45 -                 color = "rgb(234, 153, 153)",
2017-01-19 17:49:45 -                 size = 12,
2017-01-19 17:49:45 -                 line =
2017-01-19 17:49:45 -                     Line(
2017-01-19 17:49:45 -                         color = "white",
2017-01-19 17:49:45 -                         width = 0.5
2017-01-19 17:49:45 -                     )
2017-01-19 17:49:45 -             )
2017-01-19 17:49:45 -     )
2017-01-19 17:49:45 - let styledTrace4 =
2017-01-19 17:49:45 -     Scatter(
2017-01-19 17:49:45 -         x = [19097; 18601; 15595; 13546; 12026; 7434; 5419],
2017-01-19 17:49:45 -         y = [43; 47; 56; 80; 86; 93; 80],
2017-01-19 17:49:45 -         mode = "markers",
2017-01-19 17:49:45 -         name = "Latin America",
2017-01-19 17:49:45 -         text =
2017-01-19 17:49:45 -             ["Chile"; "Argentina"; "Mexico"; "Venezuela"; "Venezuela"; "El Salvador";
2017-01-19 17:49:45 -              "Bolivia"],
2017-01-19 17:49:45 -         marker = 
2017-01-19 17:49:45 -             Marker(
2017-01-19 17:49:45 -                 color = "rgb(142, 124, 195)",
2017-01-19 17:49:45 -                 size = 12,
2017-01-19 17:49:45 -                 line =
2017-01-19 17:49:45 -                     Line(
2017-01-19 17:49:45 -                         color = "white",
2017-01-19 17:49:45 -                         width = 0.5
2017-01-19 17:49:45 -                     )
2017-01-19 17:49:45 -             )
2017-01-19 17:49:45 -     )
2017-01-19 17:49:45 - let styledLayout =
2017-01-19 17:49:45 -     Layout(
2017-01-19 17:49:45 -         title = "Quarter 1 Growth",
2017-01-19 17:49:45 -         xaxis =
2017-01-19 17:49:45 -             Xaxis(
2017-01-19 17:49:45 -                 title = "GDP per Capita",
2017-01-19 17:49:45 -                 showgrid = false,
2017-01-19 17:49:45 -                 zeroline = false
2017-01-19 17:49:45 -             ),
2017-01-19 17:49:45 -         yaxis =
2017-01-19 17:49:45 -             Yaxis(
2017-01-19 17:49:45 -                 title = "Percent",
2017-01-19 17:49:45 -                 showline = false
2017-01-19 17:49:45 -             )
2017-01-19 17:49:45 -     )
2017-01-19 17:49:45 - [styledTrace1; styledTrace2; styledTrace3; styledTrace4]
2017-01-19 17:49:45 - |> Chart.Plot
2017-01-19 17:49:57 - let styledTrace1 =
2017-01-19 17:49:57 -     Scatter(
2017-01-19 17:49:57 -         x = [52698; 43117],
2017-01-19 17:49:57 -         y = [53; 31],
2017-01-19 17:49:57 -         mode = "markers",
2017-01-19 17:49:57 -         name = "North America",
2017-01-19 17:49:57 -         text = ["United States"; "Canada"],
2017-01-19 17:49:57 -         marker =
2017-01-19 17:49:57 -             Marker(
2017-01-19 17:49:57 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:49:57 -                 size = 12,
2017-01-19 17:49:57 -                 line =
2017-01-19 17:49:57 -                     Line(
2017-01-19 17:49:57 -                         color = "white",
2017-01-19 17:49:57 -                         width = 0.5
2017-01-19 17:49:57 -                     )
2017-01-19 17:49:57 -             )
2017-01-19 17:49:57 -     )
2017-01-19 17:49:57 - let styledTrace2 =
2017-01-19 17:49:57 -     Scatter(
2017-01-19 17:49:57 -         x = [39317; 37236; 35650; 30066; 29570; 27159; 23557; 21046; 18007],
2017-01-19 17:49:57 -         y = [33; 20; 13; 19; 27; 19; 49; 44; 38],
2017-01-19 17:49:57 -         mode = "markers",
2017-01-19 17:49:57 -         name = "Europe",
2017-01-19 17:49:57 -         text =
2017-01-19 17:49:57 -             ["Germany"; "Britain"; "France"; "Spain"; "Italy"; "Czech Rep."; "Greece";
2017-01-19 17:49:57 -              "Poland"],
2017-01-19 17:49:57 -         marker =
2017-01-19 17:49:57 -             Marker(
2017-01-19 17:49:57 -                 color = "rgb(255, 217, 102)",
2017-01-19 17:49:57 -                 size = 12,
2017-01-19 17:49:57 -                 line=
2017-01-19 17:49:57 -                     Line(
2017-01-19 17:49:57 -                         color = "white",
2017-01-19 17:49:57 -                         width = 0.5
2017-01-19 17:49:57 -                     )
2017-01-19 17:49:57 -             )
2017-01-19 17:49:57 -     )
2017-01-19 17:49:57 - let styledTrace3 = 
2017-01-19 17:49:57 -     Scatter(
2017-01-19 17:49:57 -         x = [42952; 37037; 33106; 17478; 9813; 5253; 4692; 3899],
2017-01-19 17:49:57 -         y = [23; 42; 54; 89; 14; 99; 93; 70],
2017-01-19 17:49:57 -         mode = "markers",
2017-01-19 17:49:57 -         name = "Asia/Pacific",
2017-01-19 17:49:57 -         text =
2017-01-19 17:49:57 -             ["Australia"; "Japan"; "South Korea"; "Malaysia"; "China"; "Indonesia";
2017-01-19 17:49:57 -              "Philippines"; "India"],
2017-01-19 17:49:57 -         marker =
2017-01-19 17:49:57 -             Marker(
2017-01-19 17:49:57 -                 color = "rgb(234, 153, 153)",
2017-01-19 17:49:57 -                 size = 12,
2017-01-19 17:49:57 -                 line =
2017-01-19 17:49:57 -                     Line(
2017-01-19 17:49:57 -                         color = "white",
2017-01-19 17:49:57 -                         width = 0.5
2017-01-19 17:49:57 -                     )
2017-01-19 17:49:57 -             )
2017-01-19 17:49:57 -     )
2017-01-19 17:49:57 - let styledTrace4 =
2017-01-19 17:49:57 -     Scatter(
2017-01-19 17:49:57 -         x = [19097; 18601; 15595; 13546; 12026; 7434; 5419],
2017-01-19 17:49:57 -         y = [43; 47; 56; 80; 86; 93; 80],
2017-01-19 17:49:57 -         mode = "markers",
2017-01-19 17:49:57 -         name = "Latin America",
2017-01-19 17:49:57 -         text =
2017-01-19 17:49:57 -             ["Chile"; "Argentina"; "Mexico"; "Venezuela"; "Venezuela"; "El Salvador";
2017-01-19 17:49:57 -              "Bolivia"],
2017-01-19 17:49:57 -         marker = 
2017-01-19 17:49:57 -             Marker(
2017-01-19 17:49:57 -                 color = "rgb(142, 124, 195)",
2017-01-19 17:49:57 -                 size = 12,
2017-01-19 17:49:57 -                 line =
2017-01-19 17:49:57 -                     Line(
2017-01-19 17:49:57 -                         color = "white",
2017-01-19 17:49:57 -                         width = 0.5
2017-01-19 17:49:57 -                     )
2017-01-19 17:49:57 -             )
2017-01-19 17:49:57 -     )
2017-01-19 17:49:57 - let styledLayout =
2017-01-19 17:49:57 -     Layout(
2017-01-19 17:49:57 -         title = "Quarter 1 Growth",
2017-01-19 17:49:57 -         xaxis =
2017-01-19 17:49:57 -             Xaxis(
2017-01-19 17:49:57 -                 title = "GDP per Capita",
2017-01-19 17:49:57 -                 showgrid = false,
2017-01-19 17:49:57 -                 zeroline = false
2017-01-19 17:49:57 -             ),
2017-01-19 17:49:57 -         yaxis =
2017-01-19 17:49:57 -             Yaxis(
2017-01-19 17:49:57 -                 title = "Percent",
2017-01-19 17:49:57 -                 showline = false
2017-01-19 17:49:57 -             )
2017-01-19 17:49:57 -     )
2017-01-19 17:49:57 - [styledTrace1; styledTrace2; styledTrace3; styledTrace4]
2017-01-19 17:49:57 - |> Chart.Plot
2017-01-19 17:49:57 - |> Chart.Show
2017-01-19 17:50:01 - let styledTrace1 =
2017-01-19 17:50:01 -     Scatter(
2017-01-19 17:50:01 -         x = [52698; 43117],
2017-01-19 17:50:01 -         y = [53; 31],
2017-01-19 17:50:01 -         mode = "markers",
2017-01-19 17:50:01 -         name = "North America",
2017-01-19 17:50:01 -         text = ["United States"; "Canada"],
2017-01-19 17:50:01 -         marker =
2017-01-19 17:50:01 -             Marker(
2017-01-19 17:50:01 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:50:01 -                 size = 12,
2017-01-19 17:50:01 -                 line =
2017-01-19 17:50:01 -                     Line(
2017-01-19 17:50:01 -                         color = "white",
2017-01-19 17:50:01 -                         width = 0.5
2017-01-19 17:50:01 -                     )
2017-01-19 17:50:01 -             )
2017-01-19 17:50:01 -     )
2017-01-19 17:50:01 - let styledTrace2 =
2017-01-19 17:50:01 -     Scatter(
2017-01-19 17:50:01 -         x = [39317; 37236; 35650; 30066; 29570; 27159; 23557; 21046; 18007],
2017-01-19 17:50:01 -         y = [33; 20; 13; 19; 27; 19; 49; 44; 38],
2017-01-19 17:50:01 -         mode = "markers",
2017-01-19 17:50:01 -         name = "Europe",
2017-01-19 17:50:01 -         text =
2017-01-19 17:50:01 -             ["Germany"; "Britain"; "France"; "Spain"; "Italy"; "Czech Rep."; "Greece";
2017-01-19 17:50:01 -              "Poland"],
2017-01-19 17:50:01 -         marker =
2017-01-19 17:50:01 -             Marker(
2017-01-19 17:50:01 -                 color = "rgb(255, 217, 102)",
2017-01-19 17:50:01 -                 size = 12,
2017-01-19 17:50:01 -                 line=
2017-01-19 17:50:01 -                     Line(
2017-01-19 17:50:01 -                         color = "white",
2017-01-19 17:50:01 -                         width = 0.5
2017-01-19 17:50:01 -                     )
2017-01-19 17:50:01 -             )
2017-01-19 17:50:01 -     )
2017-01-19 17:50:01 - let styledTrace3 = 
2017-01-19 17:50:01 -     Scatter(
2017-01-19 17:50:01 -         x = [42952; 37037; 33106; 17478; 9813; 5253; 4692; 3899],
2017-01-19 17:50:01 -         y = [23; 42; 54; 89; 14; 99; 93; 70],
2017-01-19 17:50:01 -         mode = "markers",
2017-01-19 17:50:01 -         name = "Asia/Pacific",
2017-01-19 17:50:01 -         text =
2017-01-19 17:50:01 -             ["Australia"; "Japan"; "South Korea"; "Malaysia"; "China"; "Indonesia";
2017-01-19 17:50:01 -              "Philippines"; "India"],
2017-01-19 17:50:01 -         marker =
2017-01-19 17:50:01 -             Marker(
2017-01-19 17:50:01 -                 color = "rgb(234, 153, 153)",
2017-01-19 17:50:01 -                 size = 12,
2017-01-19 17:50:01 -                 line =
2017-01-19 17:50:01 -                     Line(
2017-01-19 17:50:01 -                         color = "white",
2017-01-19 17:50:01 -                         width = 0.5
2017-01-19 17:50:01 -                     )
2017-01-19 17:50:01 -             )
2017-01-19 17:50:01 -     )
2017-01-19 17:50:01 - let styledTrace4 =
2017-01-19 17:50:01 -     Scatter(
2017-01-19 17:50:01 -         x = [19097; 18601; 15595; 13546; 12026; 7434; 5419],
2017-01-19 17:50:01 -         y = [43; 47; 56; 80; 86; 93; 80],
2017-01-19 17:50:01 -         mode = "markers",
2017-01-19 17:50:01 -         name = "Latin America",
2017-01-19 17:50:01 -         text =
2017-01-19 17:50:01 -             ["Chile"; "Argentina"; "Mexico"; "Venezuela"; "Venezuela"; "El Salvador";
2017-01-19 17:50:01 -              "Bolivia"],
2017-01-19 17:50:01 -         marker = 
2017-01-19 17:50:01 -             Marker(
2017-01-19 17:50:01 -                 color = "rgb(142, 124, 195)",
2017-01-19 17:50:01 -                 size = 12,
2017-01-19 17:50:01 -                 line =
2017-01-19 17:50:01 -                     Line(
2017-01-19 17:50:01 -                         color = "white",
2017-01-19 17:50:01 -                         width = 0.5
2017-01-19 17:50:01 -                     )
2017-01-19 17:50:01 -             )
2017-01-19 17:50:01 -     )
2017-01-19 17:50:01 - let styledLayout =
2017-01-19 17:50:01 -     Layout(
2017-01-19 17:50:01 -         title = "Quarter 1 Growth",
2017-01-19 17:50:01 -         xaxis =
2017-01-19 17:50:01 -             Xaxis(
2017-01-19 17:50:01 -                 title = "GDP per Capita",
2017-01-19 17:50:01 -                 showgrid = false,
2017-01-19 17:50:01 -                 zeroline = false
2017-01-19 17:50:01 -             ),
2017-01-19 17:50:01 -         yaxis =
2017-01-19 17:50:01 -             Yaxis(
2017-01-19 17:50:01 -                 title = "Percent",
2017-01-19 17:50:01 -                 showline = false
2017-01-19 17:50:01 -             )
2017-01-19 17:50:01 -     )
2017-01-19 17:50:01 - [styledTrace1; styledTrace2; styledTrace3; styledTrace4]
2017-01-19 17:50:01 - |> Chart.Plot
2017-01-19 17:50:15 - Chart.Line [ for x in 0. .. 0.5 .. 6.3 -> x, sin x ]
2017-01-19 17:50:41 - shutdown request
2017-01-19 17:50:42 - // include directory, this will be replaced by the kernel
2017-01-19 17:50:42 - #I "/IfSharp/bin"
2017-01-19 17:50:42 - // load base dlls
2017-01-19 17:50:42 - #r "IfSharp.Kernel.dll"
2017-01-19 17:50:42 - #r "NetMQ.dll"
2017-01-19 17:50:42 - // open the global functions and methods
2017-01-19 17:50:42 - open IfSharp.Kernel
2017-01-19 17:50:42 - open IfSharp.Kernel.Globals
2017-01-19 17:50:44 - F# Interactive for F# 4.1
2017-01-19 17:50:44 - Freely distributed under the Apache 2.0 Open Source License
2017-01-19 17:50:44 - For help type #help;;
2017-01-19 17:50:44 - > val it : ResizeArray<System.Type * (obj -> seq<string * string> * string)> =
2017-01-19 17:50:44 -   seq []
2017-01-19 17:50:44 - --> Added '/IfSharp/bin' to library include path
2017-01-19 17:50:44 - --> Referenced '/IfSharp/bin/IfSharp.Kernel.dll' (file may be locked by F# Interactive process)
2017-01-19 17:50:44 - --> Referenced '/IfSharp/bin/NetMQ.dll' (file may be locked by F# Interactive process)
2017-01-19 17:50:44 - #load "Paket.fsx"
2017-01-19 17:50:44 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts"]
2017-01-19 17:50:48 - open System
2017-01-19 17:50:48 - #load "XPlot.Plotly.Paket.fsx"
2017-01-19 17:50:48 - #load "XPlot.Plotly.fsx"
2017-01-19 17:50:48 - open XPlot.Plotly
2017-01-19 17:50:51 - let n = 512.0
2017-01-19 17:50:51 - let fo = 1.0/n
2017-01-19 17:50:51 - let x = {0.0 .. (n-1.0)}
2017-01-19 17:50:51 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 17:50:51 - let styledTrace1 =
2017-01-19 17:50:51 -     Scatter(
2017-01-19 17:50:51 -         x = [52698; 43117],
2017-01-19 17:50:51 -         y = [53; 31],
2017-01-19 17:50:51 -         mode = "markers",
2017-01-19 17:50:51 -         name = "North America",
2017-01-19 17:50:51 -         text = ["United States"; "Canada"],
2017-01-19 17:50:51 -         marker =
2017-01-19 17:50:51 -             Marker(
2017-01-19 17:50:51 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:50:51 -                 size = 12,
2017-01-19 17:50:51 -                 line =
2017-01-19 17:50:51 -                     Line(
2017-01-19 17:50:51 -                         color = "white",
2017-01-19 17:50:51 -                         width = 0.5
2017-01-19 17:50:51 -                     )
2017-01-19 17:50:51 -             )
2017-01-19 17:50:51 -     )
2017-01-19 17:50:51 - let styledTrace2 =
2017-01-19 17:50:51 -     Scatter(
2017-01-19 17:50:51 -         x = [39317; 37236; 35650; 30066; 29570; 27159; 23557; 21046; 18007],
2017-01-19 17:50:51 -         y = [33; 20; 13; 19; 27; 19; 49; 44; 38],
2017-01-19 17:50:51 -         mode = "markers",
2017-01-19 17:50:51 -         name = "Europe",
2017-01-19 17:50:51 -         text =
2017-01-19 17:50:51 -             ["Germany"; "Britain"; "France"; "Spain"; "Italy"; "Czech Rep."; "Greece";
2017-01-19 17:50:51 -              "Poland"],
2017-01-19 17:50:51 -         marker =
2017-01-19 17:50:51 -             Marker(
2017-01-19 17:50:51 -                 color = "rgb(255, 217, 102)",
2017-01-19 17:50:51 -                 size = 12,
2017-01-19 17:50:51 -                 line=
2017-01-19 17:50:51 -                     Line(
2017-01-19 17:50:51 -                         color = "white",
2017-01-19 17:50:51 -                         width = 0.5
2017-01-19 17:50:51 -                     )
2017-01-19 17:50:51 -             )
2017-01-19 17:50:51 -     )
2017-01-19 17:50:51 - let styledTrace3 = 
2017-01-19 17:50:51 -     Scatter(
2017-01-19 17:50:51 -         x = [42952; 37037; 33106; 17478; 9813; 5253; 4692; 3899],
2017-01-19 17:50:51 -         y = [23; 42; 54; 89; 14; 99; 93; 70],
2017-01-19 17:50:51 -         mode = "markers",
2017-01-19 17:50:51 -         name = "Asia/Pacific",
2017-01-19 17:50:51 -         text =
2017-01-19 17:50:51 -             ["Australia"; "Japan"; "South Korea"; "Malaysia"; "China"; "Indonesia";
2017-01-19 17:50:51 -              "Philippines"; "India"],
2017-01-19 17:50:51 -         marker =
2017-01-19 17:50:51 -             Marker(
2017-01-19 17:50:51 -                 color = "rgb(234, 153, 153)",
2017-01-19 17:50:51 -                 size = 12,
2017-01-19 17:50:51 -                 line =
2017-01-19 17:50:51 -                     Line(
2017-01-19 17:50:51 -                         color = "white",
2017-01-19 17:50:51 -                         width = 0.5
2017-01-19 17:50:51 -                     )
2017-01-19 17:50:51 -             )
2017-01-19 17:50:51 -     )
2017-01-19 17:50:51 - let styledTrace4 =
2017-01-19 17:50:51 -     Scatter(
2017-01-19 17:50:51 -         x = [19097; 18601; 15595; 13546; 12026; 7434; 5419],
2017-01-19 17:50:51 -         y = [43; 47; 56; 80; 86; 93; 80],
2017-01-19 17:50:51 -         mode = "markers",
2017-01-19 17:50:51 -         name = "Latin America",
2017-01-19 17:50:51 -         text =
2017-01-19 17:50:51 -             ["Chile"; "Argentina"; "Mexico"; "Venezuela"; "Venezuela"; "El Salvador";
2017-01-19 17:50:51 -              "Bolivia"],
2017-01-19 17:50:51 -         marker = 
2017-01-19 17:50:51 -             Marker(
2017-01-19 17:50:51 -                 color = "rgb(142, 124, 195)",
2017-01-19 17:50:51 -                 size = 12,
2017-01-19 17:50:51 -                 line =
2017-01-19 17:50:51 -                     Line(
2017-01-19 17:50:51 -                         color = "white",
2017-01-19 17:50:51 -                         width = 0.5
2017-01-19 17:50:51 -                     )
2017-01-19 17:50:51 -             )
2017-01-19 17:50:51 -     )
2017-01-19 17:50:51 - let styledLayout =
2017-01-19 17:50:51 -     Layout(
2017-01-19 17:50:51 -         title = "Quarter 1 Growth",
2017-01-19 17:50:51 -         xaxis =
2017-01-19 17:50:51 -             Xaxis(
2017-01-19 17:50:51 -                 title = "GDP per Capita",
2017-01-19 17:50:51 -                 showgrid = false,
2017-01-19 17:50:51 -                 zeroline = false
2017-01-19 17:50:51 -             ),
2017-01-19 17:50:51 -         yaxis =
2017-01-19 17:50:51 -             Yaxis(
2017-01-19 17:50:51 -                 title = "Percent",
2017-01-19 17:50:51 -                 showline = false
2017-01-19 17:50:51 -             )
2017-01-19 17:50:51 -     )
2017-01-19 17:50:51 - [styledTrace1; styledTrace2; styledTrace3; styledTrace4]
2017-01-19 17:50:51 - |> Chart.Plot
2017-01-19 17:50:51 - Chart.Line [ for x in 0. .. 0.5 .. 6.3 -> x, sin x ]
2017-01-19 17:51:16 - let styledTrace1 =
2017-01-19 17:51:16 -     Scatter(
2017-01-19 17:51:16 -         x = [52698; 43117],
2017-01-19 17:51:16 -         y = [53; 31],
2017-01-19 17:51:16 -         mode = "markers",
2017-01-19 17:51:16 -         name = "North America",
2017-01-19 17:51:16 -         text = ["United States"; "Canada"],
2017-01-19 17:51:16 -         marker =
2017-01-19 17:51:16 -             Marker(
2017-01-19 17:51:16 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:51:16 -                 size = 12,
2017-01-19 17:51:16 -                 line =
2017-01-19 17:51:16 -                     Line(
2017-01-19 17:51:16 -                         color = "white",
2017-01-19 17:51:16 -                         width = 0.5
2017-01-19 17:51:16 -                     )
2017-01-19 17:51:16 -             )
2017-01-19 17:51:16 -     )
2017-01-19 17:51:16 - let styledLayout =
2017-01-19 17:51:16 -     Layout(
2017-01-19 17:51:16 -         title = "Quarter 1 Growth",
2017-01-19 17:51:16 -         xaxis =
2017-01-19 17:51:16 -             Xaxis(
2017-01-19 17:51:16 -                 title = "GDP per Capita",
2017-01-19 17:51:16 -                 showgrid = false,
2017-01-19 17:51:16 -                 zeroline = false
2017-01-19 17:51:16 -             ),
2017-01-19 17:51:16 -         yaxis =
2017-01-19 17:51:16 -             Yaxis(
2017-01-19 17:51:16 -                 title = "Percent",
2017-01-19 17:51:16 -                 showline = false
2017-01-19 17:51:16 -             )
2017-01-19 17:51:16 -     )
2017-01-19 17:51:16 - [styledTrace1; styledTrace2; styledTrace3; styledTrace4]
2017-01-19 17:51:16 - |> Chart.Plot
2017-01-19 17:51:59 - let n = 512.0
2017-01-19 17:51:59 - let fo = 1.0/n
2017-01-19 17:51:59 - let x = {0.0 .. (n-1.0)}
2017-01-19 17:51:59 - let y = x
2017-01-19 17:51:59 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 17:52:03 - let n = 512.0
2017-01-19 17:52:03 - let fo = 1.0/n
2017-01-19 17:52:03 - let x = {0.0 .. (n-1.0)}
2017-01-19 17:52:03 - let y = x
2017-01-19 17:52:03 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 17:52:06 - let n = 512.0
2017-01-19 17:52:06 - let fo = 1.0/n
2017-01-19 17:52:06 - let x = {0.0 .. (n-1.0)}
2017-01-19 17:52:06 - let y = x
2017-01-19 17:52:06 -         |> Seq.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 17:52:07 - let styledTrace1 =
2017-01-19 17:52:07 -     Scatter(
2017-01-19 17:52:07 -         x = x,
2017-01-19 17:52:07 -         y = y,
2017-01-19 17:52:07 -         mode = "markers",
2017-01-19 17:52:07 -         name = "North America",
2017-01-19 17:52:07 -         text = ["United States"; "Canada"],
2017-01-19 17:52:07 -         marker =
2017-01-19 17:52:07 -             Marker(
2017-01-19 17:52:07 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:52:07 -                 size = 12,
2017-01-19 17:52:07 -                 line =
2017-01-19 17:52:07 -                     Line(
2017-01-19 17:52:07 -                         color = "white",
2017-01-19 17:52:07 -                         width = 0.5
2017-01-19 17:52:07 -                     )
2017-01-19 17:52:07 -             )
2017-01-19 17:52:07 -     )
2017-01-19 17:52:07 - let styledLayout =
2017-01-19 17:52:07 -     Layout(
2017-01-19 17:52:07 -         title = "Quarter 1 Growth",
2017-01-19 17:52:07 -         xaxis =
2017-01-19 17:52:07 -             Xaxis(
2017-01-19 17:52:07 -                 title = "GDP per Capita",
2017-01-19 17:52:07 -                 showgrid = false,
2017-01-19 17:52:07 -                 zeroline = false
2017-01-19 17:52:07 -             ),
2017-01-19 17:52:07 -         yaxis =
2017-01-19 17:52:07 -             Yaxis(
2017-01-19 17:52:07 -                 title = "Percent",
2017-01-19 17:52:07 -                 showline = false
2017-01-19 17:52:07 -             )
2017-01-19 17:52:07 -     )
2017-01-19 17:52:07 - [styledTrace1; styledTrace2; styledTrace3; styledTrace4]
2017-01-19 17:52:07 - |> Chart.Plot
2017-01-19 17:52:23 - let styledTrace1 =
2017-01-19 17:52:23 -     Scatter(
2017-01-19 17:52:23 -         x = x,
2017-01-19 17:52:23 -         y = y,
2017-01-19 17:52:23 -         mode = "markers",
2017-01-19 17:52:23 -         name = "North America",
2017-01-19 17:52:23 -         text = ["United States"; "Canada"],
2017-01-19 17:52:23 -         marker =
2017-01-19 17:52:23 -             Marker(
2017-01-19 17:52:23 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:52:23 -                 size = 12,
2017-01-19 17:52:23 -                 line =
2017-01-19 17:52:23 -                     Line(
2017-01-19 17:52:23 -                         color = "white",
2017-01-19 17:52:23 -                         width = 0.5
2017-01-19 17:52:23 -                     )
2017-01-19 17:52:23 -             )
2017-01-19 17:52:23 -     )
2017-01-19 17:52:23 - let styledLayout =
2017-01-19 17:52:23 -     Layout(
2017-01-19 17:52:23 -         title = "Quarter 1 Growth",
2017-01-19 17:52:23 -         xaxis =
2017-01-19 17:52:23 -             Xaxis(
2017-01-19 17:52:23 -                 title = "GDP per Capita",
2017-01-19 17:52:23 -                 showgrid = false,
2017-01-19 17:52:23 -                 zeroline = false
2017-01-19 17:52:23 -             ),
2017-01-19 17:52:23 -         yaxis =
2017-01-19 17:52:23 -             Yaxis(
2017-01-19 17:52:23 -                 title = "Percent",
2017-01-19 17:52:23 -                 showline = false
2017-01-19 17:52:23 -             )
2017-01-19 17:52:23 -     )
2017-01-19 17:52:23 - [styledTrace1]
2017-01-19 17:52:23 - |> Chart.Plot
2017-01-19 17:52:40 - let styledTrace1 =
2017-01-19 17:52:40 -     Scatter(
2017-01-19 17:52:40 -         x = x,
2017-01-19 17:52:40 -         y = y,
2017-01-19 17:52:40 -         mode = "lines",
2017-01-19 17:52:40 -         name = "North America",
2017-01-19 17:52:40 -         text = ["United States"; "Canada"],
2017-01-19 17:52:40 -         marker =
2017-01-19 17:52:40 -             Marker(
2017-01-19 17:52:40 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:52:40 -                 size = 12,
2017-01-19 17:52:40 -                 line =
2017-01-19 17:52:40 -                     Line(
2017-01-19 17:52:40 -                         color = "white",
2017-01-19 17:52:40 -                         width = 0.5
2017-01-19 17:52:40 -                     )
2017-01-19 17:52:40 -             )
2017-01-19 17:52:40 -     )
2017-01-19 17:52:40 - let styledLayout =
2017-01-19 17:52:40 -     Layout(
2017-01-19 17:52:40 -         title = "Quarter 1 Growth",
2017-01-19 17:52:40 -         xaxis =
2017-01-19 17:52:40 -             Xaxis(
2017-01-19 17:52:40 -                 title = "GDP per Capita",
2017-01-19 17:52:40 -                 showgrid = false,
2017-01-19 17:52:40 -                 zeroline = false
2017-01-19 17:52:40 -             ),
2017-01-19 17:52:40 -         yaxis =
2017-01-19 17:52:40 -             Yaxis(
2017-01-19 17:52:40 -                 title = "Percent",
2017-01-19 17:52:40 -                 showline = false
2017-01-19 17:52:40 -             )
2017-01-19 17:52:40 -     )
2017-01-19 17:52:40 - [styledTrace1]
2017-01-19 17:52:40 - |> Chart.Plot
2017-01-19 17:53:04 - let styledTrace1 =
2017-01-19 17:53:04 -     Scatter(
2017-01-19 17:53:04 -         x = x,
2017-01-19 17:53:04 -         y = y,
2017-01-19 17:53:04 -         mode = "lines",
2017-01-19 17:53:04 -         name = "North America",
2017-01-19 17:53:04 -         text = ["United States"; "Canada"],
2017-01-19 17:53:04 -         marker =
2017-01-19 17:53:04 -             Marker(
2017-01-19 17:53:04 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:53:04 -                 size = 12,
2017-01-19 17:53:04 -                 line =
2017-01-19 17:53:04 -                     Line(
2017-01-19 17:53:04 -                         color = "white",
2017-01-19 17:53:04 -                         width = 0.5
2017-01-19 17:53:04 -                     )
2017-01-19 17:53:04 -             )
2017-01-19 17:53:04 -     )
2017-01-19 17:53:04 - let styledLayout =
2017-01-19 17:53:04 -     Layout(
2017-01-19 17:53:04 -         title = "Quarter 1 Growth",
2017-01-19 17:53:04 -         xaxis =
2017-01-19 17:53:04 -             Xaxis(
2017-01-19 17:53:04 -                 title = "GDP per Capita",
2017-01-19 17:53:04 -                 showgrid = true,
2017-01-19 17:53:04 -                 zeroline = true
2017-01-19 17:53:04 -             ),
2017-01-19 17:53:04 -         yaxis =
2017-01-19 17:53:04 -             Yaxis(
2017-01-19 17:53:04 -                 title = "Percent",
2017-01-19 17:53:04 -                 showline = true
2017-01-19 17:53:04 -             )
2017-01-19 17:53:04 -     )
2017-01-19 17:53:04 - [styledTrace1]
2017-01-19 17:53:04 - |> Chart.Plot
2017-01-19 17:53:17 - let styledTrace1 =
2017-01-19 17:53:17 -     Scatter(
2017-01-19 17:53:17 -         x = x,
2017-01-19 17:53:17 -         y = y,
2017-01-19 17:53:17 -         mode = "lines",
2017-01-19 17:53:17 -         name = "North America",
2017-01-19 17:53:17 -         text = ["United States"; "Canada"],
2017-01-19 17:53:17 -         marker =
2017-01-19 17:53:17 -             Marker(
2017-01-19 17:53:17 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:53:17 -                 size = 12,
2017-01-19 17:53:17 -                 line =
2017-01-19 17:53:17 -                     Line(
2017-01-19 17:53:17 -                         color = "white",
2017-01-19 17:53:17 -                         width = 0.5
2017-01-19 17:53:17 -                     )
2017-01-19 17:53:17 -             )
2017-01-19 17:53:17 -     )
2017-01-19 17:53:17 - let styledLayout =
2017-01-19 17:53:17 -     Layout(
2017-01-19 17:53:17 -         title = "Quarter 1 Growth",
2017-01-19 17:53:17 -         xaxis =
2017-01-19 17:53:17 -             Xaxis(
2017-01-19 17:53:17 -                 title = "GDP per Capita",
2017-01-19 17:53:17 -                 showgrid = true,
2017-01-19 17:53:17 -                 zeroline = true
2017-01-19 17:53:17 -             ),
2017-01-19 17:53:17 -         yaxis =
2017-01-19 17:53:17 -             Yaxis(
2017-01-19 17:53:17 -                 title = "Percent",
2017-01-19 17:53:17 -                 showline = true
2017-01-19 17:53:17 -             )
2017-01-19 17:53:17 -     )
2017-01-19 17:53:17 - [styledTrace1]
2017-01-19 17:53:17 - |> Chart.Plot
2017-01-19 17:53:17 - |> Chart.WithLayout shapeLayout
2017-01-19 17:53:17 - |> Chart.WithWidth 700
2017-01-19 17:53:17 - |> Chart.WithHeight 500
2017-01-19 17:53:17 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 17:53:17 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x40dffaf0 + 0x00183> in <filename unknown>:0 
2017-01-19 17:53:17 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x40d81700 + 0x00047> in <filename unknown>:0 
2017-01-19 17:53:17 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40c1fe20 + 0x00d27> in <filename unknown>:0 
2017-01-19 17:53:17 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41dd9190 + 0x00287> in <filename unknown>:0 
2017-01-19 17:55:06 - let styledTrace1 =
2017-01-19 17:55:06 -     Scatter(
2017-01-19 17:55:06 -         x = x,
2017-01-19 17:55:06 -         y = y,
2017-01-19 17:55:06 -         mode = "lines",
2017-01-19 17:55:06 -         name = "North America",
2017-01-19 17:55:06 -         text = ["United States"; "Canada"],
2017-01-19 17:55:06 -         marker =
2017-01-19 17:55:06 -             Marker(
2017-01-19 17:55:06 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:55:06 -                 size = 12,
2017-01-19 17:55:06 -                 line =
2017-01-19 17:55:06 -                     Line(
2017-01-19 17:55:06 -                         color = "white",
2017-01-19 17:55:06 -                         width = 0.5
2017-01-19 17:55:06 -                     )
2017-01-19 17:55:06 -             )
2017-01-19 17:55:06 -     )
2017-01-19 17:55:06 - let styledLayout =
2017-01-19 17:55:06 -     Layout(
2017-01-19 17:55:06 -         title = "Quarter 1 Growth",
2017-01-19 17:55:06 -         xaxis =
2017-01-19 17:55:06 -             Xaxis(
2017-01-19 17:55:06 -                 title = "GDP per Capita",
2017-01-19 17:55:06 -                 showgrid = true,
2017-01-19 17:55:06 -                 zeroline = true
2017-01-19 17:55:06 -             ),
2017-01-19 17:55:06 -         yaxis =
2017-01-19 17:55:06 -             Yaxis(
2017-01-19 17:55:06 -                 title = "Percent",
2017-01-19 17:55:06 -                 showline = true
2017-01-19 17:55:06 -             )
2017-01-19 17:55:06 -     )
2017-01-19 17:55:06 - [styledTrace1]
2017-01-19 17:55:06 - |> Chart.Plot
2017-01-19 17:55:06 - |> Chart.WithLayout styledLayout
2017-01-19 17:55:06 - |> Chart.WithWidth 700
2017-01-19 17:55:06 - |> Chart.WithHeight 500
2017-01-19 17:55:23 - let n = 512.0
2017-01-19 17:55:23 - let fo = 1.0/n
2017-01-19 17:55:23 - let x = [0.0 .. (n-1.0)]
2017-01-19 17:55:23 - let y = x
2017-01-19 17:55:23 -         |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 17:55:25 - let styledTrace1 =
2017-01-19 17:55:25 -     Scatter(
2017-01-19 17:55:25 -         x = x,
2017-01-19 17:55:25 -         y = y,
2017-01-19 17:55:25 -         mode = "lines",
2017-01-19 17:55:25 -         name = "North America",
2017-01-19 17:55:25 -         text = ["United States"; "Canada"],
2017-01-19 17:55:25 -         marker =
2017-01-19 17:55:25 -             Marker(
2017-01-19 17:55:25 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:55:25 -                 size = 12,
2017-01-19 17:55:25 -                 line =
2017-01-19 17:55:25 -                     Line(
2017-01-19 17:55:25 -                         color = "white",
2017-01-19 17:55:25 -                         width = 0.5
2017-01-19 17:55:25 -                     )
2017-01-19 17:55:25 -             )
2017-01-19 17:55:25 -     )
2017-01-19 17:55:25 - let styledLayout =
2017-01-19 17:55:25 -     Layout(
2017-01-19 17:55:25 -         title = "Quarter 1 Growth",
2017-01-19 17:55:25 -         xaxis =
2017-01-19 17:55:25 -             Xaxis(
2017-01-19 17:55:25 -                 title = "GDP per Capita",
2017-01-19 17:55:25 -                 showgrid = true,
2017-01-19 17:55:25 -                 zeroline = true
2017-01-19 17:55:25 -             ),
2017-01-19 17:55:25 -         yaxis =
2017-01-19 17:55:25 -             Yaxis(
2017-01-19 17:55:25 -                 title = "Percent",
2017-01-19 17:55:25 -                 showline = true
2017-01-19 17:55:25 -             )
2017-01-19 17:55:25 -     )
2017-01-19 17:55:25 - [styledTrace1]
2017-01-19 17:55:25 - |> Chart.Plot
2017-01-19 17:55:25 - |> Chart.WithLayout styledLayout
2017-01-19 17:55:25 - |> Chart.WithWidth 700
2017-01-19 17:55:25 - |> Chart.WithHeight 500
2017-01-19 17:55:45 - let styledTrace1 =
2017-01-19 17:55:45 -     Scatter(
2017-01-19 17:55:45 -         x = xSin,
2017-01-19 17:55:45 -         y = ySin,
2017-01-19 17:55:45 -         mode = "lines",
2017-01-19 17:55:45 -         name = "North America",
2017-01-19 17:55:45 -         text = ["United States"; "Canada"],
2017-01-19 17:55:45 -         marker =
2017-01-19 17:55:45 -             Marker(
2017-01-19 17:55:45 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:55:45 -                 size = 12,
2017-01-19 17:55:45 -                 line =
2017-01-19 17:55:45 -                     Line(
2017-01-19 17:55:45 -                         color = "white",
2017-01-19 17:55:45 -                         width = 0.5
2017-01-19 17:55:45 -                     )
2017-01-19 17:55:45 -             )
2017-01-19 17:55:45 -     )
2017-01-19 17:55:45 - let styledLayout =
2017-01-19 17:55:45 -     Layout(
2017-01-19 17:55:45 -         title = "Quarter 1 Growth",
2017-01-19 17:55:45 -         xaxis =
2017-01-19 17:55:45 -             Xaxis(
2017-01-19 17:55:45 -                 title = "GDP per Capita",
2017-01-19 17:55:45 -                 showgrid = true,
2017-01-19 17:55:45 -                 zeroline = true
2017-01-19 17:55:45 -             ),
2017-01-19 17:55:45 -         yaxis =
2017-01-19 17:55:45 -             Yaxis(
2017-01-19 17:55:45 -                 title = "Percent",
2017-01-19 17:55:45 -                 showline = true
2017-01-19 17:55:45 -             )
2017-01-19 17:55:45 -     )
2017-01-19 17:55:45 - [styledTrace1]
2017-01-19 17:55:45 - |> Chart.Plot
2017-01-19 17:55:45 - |> Chart.WithLayout styledLayout
2017-01-19 17:55:45 - |> Chart.WithWidth 700
2017-01-19 17:55:45 - |> Chart.WithHeight 500
2017-01-19 17:55:45 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 17:55:45 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x40dffaf0 + 0x00183> in <filename unknown>:0 
2017-01-19 17:55:45 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x40d81700 + 0x00047> in <filename unknown>:0 
2017-01-19 17:55:45 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40c1fe20 + 0x00d27> in <filename unknown>:0 
2017-01-19 17:55:45 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41dd9190 + 0x00287> in <filename unknown>:0 
2017-01-19 17:55:49 - let n = 512.0
2017-01-19 17:55:49 - let fo = 1.0/n
2017-01-19 17:55:49 - let xSin = [0.0 .. (n-1.0)]
2017-01-19 17:55:49 - let ySin = x
2017-01-19 17:55:49 -         |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 17:55:51 - let styledTrace1 =
2017-01-19 17:55:51 -     Scatter(
2017-01-19 17:55:51 -         x = xSin,
2017-01-19 17:55:51 -         y = ySin,
2017-01-19 17:55:51 -         mode = "lines",
2017-01-19 17:55:51 -         name = "North America",
2017-01-19 17:55:51 -         text = ["United States"; "Canada"],
2017-01-19 17:55:51 -         marker =
2017-01-19 17:55:51 -             Marker(
2017-01-19 17:55:51 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:55:51 -                 size = 12,
2017-01-19 17:55:51 -                 line =
2017-01-19 17:55:51 -                     Line(
2017-01-19 17:55:51 -                         color = "white",
2017-01-19 17:55:51 -                         width = 0.5
2017-01-19 17:55:51 -                     )
2017-01-19 17:55:51 -             )
2017-01-19 17:55:51 -     )
2017-01-19 17:55:51 - let styledLayout =
2017-01-19 17:55:51 -     Layout(
2017-01-19 17:55:51 -         title = "Quarter 1 Growth",
2017-01-19 17:55:51 -         xaxis =
2017-01-19 17:55:51 -             Xaxis(
2017-01-19 17:55:51 -                 title = "GDP per Capita",
2017-01-19 17:55:51 -                 showgrid = true,
2017-01-19 17:55:51 -                 zeroline = true
2017-01-19 17:55:51 -             ),
2017-01-19 17:55:51 -         yaxis =
2017-01-19 17:55:51 -             Yaxis(
2017-01-19 17:55:51 -                 title = "Percent",
2017-01-19 17:55:51 -                 showline = true
2017-01-19 17:55:51 -             )
2017-01-19 17:55:51 -     )
2017-01-19 17:55:51 - [styledTrace1]
2017-01-19 17:55:51 - |> Chart.Plot
2017-01-19 17:55:51 - |> Chart.WithLayout styledLayout
2017-01-19 17:55:51 - |> Chart.WithWidth 700
2017-01-19 17:55:51 - |> Chart.WithHeight 500
2017-01-19 17:56:35 - let styledTrace1 =
2017-01-19 17:56:35 -     Line(
2017-01-19 17:56:35 -         x = xSin,
2017-01-19 17:56:35 -         y = ySin,
2017-01-19 17:56:35 -         mode = "lines",
2017-01-19 17:56:35 -         name = "North America",
2017-01-19 17:56:35 -         text = ["United States"; "Canada"],
2017-01-19 17:56:35 -         marker =
2017-01-19 17:56:35 -             Marker(
2017-01-19 17:56:35 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:56:35 -                 size = 12,
2017-01-19 17:56:35 -                 line =
2017-01-19 17:56:35 -                     Line(
2017-01-19 17:56:35 -                         color = "white",
2017-01-19 17:56:35 -                         width = 0.5
2017-01-19 17:56:35 -                     )
2017-01-19 17:56:35 -             )
2017-01-19 17:56:35 -     )
2017-01-19 17:56:35 - let styledLayout =
2017-01-19 17:56:35 -     Layout(
2017-01-19 17:56:35 -         title = "Quarter 1 Growth",
2017-01-19 17:56:35 -         xaxis =
2017-01-19 17:56:35 -             Xaxis(
2017-01-19 17:56:35 -                 title = "GDP per Capita",
2017-01-19 17:56:35 -                 showgrid = true,
2017-01-19 17:56:35 -                 zeroline = true
2017-01-19 17:56:35 -             ),
2017-01-19 17:56:35 -         yaxis =
2017-01-19 17:56:35 -             Yaxis(
2017-01-19 17:56:35 -                 title = "Percent",
2017-01-19 17:56:35 -                 showline = true
2017-01-19 17:56:35 -             )
2017-01-19 17:56:35 -     )
2017-01-19 17:56:35 - [styledTrace1]
2017-01-19 17:56:35 - |> Chart.Plot
2017-01-19 17:56:35 - |> Chart.WithLayout styledLayout
2017-01-19 17:56:35 - |> Chart.WithWidth 700
2017-01-19 17:56:35 - |> Chart.WithHeight 500
2017-01-19 17:56:35 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 17:56:35 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x40dffaf0 + 0x00183> in <filename unknown>:0 
2017-01-19 17:56:35 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x40d81700 + 0x00047> in <filename unknown>:0 
2017-01-19 17:56:35 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40c1fe20 + 0x00d27> in <filename unknown>:0 
2017-01-19 17:56:35 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41dd9190 + 0x00287> in <filename unknown>:0 
2017-01-19 17:56:42 - let styledTrace1 =
2017-01-19 17:56:42 -     Scatter(
2017-01-19 17:56:42 -         x = xSin,
2017-01-19 17:56:42 -         y = ySin,
2017-01-19 17:56:42 -         mode = "lines",
2017-01-19 17:56:42 -         name = "North America",
2017-01-19 17:56:42 -         text = ["United States"; "Canada"],
2017-01-19 17:56:42 -         marker =
2017-01-19 17:56:42 -             Marker(
2017-01-19 17:56:42 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:56:42 -                 size = 12,
2017-01-19 17:56:42 -                 line =
2017-01-19 17:56:42 -                     Line(
2017-01-19 17:56:42 -                         color = "white",
2017-01-19 17:56:42 -                         width = 0.5
2017-01-19 17:56:42 -                     )
2017-01-19 17:56:42 -             )
2017-01-19 17:56:42 -     )
2017-01-19 17:56:42 - let styledLayout =
2017-01-19 17:56:42 -     Layout(
2017-01-19 17:56:42 -         title = "Quarter 1 Growth",
2017-01-19 17:56:42 -         xaxis =
2017-01-19 17:56:42 -             Xaxis(
2017-01-19 17:56:42 -                 title = "GDP per Capita",
2017-01-19 17:56:42 -                 showgrid = true,
2017-01-19 17:56:42 -                 zeroline = true
2017-01-19 17:56:42 -             ),
2017-01-19 17:56:42 -         yaxis =
2017-01-19 17:56:42 -             Yaxis(
2017-01-19 17:56:42 -                 title = "Percent",
2017-01-19 17:56:42 -                 showline = true
2017-01-19 17:56:42 -             )
2017-01-19 17:56:42 -     )
2017-01-19 17:56:42 - [styledTrace1]
2017-01-19 17:56:42 - |> Chart.Plot
2017-01-19 17:56:42 - |> Chart.WithLayout styledLayout
2017-01-19 17:56:42 - |> Chart.WithWidth 700
2017-01-19 17:56:42 - |> Chart.WithHeight 500
2017-01-19 17:57:10 - let styledTrace1 =
2017-01-19 17:57:10 -     Scatter(
2017-01-19 17:57:10 -         x = [1; 2; 3; 4],
2017-01-19 17:57:10 -         y = [10; 15; 13; 17],
2017-01-19 17:57:10 -         mode = "lines",
2017-01-19 17:57:10 -         name = "North America",
2017-01-19 17:57:10 -         text = ["United States"; "Canada"],
2017-01-19 17:57:10 -         marker =
2017-01-19 17:57:10 -             Marker(
2017-01-19 17:57:10 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:57:10 -                 size = 12,
2017-01-19 17:57:10 -                 line =
2017-01-19 17:57:10 -                     Line(
2017-01-19 17:57:10 -                         color = "white",
2017-01-19 17:57:10 -                         width = 0.5
2017-01-19 17:57:10 -                     )
2017-01-19 17:57:10 -             )
2017-01-19 17:57:10 -     )
2017-01-19 17:57:10 - let styledLayout =
2017-01-19 17:57:10 -     Layout(
2017-01-19 17:57:10 -         title = "Quarter 1 Growth",
2017-01-19 17:57:10 -         xaxis =
2017-01-19 17:57:10 -             Xaxis(
2017-01-19 17:57:10 -                 title = "GDP per Capita",
2017-01-19 17:57:10 -                 showgrid = true,
2017-01-19 17:57:10 -                 zeroline = true
2017-01-19 17:57:10 -             ),
2017-01-19 17:57:10 -         yaxis =
2017-01-19 17:57:10 -             Yaxis(
2017-01-19 17:57:10 -                 title = "Percent",
2017-01-19 17:57:10 -                 showline = true
2017-01-19 17:57:10 -             )
2017-01-19 17:57:10 -     )
2017-01-19 17:57:10 - [styledTrace1]
2017-01-19 17:57:10 - |> Chart.Plot
2017-01-19 17:57:10 - |> Chart.WithLayout styledLayout
2017-01-19 17:57:10 - |> Chart.WithWidth 700
2017-01-19 17:57:10 - |> Chart.WithHeight 500
2017-01-19 17:57:28 - let x = [1; 2; 3; 4]
2017-01-19 17:57:28 - let styledTrace1 =
2017-01-19 17:57:28 -     Scatter(
2017-01-19 17:57:28 -         x = x,
2017-01-19 17:57:28 -         y = [10; 15; 13; 17],
2017-01-19 17:57:28 -         mode = "lines",
2017-01-19 17:57:28 -         name = "North America",
2017-01-19 17:57:28 -         text = ["United States"; "Canada"],
2017-01-19 17:57:28 -         marker =
2017-01-19 17:57:28 -             Marker(
2017-01-19 17:57:28 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:57:28 -                 size = 12,
2017-01-19 17:57:28 -                 line =
2017-01-19 17:57:28 -                     Line(
2017-01-19 17:57:28 -                         color = "white",
2017-01-19 17:57:28 -                         width = 0.5
2017-01-19 17:57:28 -                     )
2017-01-19 17:57:28 -             )
2017-01-19 17:57:28 -     )
2017-01-19 17:57:28 - let styledLayout =
2017-01-19 17:57:28 -     Layout(
2017-01-19 17:57:28 -         title = "Quarter 1 Growth",
2017-01-19 17:57:28 -         xaxis =
2017-01-19 17:57:28 -             Xaxis(
2017-01-19 17:57:28 -                 title = "GDP per Capita",
2017-01-19 17:57:28 -                 showgrid = true,
2017-01-19 17:57:28 -                 zeroline = true
2017-01-19 17:57:28 -             ),
2017-01-19 17:57:28 -         yaxis =
2017-01-19 17:57:28 -             Yaxis(
2017-01-19 17:57:28 -                 title = "Percent",
2017-01-19 17:57:28 -                 showline = true
2017-01-19 17:57:28 -             )
2017-01-19 17:57:28 -     )
2017-01-19 17:57:28 - [styledTrace1]
2017-01-19 17:57:28 - |> Chart.Plot
2017-01-19 17:57:28 - |> Chart.WithLayout styledLayout
2017-01-19 17:57:28 - |> Chart.WithWidth 700
2017-01-19 17:57:28 - |> Chart.WithHeight 500
2017-01-19 17:57:40 - let x = [1; 2; 3; 4]
2017-01-19 17:57:40 - let y = [10; 15; 13; 17]
2017-01-19 17:57:40 - let styledTrace1 =
2017-01-19 17:57:40 -     Scatter(
2017-01-19 17:57:40 -         x = x,
2017-01-19 17:57:40 -         y = y,
2017-01-19 17:57:40 -         mode = "lines",
2017-01-19 17:57:40 -         name = "North America",
2017-01-19 17:57:40 -         text = ["United States"; "Canada"],
2017-01-19 17:57:40 -         marker =
2017-01-19 17:57:40 -             Marker(
2017-01-19 17:57:40 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:57:40 -                 size = 12,
2017-01-19 17:57:40 -                 line =
2017-01-19 17:57:40 -                     Line(
2017-01-19 17:57:40 -                         color = "white",
2017-01-19 17:57:40 -                         width = 0.5
2017-01-19 17:57:40 -                     )
2017-01-19 17:57:40 -             )
2017-01-19 17:57:40 -     )
2017-01-19 17:57:40 - let styledLayout =
2017-01-19 17:57:40 -     Layout(
2017-01-19 17:57:40 -         title = "Quarter 1 Growth",
2017-01-19 17:57:40 -         xaxis =
2017-01-19 17:57:40 -             Xaxis(
2017-01-19 17:57:40 -                 title = "GDP per Capita",
2017-01-19 17:57:40 -                 showgrid = true,
2017-01-19 17:57:40 -                 zeroline = true
2017-01-19 17:57:40 -             ),
2017-01-19 17:57:40 -         yaxis =
2017-01-19 17:57:40 -             Yaxis(
2017-01-19 17:57:40 -                 title = "Percent",
2017-01-19 17:57:40 -                 showline = true
2017-01-19 17:57:40 -             )
2017-01-19 17:57:40 -     )
2017-01-19 17:57:40 - [styledTrace1]
2017-01-19 17:57:40 - |> Chart.Plot
2017-01-19 17:57:40 - |> Chart.WithLayout styledLayout
2017-01-19 17:57:40 - |> Chart.WithWidth 700
2017-01-19 17:57:40 - |> Chart.WithHeight 500
2017-01-19 17:58:09 - let n = 512.0
2017-01-19 17:58:09 - let fo = 1.0/n
2017-01-19 17:58:09 - let xSin = [0.0 .. (n-1.0)]
2017-01-19 17:58:09 - let ySin = x
2017-01-19 17:58:09 -            |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 17:58:09 - let x = [1; 2; 3; 4]
2017-01-19 17:58:09 - let y = [10; 15; 13; 17]        
2017-01-19 17:58:09 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 17:58:09 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x40dffaf0 + 0x00183> in <filename unknown>:0 
2017-01-19 17:58:09 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x40d81700 + 0x00047> in <filename unknown>:0 
2017-01-19 17:58:09 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40c1fe20 + 0x00d27> in <filename unknown>:0 
2017-01-19 17:58:09 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41dd9190 + 0x00287> in <filename unknown>:0 
2017-01-19 17:58:32 - let n = 512.0
2017-01-19 17:58:32 - let fo = 1.0/n
2017-01-19 17:58:32 - let xSin = [0.0 .. (n-1.0)]
2017-01-19 17:58:32 - xSin     
2017-01-19 17:58:40 - let n = 512.0
2017-01-19 17:58:40 - let fo = 1.0/n
2017-01-19 17:58:40 - let xSin = [0.0 .. (n-1.0)]
2017-01-19 17:58:40 - let ySin = xSin
2017-01-19 17:58:40 -            |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 17:58:40 - let x = [1; 2; 3; 4]
2017-01-19 17:58:40 - let y = [10; 15; 13; 17]        
2017-01-19 17:58:52 - let styledTrace1 =
2017-01-19 17:58:52 -     Scatter(
2017-01-19 17:58:52 -         x = xSin,
2017-01-19 17:58:52 -         y = y,
2017-01-19 17:58:52 -         mode = "lines",
2017-01-19 17:58:52 -         name = "North America",
2017-01-19 17:58:52 -         text = ["United States"; "Canada"],
2017-01-19 17:58:52 -         marker =
2017-01-19 17:58:52 -             Marker(
2017-01-19 17:58:52 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:58:52 -                 size = 12,
2017-01-19 17:58:52 -                 line =
2017-01-19 17:58:52 -                     Line(
2017-01-19 17:58:52 -                         color = "white",
2017-01-19 17:58:52 -                         width = 0.5
2017-01-19 17:58:52 -                     )
2017-01-19 17:58:52 -             )
2017-01-19 17:58:52 -     )
2017-01-19 17:58:52 - let styledLayout =
2017-01-19 17:58:52 -     Layout(
2017-01-19 17:58:52 -         title = "Quarter 1 Growth",
2017-01-19 17:58:52 -         xaxis =
2017-01-19 17:58:52 -             Xaxis(
2017-01-19 17:58:52 -                 title = "GDP per Capita",
2017-01-19 17:58:52 -                 showgrid = true,
2017-01-19 17:58:52 -                 zeroline = true
2017-01-19 17:58:52 -             ),
2017-01-19 17:58:52 -         yaxis =
2017-01-19 17:58:52 -             Yaxis(
2017-01-19 17:58:52 -                 title = "Percent",
2017-01-19 17:58:52 -                 showline = true
2017-01-19 17:58:52 -             )
2017-01-19 17:58:52 -     )
2017-01-19 17:58:52 - [styledTrace1]
2017-01-19 17:58:52 - |> Chart.Plot
2017-01-19 17:58:52 - |> Chart.WithLayout styledLayout
2017-01-19 17:58:52 - |> Chart.WithWidth 700
2017-01-19 17:58:52 - |> Chart.WithHeight 500
2017-01-19 17:58:57 - let n = 512.0
2017-01-19 17:58:57 - let fo = 1.0/n
2017-01-19 17:58:57 - let xSin = [0.0 .. (n-1.0)]
2017-01-19 17:58:57 - let ySin = xSin
2017-01-19 17:58:57 -            |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 17:58:57 - let x = [1; 2; 3; 4]
2017-01-19 17:58:57 - let y = [10; 15; 13; 17]        
2017-01-19 17:58:58 - let styledTrace1 =
2017-01-19 17:58:58 -     Scatter(
2017-01-19 17:58:58 -         x = xSin,
2017-01-19 17:58:58 -         y = y,
2017-01-19 17:58:58 -         mode = "lines",
2017-01-19 17:58:58 -         name = "North America",
2017-01-19 17:58:58 -         text = ["United States"; "Canada"],
2017-01-19 17:58:58 -         marker =
2017-01-19 17:58:58 -             Marker(
2017-01-19 17:58:58 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:58:58 -                 size = 12,
2017-01-19 17:58:58 -                 line =
2017-01-19 17:58:58 -                     Line(
2017-01-19 17:58:58 -                         color = "white",
2017-01-19 17:58:58 -                         width = 0.5
2017-01-19 17:58:58 -                     )
2017-01-19 17:58:58 -             )
2017-01-19 17:58:58 -     )
2017-01-19 17:58:58 - let styledLayout =
2017-01-19 17:58:58 -     Layout(
2017-01-19 17:58:58 -         title = "Quarter 1 Growth",
2017-01-19 17:58:58 -         xaxis =
2017-01-19 17:58:58 -             Xaxis(
2017-01-19 17:58:58 -                 title = "GDP per Capita",
2017-01-19 17:58:58 -                 showgrid = true,
2017-01-19 17:58:58 -                 zeroline = true
2017-01-19 17:58:58 -             ),
2017-01-19 17:58:58 -         yaxis =
2017-01-19 17:58:58 -             Yaxis(
2017-01-19 17:58:58 -                 title = "Percent",
2017-01-19 17:58:58 -                 showline = true
2017-01-19 17:58:58 -             )
2017-01-19 17:58:58 -     )
2017-01-19 17:58:58 - [styledTrace1]
2017-01-19 17:58:58 - |> Chart.Plot
2017-01-19 17:58:58 - |> Chart.WithLayout styledLayout
2017-01-19 17:58:58 - |> Chart.WithWidth 700
2017-01-19 17:58:58 - |> Chart.WithHeight 500
2017-01-19 17:59:11 - let styledTrace1 =
2017-01-19 17:59:11 -     Scatter(
2017-01-19 17:59:11 -         x = xSin,
2017-01-19 17:59:11 -         y = ySin,
2017-01-19 17:59:11 -         mode = "lines",
2017-01-19 17:59:11 -         name = "North America",
2017-01-19 17:59:11 -         text = ["United States"; "Canada"],
2017-01-19 17:59:11 -         marker =
2017-01-19 17:59:11 -             Marker(
2017-01-19 17:59:11 -                 color = "rgb(164, 194, 244)",
2017-01-19 17:59:11 -                 size = 12,
2017-01-19 17:59:11 -                 line =
2017-01-19 17:59:11 -                     Line(
2017-01-19 17:59:11 -                         color = "white",
2017-01-19 17:59:11 -                         width = 0.5
2017-01-19 17:59:11 -                     )
2017-01-19 17:59:11 -             )
2017-01-19 17:59:11 -     )
2017-01-19 17:59:11 - let styledLayout =
2017-01-19 17:59:11 -     Layout(
2017-01-19 17:59:11 -         title = "Quarter 1 Growth",
2017-01-19 17:59:11 -         xaxis =
2017-01-19 17:59:11 -             Xaxis(
2017-01-19 17:59:11 -                 title = "GDP per Capita",
2017-01-19 17:59:11 -                 showgrid = true,
2017-01-19 17:59:11 -                 zeroline = true
2017-01-19 17:59:11 -             ),
2017-01-19 17:59:11 -         yaxis =
2017-01-19 17:59:11 -             Yaxis(
2017-01-19 17:59:11 -                 title = "Percent",
2017-01-19 17:59:11 -                 showline = true
2017-01-19 17:59:11 -             )
2017-01-19 17:59:11 -     )
2017-01-19 17:59:11 - [styledTrace1]
2017-01-19 17:59:11 - |> Chart.Plot
2017-01-19 17:59:11 - |> Chart.WithLayout styledLayout
2017-01-19 17:59:11 - |> Chart.WithWidth 700
2017-01-19 17:59:11 - |> Chart.WithHeight 500
2017-01-19 17:59:49 - let n = 512.0
2017-01-19 17:59:49 - let fo = 1.0/n
2017-01-19 17:59:49 - let xSin = [0.0 .. (n-1.0)]
2017-01-19 17:59:49 - let ySin = xSin
2017-01-19 17:59:49 -            |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 17:59:49 - List.Length xSin
2017-01-19 17:59:49 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 17:59:49 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x40dffaf0 + 0x00183> in <filename unknown>:0 
2017-01-19 17:59:49 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x40d81700 + 0x00047> in <filename unknown>:0 
2017-01-19 17:59:49 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40c1fe20 + 0x00d27> in <filename unknown>:0 
2017-01-19 17:59:49 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41dd9190 + 0x00287> in <filename unknown>:0 
2017-01-19 18:00:00 - let n = 512.0
2017-01-19 18:00:00 - let fo = 1.0/n
2017-01-19 18:00:00 - let xSin = [0.0 .. (n-1.0)]
2017-01-19 18:00:00 - let ySin = xSin
2017-01-19 18:00:00 -            |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 18:00:00 - xSin.Length
2017-01-19 18:00:04 - let n = 512.0
2017-01-19 18:00:04 - let fo = 1.0/n
2017-01-19 18:00:04 - let xSin = [0.0 .. (n-1.0)]
2017-01-19 18:00:04 - let ySin = xSin
2017-01-19 18:00:04 -            |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 18:00:04 - ySin.Length
2017-01-19 18:00:11 - let n = 512.0
2017-01-19 18:00:11 - let fo = 1.0/n
2017-01-19 18:00:11 - let xSin = [0.0 .. (n-1.0)]
2017-01-19 18:00:11 - let ySin = xSin
2017-01-19 18:00:11 -            |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 18:00:11 - xSin
2017-01-19 18:00:16 - let n = 512.0
2017-01-19 18:00:16 - let fo = 1.0/n
2017-01-19 18:00:16 - let xSin = [0.0 .. (n-1.0)]
2017-01-19 18:00:16 - let ySin = xSin
2017-01-19 18:00:16 -            |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 18:00:16 - ySin
2017-01-19 18:01:32 - let styledTrace1 =
2017-01-19 18:01:32 -     Scatter(
2017-01-19 18:01:32 -         x = List.Map fst sinGraph,
2017-01-19 18:01:32 -         y = List.Map snd sinGraph,
2017-01-19 18:01:32 -         mode = "lines",
2017-01-19 18:01:32 -         name = "North America",
2017-01-19 18:01:32 -         text = ["United States"; "Canada"],
2017-01-19 18:01:32 -         marker =
2017-01-19 18:01:32 -             Marker(
2017-01-19 18:01:32 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:01:32 -                 size = 12,
2017-01-19 18:01:32 -                 line =
2017-01-19 18:01:32 -                     Line(
2017-01-19 18:01:32 -                         color = "white",
2017-01-19 18:01:32 -                         width = 0.5
2017-01-19 18:01:32 -                     )
2017-01-19 18:01:32 -             )
2017-01-19 18:01:32 -     )
2017-01-19 18:01:32 - let styledLayout =
2017-01-19 18:01:32 -     Layout(
2017-01-19 18:01:32 -         title = "Quarter 1 Growth",
2017-01-19 18:01:32 -         xaxis =
2017-01-19 18:01:32 -             Xaxis(
2017-01-19 18:01:32 -                 title = "GDP per Capita",
2017-01-19 18:01:32 -                 showgrid = true,
2017-01-19 18:01:32 -                 zeroline = true
2017-01-19 18:01:32 -             ),
2017-01-19 18:01:32 -         yaxis =
2017-01-19 18:01:32 -             Yaxis(
2017-01-19 18:01:32 -                 title = "Percent",
2017-01-19 18:01:32 -                 showline = true
2017-01-19 18:01:32 -             )
2017-01-19 18:01:32 -     )
2017-01-19 18:01:32 - [styledTrace1]
2017-01-19 18:01:32 - |> Chart.Plot
2017-01-19 18:01:32 - |> Chart.WithLayout styledLayout
2017-01-19 18:01:32 - |> Chart.WithWidth 700
2017-01-19 18:01:32 - |> Chart.WithHeight 500
2017-01-19 18:01:32 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 18:01:32 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x40dffaf0 + 0x00183> in <filename unknown>:0 
2017-01-19 18:01:32 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x40d81700 + 0x00047> in <filename unknown>:0 
2017-01-19 18:01:32 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40c1fe20 + 0x00d27> in <filename unknown>:0 
2017-01-19 18:01:32 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41dd9190 + 0x00287> in <filename unknown>:0 
2017-01-19 18:01:39 - let styledTrace1 =
2017-01-19 18:01:39 -     Scatter(
2017-01-19 18:01:39 -         x = List.map fst sinGraph,
2017-01-19 18:01:39 -         y = List.map snd sinGraph,
2017-01-19 18:01:39 -         mode = "lines",
2017-01-19 18:01:39 -         name = "North America",
2017-01-19 18:01:39 -         text = ["United States"; "Canada"],
2017-01-19 18:01:39 -         marker =
2017-01-19 18:01:39 -             Marker(
2017-01-19 18:01:39 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:01:39 -                 size = 12,
2017-01-19 18:01:39 -                 line =
2017-01-19 18:01:39 -                     Line(
2017-01-19 18:01:39 -                         color = "white",
2017-01-19 18:01:39 -                         width = 0.5
2017-01-19 18:01:39 -                     )
2017-01-19 18:01:39 -             )
2017-01-19 18:01:39 -     )
2017-01-19 18:01:39 - let styledLayout =
2017-01-19 18:01:39 -     Layout(
2017-01-19 18:01:39 -         title = "Quarter 1 Growth",
2017-01-19 18:01:39 -         xaxis =
2017-01-19 18:01:39 -             Xaxis(
2017-01-19 18:01:39 -                 title = "GDP per Capita",
2017-01-19 18:01:39 -                 showgrid = true,
2017-01-19 18:01:39 -                 zeroline = true
2017-01-19 18:01:39 -             ),
2017-01-19 18:01:39 -         yaxis =
2017-01-19 18:01:39 -             Yaxis(
2017-01-19 18:01:39 -                 title = "Percent",
2017-01-19 18:01:39 -                 showline = true
2017-01-19 18:01:39 -             )
2017-01-19 18:01:39 -     )
2017-01-19 18:01:39 - [styledTrace1]
2017-01-19 18:01:39 - |> Chart.Plot
2017-01-19 18:01:39 - |> Chart.WithLayout styledLayout
2017-01-19 18:01:39 - |> Chart.WithWidth 700
2017-01-19 18:01:39 - |> Chart.WithHeight 500
2017-01-19 18:01:39 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 18:01:39 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x40dffaf0 + 0x00183> in <filename unknown>:0 
2017-01-19 18:01:39 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x40d81700 + 0x00047> in <filename unknown>:0 
2017-01-19 18:01:39 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40c1fe20 + 0x00d27> in <filename unknown>:0 
2017-01-19 18:01:39 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41dd9190 + 0x00287> in <filename unknown>:0 
2017-01-19 18:01:43 - let n = 512.0
2017-01-19 18:01:43 - let fo = 1.0/n
2017-01-19 18:01:43 - let x = [0.0 .. (n-1.0)]
2017-01-19 18:01:43 - let sinGraph = x
2017-01-19 18:01:43 -            |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 18:01:50 - let n = 512.0
2017-01-19 18:01:50 - let fo = 1.0/n
2017-01-19 18:01:50 - let x = [0.0 .. (n-1.0)]
2017-01-19 18:01:50 - let sinGraph = x
2017-01-19 18:01:50 -                |> List.mapi (fun i x -> float(i),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 18:01:51 - let styledTrace1 =
2017-01-19 18:01:51 -     Scatter(
2017-01-19 18:01:51 -         x = List.map fst sinGraph,
2017-01-19 18:01:51 -         y = List.map snd sinGraph,
2017-01-19 18:01:51 -         mode = "lines",
2017-01-19 18:01:51 -         name = "North America",
2017-01-19 18:01:51 -         text = ["United States"; "Canada"],
2017-01-19 18:01:51 -         marker =
2017-01-19 18:01:51 -             Marker(
2017-01-19 18:01:51 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:01:51 -                 size = 12,
2017-01-19 18:01:51 -                 line =
2017-01-19 18:01:51 -                     Line(
2017-01-19 18:01:51 -                         color = "white",
2017-01-19 18:01:51 -                         width = 0.5
2017-01-19 18:01:51 -                     )
2017-01-19 18:01:51 -             )
2017-01-19 18:01:51 -     )
2017-01-19 18:01:51 - let styledLayout =
2017-01-19 18:01:51 -     Layout(
2017-01-19 18:01:51 -         title = "Quarter 1 Growth",
2017-01-19 18:01:51 -         xaxis =
2017-01-19 18:01:51 -             Xaxis(
2017-01-19 18:01:51 -                 title = "GDP per Capita",
2017-01-19 18:01:51 -                 showgrid = true,
2017-01-19 18:01:51 -                 zeroline = true
2017-01-19 18:01:51 -             ),
2017-01-19 18:01:51 -         yaxis =
2017-01-19 18:01:51 -             Yaxis(
2017-01-19 18:01:51 -                 title = "Percent",
2017-01-19 18:01:51 -                 showline = true
2017-01-19 18:01:51 -             )
2017-01-19 18:01:51 -     )
2017-01-19 18:01:51 - [styledTrace1]
2017-01-19 18:01:51 - |> Chart.Plot
2017-01-19 18:01:51 - |> Chart.WithLayout styledLayout
2017-01-19 18:01:51 - |> Chart.WithWidth 700
2017-01-19 18:01:51 - |> Chart.WithHeight 500
2017-01-19 18:03:48 - let styledTrace1 =
2017-01-19 18:03:48 -     Scatter(
2017-01-19 18:03:48 -         x = List.map fst sinGraph,
2017-01-19 18:03:48 -         y = List.map snd sinGraph,
2017-01-19 18:03:48 -         mode = "lines",
2017-01-19 18:03:48 -         marker =
2017-01-19 18:03:48 -             Marker(
2017-01-19 18:03:48 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:03:48 -                 size = 12,
2017-01-19 18:03:48 -                 line =
2017-01-19 18:03:48 -                     Line(
2017-01-19 18:03:48 -                         color = "white",
2017-01-19 18:03:48 -                         width = 0.5
2017-01-19 18:03:48 -                     )
2017-01-19 18:03:48 -             )
2017-01-19 18:03:48 -     )
2017-01-19 18:03:48 - let styledLayout =
2017-01-19 18:03:48 -     Layout(
2017-01-19 18:03:48 -         title = "'The signal x whose amplitude exceeds the range [-\pi,\pi]'",
2017-01-19 18:03:48 -         xaxis =
2017-01-19 18:03:48 -             Xaxis(
2017-01-19 18:03:48 -                 title = "Sample index",
2017-01-19 18:03:48 -                 showgrid = true,
2017-01-19 18:03:48 -                 zeroline = true
2017-01-19 18:03:48 -             ),
2017-01-19 18:03:48 -         yaxis =
2017-01-19 18:03:48 -             Yaxis(
2017-01-19 18:03:48 -                 title = "Original phase in radians",
2017-01-19 18:03:48 -                 showline = true
2017-01-19 18:03:48 -             )
2017-01-19 18:03:48 -     )
2017-01-19 18:03:48 - [styledTrace1]
2017-01-19 18:03:48 - |> Chart.Plot
2017-01-19 18:03:48 - |> Chart.WithLayout styledLayout
2017-01-19 18:03:48 - |> Chart.WithWidth 700
2017-01-19 18:03:48 - |> Chart.WithHeight 500
2017-01-19 18:05:11 - let styledTrace1 =
2017-01-19 18:05:11 -     Scatter(
2017-01-19 18:05:11 -         x = List.map fst sinGraph,
2017-01-19 18:05:11 -         y = List.map snd sinGraph,
2017-01-19 18:05:11 -         mode = "lines",
2017-01-19 18:05:11 -         marker =
2017-01-19 18:05:11 -             Marker(
2017-01-19 18:05:11 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:05:11 -                 size = 12,
2017-01-19 18:05:11 -                 line =
2017-01-19 18:05:11 -                     Line(
2017-01-19 18:05:11 -                         color = "white",
2017-01-19 18:05:11 -                         width = 0.5
2017-01-19 18:05:11 -                     )
2017-01-19 18:05:11 -             )
2017-01-19 18:05:11 -     )
2017-01-19 18:05:11 - let styledLayout =
2017-01-19 18:05:11 -     Layout(
2017-01-19 18:05:11 -         title = "'The signal x whose amplitude exceeds the range:  [-&pi,\pi]'",
2017-01-19 18:05:11 -         xaxis =
2017-01-19 18:05:11 -             Xaxis(
2017-01-19 18:05:11 -                 title = "Sample index",
2017-01-19 18:05:11 -                 showgrid = true,
2017-01-19 18:05:11 -                 zeroline = true
2017-01-19 18:05:11 -             ),
2017-01-19 18:05:11 -         yaxis =
2017-01-19 18:05:11 -             Yaxis(
2017-01-19 18:05:11 -                 title = "Original phase in radians",
2017-01-19 18:05:11 -                 showline = true
2017-01-19 18:05:11 -             )
2017-01-19 18:05:11 -     )
2017-01-19 18:05:11 - [styledTrace1]
2017-01-19 18:05:11 - |> Chart.Plot
2017-01-19 18:05:11 - |> Chart.WithLayout styledLayout
2017-01-19 18:05:11 - |> Chart.WithWidth 700
2017-01-19 18:05:11 - |> Chart.WithHeight 500
2017-01-19 18:05:22 - let styledTrace1 =
2017-01-19 18:05:22 -     Scatter(
2017-01-19 18:05:22 -         x = List.map fst sinGraph,
2017-01-19 18:05:22 -         y = List.map snd sinGraph,
2017-01-19 18:05:22 -         mode = "lines",
2017-01-19 18:05:22 -         marker =
2017-01-19 18:05:22 -             Marker(
2017-01-19 18:05:22 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:05:22 -                 size = 12,
2017-01-19 18:05:22 -                 line =
2017-01-19 18:05:22 -                     Line(
2017-01-19 18:05:22 -                         color = "white",
2017-01-19 18:05:22 -                         width = 0.5
2017-01-19 18:05:22 -                     )
2017-01-19 18:05:22 -             )
2017-01-19 18:05:22 -     )
2017-01-19 18:05:22 - let styledLayout =
2017-01-19 18:05:22 -     Layout(
2017-01-19 18:05:22 -         title = "'The signal x whose amplitude exceeds the range:  [-&#960;,\pi]'",
2017-01-19 18:05:22 -         xaxis =
2017-01-19 18:05:22 -             Xaxis(
2017-01-19 18:05:22 -                 title = "Sample index",
2017-01-19 18:05:22 -                 showgrid = true,
2017-01-19 18:05:22 -                 zeroline = true
2017-01-19 18:05:22 -             ),
2017-01-19 18:05:22 -         yaxis =
2017-01-19 18:05:22 -             Yaxis(
2017-01-19 18:05:22 -                 title = "Original phase in radians",
2017-01-19 18:05:22 -                 showline = true
2017-01-19 18:05:22 -             )
2017-01-19 18:05:22 -     )
2017-01-19 18:05:22 - [styledTrace1]
2017-01-19 18:05:22 - |> Chart.Plot
2017-01-19 18:05:22 - |> Chart.WithLayout styledLayout
2017-01-19 18:05:22 - |> Chart.WithWidth 700
2017-01-19 18:05:22 - |> Chart.WithHeight 500
2017-01-19 18:05:29 - let styledTrace1 =
2017-01-19 18:05:29 -     Scatter(
2017-01-19 18:05:29 -         x = List.map fst sinGraph,
2017-01-19 18:05:29 -         y = List.map snd sinGraph,
2017-01-19 18:05:29 -         mode = "lines",
2017-01-19 18:05:29 -         marker =
2017-01-19 18:05:29 -             Marker(
2017-01-19 18:05:29 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:05:29 -                 size = 12,
2017-01-19 18:05:29 -                 line =
2017-01-19 18:05:29 -                     Line(
2017-01-19 18:05:29 -                         color = "white",
2017-01-19 18:05:29 -                         width = 0.5
2017-01-19 18:05:29 -                     )
2017-01-19 18:05:29 -             )
2017-01-19 18:05:29 -     )
2017-01-19 18:05:29 - let styledLayout =
2017-01-19 18:05:29 -     Layout(
2017-01-19 18:05:29 -         title = "'The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]'",
2017-01-19 18:05:29 -         xaxis =
2017-01-19 18:05:29 -             Xaxis(
2017-01-19 18:05:29 -                 title = "Sample index",
2017-01-19 18:05:29 -                 showgrid = true,
2017-01-19 18:05:29 -                 zeroline = true
2017-01-19 18:05:29 -             ),
2017-01-19 18:05:29 -         yaxis =
2017-01-19 18:05:29 -             Yaxis(
2017-01-19 18:05:29 -                 title = "Original phase in radians",
2017-01-19 18:05:29 -                 showline = true
2017-01-19 18:05:29 -             )
2017-01-19 18:05:29 -     )
2017-01-19 18:05:29 - [styledTrace1]
2017-01-19 18:05:29 - |> Chart.Plot
2017-01-19 18:05:29 - |> Chart.WithLayout styledLayout
2017-01-19 18:05:29 - |> Chart.WithWidth 700
2017-01-19 18:05:29 - |> Chart.WithHeight 500
2017-01-19 18:05:35 - let styledTrace1 =
2017-01-19 18:05:35 -     Scatter(
2017-01-19 18:05:35 -         x = List.map fst sinGraph,
2017-01-19 18:05:35 -         y = List.map snd sinGraph,
2017-01-19 18:05:35 -         mode = "lines",
2017-01-19 18:05:35 -         marker =
2017-01-19 18:05:35 -             Marker(
2017-01-19 18:05:35 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:05:35 -                 size = 12,
2017-01-19 18:05:35 -                 line =
2017-01-19 18:05:35 -                     Line(
2017-01-19 18:05:35 -                         color = "white",
2017-01-19 18:05:35 -                         width = 0.5
2017-01-19 18:05:35 -                     )
2017-01-19 18:05:35 -             )
2017-01-19 18:05:35 -     )
2017-01-19 18:05:35 - let styledLayout =
2017-01-19 18:05:35 -     Layout(
2017-01-19 18:05:35 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:05:35 -         xaxis =
2017-01-19 18:05:35 -             Xaxis(
2017-01-19 18:05:35 -                 title = "Sample index",
2017-01-19 18:05:35 -                 showgrid = true,
2017-01-19 18:05:35 -                 zeroline = true
2017-01-19 18:05:35 -             ),
2017-01-19 18:05:35 -         yaxis =
2017-01-19 18:05:35 -             Yaxis(
2017-01-19 18:05:35 -                 title = "Original phase in radians",
2017-01-19 18:05:35 -                 showline = true
2017-01-19 18:05:35 -             )
2017-01-19 18:05:35 -     )
2017-01-19 18:05:35 - [styledTrace1]
2017-01-19 18:05:35 - |> Chart.Plot
2017-01-19 18:05:35 - |> Chart.WithLayout styledLayout
2017-01-19 18:05:35 - |> Chart.WithWidth 700
2017-01-19 18:05:35 - |> Chart.WithHeight 500
2017-01-19 18:06:39 - let n = 512.0
2017-01-19 18:06:39 - let fo = 1.0/n
2017-01-19 18:06:39 - let x = [0.0 .. (n-1.0)]
2017-01-19 18:06:39 - let sinGraph = x
2017-01-19 18:06:39 -                |> List.map (fun x -> float(x),6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 18:07:20 - let n = 512.0
2017-01-19 18:07:20 - let fo = 1.0/n
2017-01-19 18:07:20 - let x = [0.0 .. (n-1.0)]
2017-01-19 18:07:20 - let y = x |> List.map (fun x -> 6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 18:07:20 - let sinGraph = List.zip x y
2017-01-19 18:07:22 - let styledTrace1 =
2017-01-19 18:07:22 -     Scatter(
2017-01-19 18:07:22 -         x = List.map fst sinGraph,
2017-01-19 18:07:22 -         y = List.map snd sinGraph,
2017-01-19 18:07:22 -         mode = "lines",
2017-01-19 18:07:22 -         marker =
2017-01-19 18:07:22 -             Marker(
2017-01-19 18:07:22 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:07:22 -                 size = 12,
2017-01-19 18:07:22 -                 line =
2017-01-19 18:07:22 -                     Line(
2017-01-19 18:07:22 -                         color = "white",
2017-01-19 18:07:22 -                         width = 0.5
2017-01-19 18:07:22 -                     )
2017-01-19 18:07:22 -             )
2017-01-19 18:07:22 -     )
2017-01-19 18:07:22 - let styledLayout =
2017-01-19 18:07:22 -     Layout(
2017-01-19 18:07:22 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:07:22 -         xaxis =
2017-01-19 18:07:22 -             Xaxis(
2017-01-19 18:07:22 -                 title = "Sample index",
2017-01-19 18:07:22 -                 showgrid = true,
2017-01-19 18:07:22 -                 zeroline = true
2017-01-19 18:07:22 -             ),
2017-01-19 18:07:22 -         yaxis =
2017-01-19 18:07:22 -             Yaxis(
2017-01-19 18:07:22 -                 title = "Original phase in radians",
2017-01-19 18:07:22 -                 showline = true
2017-01-19 18:07:22 -             )
2017-01-19 18:07:22 -     )
2017-01-19 18:07:22 - [styledTrace1]
2017-01-19 18:07:22 - |> Chart.Plot
2017-01-19 18:07:22 - |> Chart.WithLayout styledLayout
2017-01-19 18:07:22 - |> Chart.WithWidth 700
2017-01-19 18:07:22 - |> Chart.WithHeight 500
2017-01-19 18:11:27 - let n = 512.0
2017-01-19 18:11:27 - let fo = 1.0/n
2017-01-19 18:11:27 - let x = [0.0 .. (n-1.0)]
2017-01-19 18:11:27 - let y = x |> List.map (fun x -> 6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 18:11:27 - let sinGraph = List.zip x y
2017-01-19 18:11:27 - let yw = y |> List.map (fun y -> atan2 sin(y) cos(y))
2017-01-19 18:12:26 - let n = 512.0
2017-01-19 18:12:26 - let fo = 1.0/n
2017-01-19 18:12:26 - let x = [0.0 .. (n-1.0)]
2017-01-19 18:12:26 - let y = x |> List.map (fun x -> 6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 18:12:26 - let sinGraph = List.zip x y
2017-01-19 18:12:26 - let yw = y |> List.map (fun y -> atan2 (sin y) (cos y))
2017-01-19 18:13:04 - let styledTrace1 =
2017-01-19 18:13:04 -     Scatter(
2017-01-19 18:13:04 -         x = List.map fst sinGraph,
2017-01-19 18:13:04 -         y = List.map snd sinGraph,
2017-01-19 18:13:04 -         mode = "lines",
2017-01-19 18:13:04 -         marker =
2017-01-19 18:13:04 -             Marker(
2017-01-19 18:13:04 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:13:04 -                 size = 12,
2017-01-19 18:13:04 -                 line =
2017-01-19 18:13:04 -                     Line(
2017-01-19 18:13:04 -                         color = "white",
2017-01-19 18:13:04 -                         width = 0.5
2017-01-19 18:13:04 -                     )
2017-01-19 18:13:04 -             )
2017-01-19 18:13:04 -     )
2017-01-19 18:13:04 - let styledLayout =
2017-01-19 18:13:04 -     Layout(
2017-01-19 18:13:04 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:13:04 -         xaxis =
2017-01-19 18:13:04 -             Xaxis(
2017-01-19 18:13:04 -                 title = "Sample index",
2017-01-19 18:13:04 -                 showgrid = true,
2017-01-19 18:13:04 -                 zeroline = true
2017-01-19 18:13:04 -             ),
2017-01-19 18:13:04 -         yaxis =
2017-01-19 18:13:04 -             Yaxis(
2017-01-19 18:13:04 -                 title = "Original phase in radians",
2017-01-19 18:13:04 -                 showline = true
2017-01-19 18:13:04 -             )
2017-01-19 18:13:04 -     )
2017-01-19 18:13:04 - [styledTrace1]
2017-01-19 18:13:04 - |> Chart.Plot
2017-01-19 18:13:04 - |> Chart.WithLayout styledLayout
2017-01-19 18:13:18 - let styledTrace1 =
2017-01-19 18:13:18 -     Scatter(
2017-01-19 18:13:18 -         x = List.map fst atanGraph,
2017-01-19 18:13:18 -         y = List.map snd atanGraph,
2017-01-19 18:13:18 -         mode = "lines",
2017-01-19 18:13:18 -         marker =
2017-01-19 18:13:18 -             Marker(
2017-01-19 18:13:18 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:13:18 -                 size = 12,
2017-01-19 18:13:18 -                 line =
2017-01-19 18:13:18 -                     Line(
2017-01-19 18:13:18 -                         color = "white",
2017-01-19 18:13:18 -                         width = 0.5
2017-01-19 18:13:18 -                     )
2017-01-19 18:13:18 -             )
2017-01-19 18:13:18 -     )
2017-01-19 18:13:18 - let styledLayout =
2017-01-19 18:13:18 -     Layout(
2017-01-19 18:13:18 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:13:18 -         xaxis =
2017-01-19 18:13:18 -             Xaxis(
2017-01-19 18:13:18 -                 title = "Sample index",
2017-01-19 18:13:18 -                 showgrid = true,
2017-01-19 18:13:18 -                 zeroline = true
2017-01-19 18:13:18 -             ),
2017-01-19 18:13:18 -         yaxis =
2017-01-19 18:13:18 -             Yaxis(
2017-01-19 18:13:18 -                 title = "Original phase in radians",
2017-01-19 18:13:18 -                 showline = true
2017-01-19 18:13:18 -             )
2017-01-19 18:13:18 -     )
2017-01-19 18:13:18 - [styledTrace1]
2017-01-19 18:13:18 - |> Chart.Plot
2017-01-19 18:13:18 - |> Chart.WithLayout styledLayout
2017-01-19 18:13:18 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 18:13:18 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x40dffaf0 + 0x00183> in <filename unknown>:0 
2017-01-19 18:13:18 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x40d81700 + 0x00047> in <filename unknown>:0 
2017-01-19 18:13:18 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40c1fe20 + 0x00d27> in <filename unknown>:0 
2017-01-19 18:13:18 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41dd9190 + 0x00287> in <filename unknown>:0 
2017-01-19 18:13:26 - let n = 512.0
2017-01-19 18:13:26 - let fo = 1.0/n
2017-01-19 18:13:26 - let x = [0.0 .. (n-1.0)]
2017-01-19 18:13:26 - let y = x |> List.map (fun x -> 6.0 * sin(2.0*Math.PI*fo*x) )
2017-01-19 18:13:26 - let sinGraph = List.zip x y
2017-01-19 18:13:26 - let yw = y |> List.map (fun y -> atan2 (sin y) (cos y))
2017-01-19 18:13:26 - let atanGraph = List.zip x yw
2017-01-19 18:13:28 - let styledTrace1 =
2017-01-19 18:13:28 -     Scatter(
2017-01-19 18:13:28 -         x = List.map fst sinGraph,
2017-01-19 18:13:28 -         y = List.map snd sinGraph,
2017-01-19 18:13:28 -         mode = "lines",
2017-01-19 18:13:28 -         marker =
2017-01-19 18:13:28 -             Marker(
2017-01-19 18:13:28 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:13:28 -                 size = 12,
2017-01-19 18:13:28 -                 line =
2017-01-19 18:13:28 -                     Line(
2017-01-19 18:13:28 -                         color = "white",
2017-01-19 18:13:28 -                         width = 0.5
2017-01-19 18:13:28 -                     )
2017-01-19 18:13:28 -             )
2017-01-19 18:13:28 -     )
2017-01-19 18:13:28 - let styledLayout =
2017-01-19 18:13:28 -     Layout(
2017-01-19 18:13:28 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:13:28 -         xaxis =
2017-01-19 18:13:28 -             Xaxis(
2017-01-19 18:13:28 -                 title = "Sample index",
2017-01-19 18:13:28 -                 showgrid = true,
2017-01-19 18:13:28 -                 zeroline = true
2017-01-19 18:13:28 -             ),
2017-01-19 18:13:28 -         yaxis =
2017-01-19 18:13:28 -             Yaxis(
2017-01-19 18:13:28 -                 title = "Original phase in radians",
2017-01-19 18:13:28 -                 showline = true
2017-01-19 18:13:28 -             )
2017-01-19 18:13:28 -     )
2017-01-19 18:13:28 - [styledTrace1]
2017-01-19 18:13:28 - |> Chart.Plot
2017-01-19 18:13:28 - |> Chart.WithLayout styledLayout
2017-01-19 18:13:30 - let styledTrace1 =
2017-01-19 18:13:30 -     Scatter(
2017-01-19 18:13:30 -         x = List.map fst atanGraph,
2017-01-19 18:13:30 -         y = List.map snd atanGraph,
2017-01-19 18:13:30 -         mode = "lines",
2017-01-19 18:13:30 -         marker =
2017-01-19 18:13:30 -             Marker(
2017-01-19 18:13:30 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:13:30 -                 size = 12,
2017-01-19 18:13:30 -                 line =
2017-01-19 18:13:30 -                     Line(
2017-01-19 18:13:30 -                         color = "white",
2017-01-19 18:13:30 -                         width = 0.5
2017-01-19 18:13:30 -                     )
2017-01-19 18:13:30 -             )
2017-01-19 18:13:30 -     )
2017-01-19 18:13:30 - let styledLayout =
2017-01-19 18:13:30 -     Layout(
2017-01-19 18:13:30 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:13:30 -         xaxis =
2017-01-19 18:13:30 -             Xaxis(
2017-01-19 18:13:30 -                 title = "Sample index",
2017-01-19 18:13:30 -                 showgrid = true,
2017-01-19 18:13:30 -                 zeroline = true
2017-01-19 18:13:30 -             ),
2017-01-19 18:13:30 -         yaxis =
2017-01-19 18:13:30 -             Yaxis(
2017-01-19 18:13:30 -                 title = "Original phase in radians",
2017-01-19 18:13:30 -                 showline = true
2017-01-19 18:13:30 -             )
2017-01-19 18:13:30 -     )
2017-01-19 18:13:30 - [styledTrace1]
2017-01-19 18:13:30 - |> Chart.Plot
2017-01-19 18:13:30 - |> Chart.WithLayout styledLayout
2017-01-19 18:13:49 - let styledTrace1 =
2017-01-19 18:13:49 -     Scatter(
2017-01-19 18:13:49 -         x = List.map fst atanGraph,
2017-01-19 18:13:49 -         y = List.map snd atanGraph,
2017-01-19 18:13:49 -         mode = "lines",
2017-01-19 18:13:49 -         marker =
2017-01-19 18:13:49 -             Marker(
2017-01-19 18:13:49 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:13:49 -                 size = 12,
2017-01-19 18:13:49 -                 line =
2017-01-19 18:13:49 -                     Line(
2017-01-19 18:13:49 -                         color = "white",
2017-01-19 18:13:49 -                         width = 0.5
2017-01-19 18:13:49 -                     )
2017-01-19 18:13:49 -             )
2017-01-19 18:13:49 -     )
2017-01-19 18:13:49 - let styledLayout =
2017-01-19 18:13:49 -     Layout(
2017-01-19 18:13:49 -         title = "The wrapped phase",
2017-01-19 18:13:49 -         xaxis =
2017-01-19 18:13:49 -             Xaxis(
2017-01-19 18:13:49 -                 title = "Sample index",
2017-01-19 18:13:49 -                 showgrid = true,
2017-01-19 18:13:49 -                 zeroline = true
2017-01-19 18:13:49 -             ),
2017-01-19 18:13:49 -         yaxis =
2017-01-19 18:13:49 -             Yaxis(
2017-01-19 18:13:49 -                 title = "Wrapped phase in radians",
2017-01-19 18:13:49 -                 showline = true
2017-01-19 18:13:49 -             )
2017-01-19 18:13:49 -     )
2017-01-19 18:13:49 - [styledTrace1]
2017-01-19 18:13:49 - |> Chart.Plot
2017-01-19 18:13:49 - |> Chart.WithLayout styledLayout
2017-01-19 18:14:18 - let styledTrace1 =
2017-01-19 18:14:18 -     Scatter(
2017-01-19 18:14:18 -         x = List.map fst atanGraph,
2017-01-19 18:14:18 -         y = List.map snd atanGraph,
2017-01-19 18:14:18 -         mode = "lines",
2017-01-19 18:14:18 -         marker =
2017-01-19 18:14:18 -             Marker(
2017-01-19 18:14:18 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:14:18 -                 size = 12,
2017-01-19 18:14:18 -                 line =
2017-01-19 18:14:18 -                     Line(
2017-01-19 18:14:18 -                         color = "white",
2017-01-19 18:14:18 -                         width = 0.5
2017-01-19 18:14:18 -                     )
2017-01-19 18:14:18 -             )
2017-01-19 18:14:18 -     )
2017-01-19 18:14:18 - let styledLayout =
2017-01-19 18:14:18 -     Layout(
2017-01-19 18:14:18 -         title = "The wrapped phase",
2017-01-19 18:14:18 -         xaxis =
2017-01-19 18:14:18 -             Xaxis(
2017-01-19 18:14:18 -                 title = "Sample index",
2017-01-19 18:14:18 -                 showgrid = true,
2017-01-19 18:14:18 -                 zeroline = true
2017-01-19 18:14:18 -             ),
2017-01-19 18:14:18 -         yaxis =
2017-01-19 18:14:18 -             Yaxis(
2017-01-19 18:14:18 -                 title = "Wrapped phase in radians",
2017-01-19 18:14:18 -                 showline = true
2017-01-19 18:14:18 -             )
2017-01-19 18:14:18 -     )
2017-01-19 18:14:18 - [atanGraph]
2017-01-19 18:14:18 - |> Chart.Plot
2017-01-19 18:14:18 - |> Chart.WithLayout styledLayout
2017-01-19 18:14:18 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 18:14:18 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x40dffaf0 + 0x00183> in <filename unknown>:0 
2017-01-19 18:14:18 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x40d81700 + 0x00047> in <filename unknown>:0 
2017-01-19 18:14:18 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40c1fe20 + 0x00d27> in <filename unknown>:0 
2017-01-19 18:14:18 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41dd9190 + 0x00287> in <filename unknown>:0 
2017-01-19 18:14:42 - let styledTraceSin
2017-01-19 18:14:42 -     Scatter(
2017-01-19 18:14:42 -         x = List.map fst sinGraph,
2017-01-19 18:14:42 -         y = List.map snd sinGraph,
2017-01-19 18:14:42 -         mode = "lines",
2017-01-19 18:14:42 -         marker =
2017-01-19 18:14:42 -             Marker(
2017-01-19 18:14:42 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:14:42 -                 size = 12,
2017-01-19 18:14:42 -                 line =
2017-01-19 18:14:42 -                     Line(
2017-01-19 18:14:42 -                         color = "white",
2017-01-19 18:14:42 -                         width = 0.5
2017-01-19 18:14:42 -                     )
2017-01-19 18:14:42 -             )
2017-01-19 18:14:42 -     )
2017-01-19 18:14:42 - let styledLayoutSin
2017-01-19 18:14:42 -     Layout(
2017-01-19 18:14:42 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:14:42 -         xaxis =
2017-01-19 18:14:42 -             Xaxis(
2017-01-19 18:14:42 -                 title = "Sample index",
2017-01-19 18:14:42 -                 showgrid = true,
2017-01-19 18:14:42 -                 zeroline = true
2017-01-19 18:14:42 -             ),
2017-01-19 18:14:42 -         yaxis =
2017-01-19 18:14:42 -             Yaxis(
2017-01-19 18:14:42 -                 title = "Original phase in radians",
2017-01-19 18:14:42 -                 showline = true
2017-01-19 18:14:42 -             )
2017-01-19 18:14:42 -     )
2017-01-19 18:14:42 - [styledTraceSin
2017-01-19 18:14:42 - |> Chart.Plot
2017-01-19 18:14:42 - |> Chart.WithLayout styledLayoutSin
2017-01-19 18:14:56 - let styledTraceSin
2017-01-19 18:14:56 -     Scatter(
2017-01-19 18:14:56 -         x = List.map fst sinGraph,
2017-01-19 18:14:56 -         y = List.map snd sinGraph,
2017-01-19 18:14:56 -         mode = "lines",
2017-01-19 18:14:56 -         marker =
2017-01-19 18:14:56 -             Marker(
2017-01-19 18:14:56 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:14:56 -                 size = 12,
2017-01-19 18:14:56 -                 line =
2017-01-19 18:14:56 -                     Line(
2017-01-19 18:14:56 -                         color = "white",
2017-01-19 18:14:56 -                         width = 0.5
2017-01-19 18:14:56 -                     )
2017-01-19 18:14:56 -             )
2017-01-19 18:14:56 -     )
2017-01-19 18:14:56 - let styledLayoutSin
2017-01-19 18:14:56 -     Layout(
2017-01-19 18:14:56 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:14:56 -         xaxis =
2017-01-19 18:14:56 -             Xaxis(
2017-01-19 18:14:56 -                 title = "Sample index",
2017-01-19 18:14:56 -                 showgrid = true,
2017-01-19 18:14:56 -                 zeroline = true
2017-01-19 18:14:56 -             ),
2017-01-19 18:14:56 -         yaxis =
2017-01-19 18:14:56 -             Yaxis(
2017-01-19 18:14:56 -                 title = "Original phase in radians",
2017-01-19 18:14:56 -                 showline = true
2017-01-19 18:14:56 -             )
2017-01-19 18:14:56 -     )
2017-01-19 18:14:56 - [styledTraceSin]
2017-01-19 18:14:56 - |> Chart.Plot
2017-01-19 18:14:56 - |> Chart.WithLayout styledLayoutSin
2017-01-19 18:15:20 - let styledTraceSin = 
2017-01-19 18:15:20 -     Scatter(
2017-01-19 18:15:20 -         x = List.map fst sinGraph,
2017-01-19 18:15:20 -         y = List.map snd sinGraph,
2017-01-19 18:15:20 -         mode = "lines",
2017-01-19 18:15:20 -         marker =
2017-01-19 18:15:20 -             Marker(
2017-01-19 18:15:20 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:15:20 -                 size = 12,
2017-01-19 18:15:20 -                 line =
2017-01-19 18:15:20 -                     Line(
2017-01-19 18:15:20 -                         color = "white",
2017-01-19 18:15:20 -                         width = 0.5
2017-01-19 18:15:20 -                     )
2017-01-19 18:15:20 -             )
2017-01-19 18:15:20 -     )
2017-01-19 18:15:20 - let styledLayoutSin =
2017-01-19 18:15:20 -     Layout(
2017-01-19 18:15:20 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:15:20 -         xaxis =
2017-01-19 18:15:20 -             Xaxis(
2017-01-19 18:15:20 -                 title = "Sample index",
2017-01-19 18:15:20 -                 showgrid = true,
2017-01-19 18:15:20 -                 zeroline = true
2017-01-19 18:15:20 -             ),
2017-01-19 18:15:20 -         yaxis =
2017-01-19 18:15:20 -             Yaxis(
2017-01-19 18:15:20 -                 title = "Original phase in radians",
2017-01-19 18:15:20 -                 showline = true
2017-01-19 18:15:20 -             )
2017-01-19 18:15:20 -     )
2017-01-19 18:15:20 - [styledTraceSin]
2017-01-19 18:15:20 - |> Chart.Plot
2017-01-19 18:15:20 - |> Chart.WithLayout styledLayoutSin
2017-01-19 18:15:35 - let styledTraceAtan =
2017-01-19 18:15:35 -     Scatter(
2017-01-19 18:15:35 -         x = List.map fst atanGraph,
2017-01-19 18:15:35 -         y = List.map snd atanGraph,
2017-01-19 18:15:35 -         mode = "lines",
2017-01-19 18:15:35 -         marker =
2017-01-19 18:15:35 -             Marker(
2017-01-19 18:15:35 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:15:35 -                 size = 12,
2017-01-19 18:15:35 -                 line =
2017-01-19 18:15:35 -                     Line(
2017-01-19 18:15:35 -                         color = "white",
2017-01-19 18:15:35 -                         width = 0.5
2017-01-19 18:15:35 -                     )
2017-01-19 18:15:35 -             )
2017-01-19 18:15:35 -     )
2017-01-19 18:15:35 - let styledLayoutAtan =
2017-01-19 18:15:35 -     Layout(
2017-01-19 18:15:35 -         title = "The wrapped phase",
2017-01-19 18:15:35 -         xaxis =
2017-01-19 18:15:35 -             Xaxis(
2017-01-19 18:15:35 -                 title = "Sample index",
2017-01-19 18:15:35 -                 showgrid = true,
2017-01-19 18:15:35 -                 zeroline = true
2017-01-19 18:15:35 -             ),
2017-01-19 18:15:35 -         yaxis =
2017-01-19 18:15:35 -             Yaxis(
2017-01-19 18:15:35 -                 title = "Wrapped phase in radians",
2017-01-19 18:15:35 -                 showline = true
2017-01-19 18:15:35 -             )
2017-01-19 18:15:35 -     )
2017-01-19 18:15:35 - [styledTraceAtan]
2017-01-19 18:15:35 - |> Chart.Plot
2017-01-19 18:15:35 - |> Chart.WithLayout styledLayoutAtan
2017-01-19 18:16:06 - let styledTraceSin = 
2017-01-19 18:16:06 -     Scatter(
2017-01-19 18:16:06 -         x = List.map fst sinGraph,
2017-01-19 18:16:06 -         y = List.map snd sinGraph,
2017-01-19 18:16:06 -         mode = "lines",
2017-01-19 18:16:06 -         marker =
2017-01-19 18:16:06 -             Marker(
2017-01-19 18:16:06 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:16:06 -                 size = 12,
2017-01-19 18:16:06 -                 line =
2017-01-19 18:16:06 -                     Line(
2017-01-19 18:16:06 -                         color = "white",
2017-01-19 18:16:06 -                         width = 0.5
2017-01-19 18:16:06 -                     )
2017-01-19 18:16:06 -             )
2017-01-19 18:16:06 -     )
2017-01-19 18:16:06 - let styledLayoutSin =
2017-01-19 18:16:06 -     Layout(
2017-01-19 18:16:06 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:16:06 -         xaxis =
2017-01-19 18:16:06 -             Xaxis(
2017-01-19 18:16:06 -                 title = "Sample index",
2017-01-19 18:16:06 -                 showgrid = true,
2017-01-19 18:16:06 -                 zeroline = true
2017-01-19 18:16:06 -             ),
2017-01-19 18:16:06 -         yaxis =
2017-01-19 18:16:06 -             Yaxis(
2017-01-19 18:16:06 -                 title = "Original phase in radians",
2017-01-19 18:16:06 -                 showline = true
2017-01-19 18:16:06 -             )
2017-01-19 18:16:06 -     )
2017-01-19 18:16:06 - let aa 
2017-01-19 18:16:06 -     [styledTraceSin]
2017-01-19 18:16:06 -     |> Chart.Plot
2017-01-19 18:16:06 -     |> Chart.WithLayout styledLayoutSin
2017-01-19 18:16:06 - (aa,aa)
2017-01-19 18:16:14 - let styledTraceSin = 
2017-01-19 18:16:14 -     Scatter(
2017-01-19 18:16:14 -         x = List.map fst sinGraph,
2017-01-19 18:16:14 -         y = List.map snd sinGraph,
2017-01-19 18:16:14 -         mode = "lines",
2017-01-19 18:16:14 -         marker =
2017-01-19 18:16:14 -             Marker(
2017-01-19 18:16:14 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:16:14 -                 size = 12,
2017-01-19 18:16:14 -                 line =
2017-01-19 18:16:14 -                     Line(
2017-01-19 18:16:14 -                         color = "white",
2017-01-19 18:16:14 -                         width = 0.5
2017-01-19 18:16:14 -                     )
2017-01-19 18:16:14 -             )
2017-01-19 18:16:14 -     )
2017-01-19 18:16:14 - let styledLayoutSin =
2017-01-19 18:16:14 -     Layout(
2017-01-19 18:16:14 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:16:14 -         xaxis =
2017-01-19 18:16:14 -             Xaxis(
2017-01-19 18:16:14 -                 title = "Sample index",
2017-01-19 18:16:14 -                 showgrid = true,
2017-01-19 18:16:14 -                 zeroline = true
2017-01-19 18:16:14 -             ),
2017-01-19 18:16:14 -         yaxis =
2017-01-19 18:16:14 -             Yaxis(
2017-01-19 18:16:14 -                 title = "Original phase in radians",
2017-01-19 18:16:14 -                 showline = true
2017-01-19 18:16:14 -             )
2017-01-19 18:16:14 -     )
2017-01-19 18:16:14 - let aa =
2017-01-19 18:16:14 -     [styledTraceSin]
2017-01-19 18:16:14 -     |> Chart.Plot
2017-01-19 18:16:14 -     |> Chart.WithLayout styledLayoutSin
2017-01-19 18:16:14 - (aa,aa)
2017-01-19 18:16:34 - let styledTraceSin = 
2017-01-19 18:16:34 -     Scatter(
2017-01-19 18:16:34 -         x = List.map fst sinGraph,
2017-01-19 18:16:34 -         y = List.map snd sinGraph,
2017-01-19 18:16:34 -         mode = "lines",
2017-01-19 18:16:34 -         marker =
2017-01-19 18:16:34 -             Marker(
2017-01-19 18:16:34 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:16:34 -                 size = 12,
2017-01-19 18:16:34 -                 line =
2017-01-19 18:16:34 -                     Line(
2017-01-19 18:16:34 -                         color = "white",
2017-01-19 18:16:34 -                         width = 0.5
2017-01-19 18:16:34 -                     )
2017-01-19 18:16:34 -             )
2017-01-19 18:16:34 -     )
2017-01-19 18:16:34 - let styledLayoutSin =
2017-01-19 18:16:34 -     Layout(
2017-01-19 18:16:34 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:16:34 -         xaxis =
2017-01-19 18:16:34 -             Xaxis(
2017-01-19 18:16:34 -                 title = "Sample index",
2017-01-19 18:16:34 -                 showgrid = true,
2017-01-19 18:16:34 -                 zeroline = true
2017-01-19 18:16:34 -             ),
2017-01-19 18:16:34 -         yaxis =
2017-01-19 18:16:34 -             Yaxis(
2017-01-19 18:16:34 -                 title = "Original phase in radians",
2017-01-19 18:16:34 -                 showline = true
2017-01-19 18:16:34 -             )
2017-01-19 18:16:34 -     )
2017-01-19 18:16:34 - let aa =
2017-01-19 18:16:34 -     [styledTraceSin]
2017-01-19 18:16:34 -     |> Chart.Plot
2017-01-19 18:16:34 -     |> Chart.WithLayout styledLayoutSin
2017-01-19 18:16:34 - [aa;aa]
2017-01-19 18:18:35 - let styledTraceSin = 
2017-01-19 18:18:35 -     Scatter(
2017-01-19 18:18:35 -         x = List.map fst sinGraph,
2017-01-19 18:18:35 -         y = List.map snd sinGraph,
2017-01-19 18:18:35 -         mode = "lines",
2017-01-19 18:18:35 -         marker =
2017-01-19 18:18:35 -             Marker(
2017-01-19 18:18:35 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:18:35 -                 size = 12,
2017-01-19 18:18:35 -                 line =
2017-01-19 18:18:35 -                     Line(
2017-01-19 18:18:35 -                         color = "white",
2017-01-19 18:18:35 -                         width = 0.5
2017-01-19 18:18:35 -                     )
2017-01-19 18:18:35 -             )
2017-01-19 18:18:35 -     )
2017-01-19 18:18:35 -     Scatter(
2017-01-19 18:18:35 -         x = List.map fst atanGraph,
2017-01-19 18:18:35 -         y = List.map snd atanGraph,
2017-01-19 18:18:35 -         mode = "lines",
2017-01-19 18:18:35 -         marker =
2017-01-19 18:18:35 -             Marker(
2017-01-19 18:18:35 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:18:35 -                 size = 12,
2017-01-19 18:18:35 -                 line =
2017-01-19 18:18:35 -                     Line(
2017-01-19 18:18:35 -                         color = "white",
2017-01-19 18:18:35 -                         width = 0.5
2017-01-19 18:18:35 -                     )
2017-01-19 18:18:35 -             )
2017-01-19 18:18:35 -     )
2017-01-19 18:18:35 - let styledLayoutSin =
2017-01-19 18:18:35 -     Layout(
2017-01-19 18:18:35 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:18:35 -         xaxis =
2017-01-19 18:18:35 -             Xaxis(
2017-01-19 18:18:35 -                 title = "Sample index",
2017-01-19 18:18:35 -                 showgrid = true,
2017-01-19 18:18:35 -                 zeroline = true
2017-01-19 18:18:35 -             ),
2017-01-19 18:18:35 -         yaxis =
2017-01-19 18:18:35 -             Yaxis(
2017-01-19 18:18:35 -                 title = "Original phase in radians",
2017-01-19 18:18:35 -                 showline = true
2017-01-19 18:18:35 -             )
2017-01-19 18:18:35 -     )
2017-01-19 18:18:35 - let aa =
2017-01-19 18:18:35 -     [styledTraceSin]
2017-01-19 18:18:35 -     |> Chart.Plot
2017-01-19 18:18:35 -     |> Chart.WithLayout styledLayoutSin
2017-01-19 18:18:35 - [aa;aa]
2017-01-19 18:18:46 - let styledTraceSin = 
2017-01-19 18:18:46 -     Scatter(
2017-01-19 18:18:46 -         x = List.map fst sinGraph,
2017-01-19 18:18:46 -         y = List.map snd sinGraph,
2017-01-19 18:18:46 -         mode = "lines",
2017-01-19 18:18:46 -         marker =
2017-01-19 18:18:46 -             Marker(
2017-01-19 18:18:46 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:18:46 -                 size = 12,
2017-01-19 18:18:46 -                 line =
2017-01-19 18:18:46 -                     Line(
2017-01-19 18:18:46 -                         color = "white",
2017-01-19 18:18:46 -                         width = 0.5
2017-01-19 18:18:46 -                     )
2017-01-19 18:18:46 -             )
2017-01-19 18:18:46 -     )
2017-01-19 18:18:46 -     Scatter(
2017-01-19 18:18:46 -         x = List.map fst atanGraph,
2017-01-19 18:18:46 -         y = List.map snd atanGraph,
2017-01-19 18:18:46 -         mode = "lines",
2017-01-19 18:18:46 -         marker =
2017-01-19 18:18:46 -             Marker(
2017-01-19 18:18:46 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:18:46 -                 size = 12,
2017-01-19 18:18:46 -                 line =
2017-01-19 18:18:46 -                     Line(
2017-01-19 18:18:46 -                         color = "white",
2017-01-19 18:18:46 -                         width = 0.5
2017-01-19 18:18:46 -                     )
2017-01-19 18:18:46 -             )
2017-01-19 18:18:46 -     )
2017-01-19 18:18:46 - let styledLayoutSin =
2017-01-19 18:18:46 -     Layout(
2017-01-19 18:18:46 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:18:46 -         xaxis =
2017-01-19 18:18:46 -             Xaxis(
2017-01-19 18:18:46 -                 title = "Sample index",
2017-01-19 18:18:46 -                 showgrid = true,
2017-01-19 18:18:46 -                 zeroline = true
2017-01-19 18:18:46 -             ),
2017-01-19 18:18:46 -         yaxis =
2017-01-19 18:18:46 -             Yaxis(
2017-01-19 18:18:46 -                 title = "Original phase in radians",
2017-01-19 18:18:46 -                 showline = true
2017-01-19 18:18:46 -             )
2017-01-19 18:18:46 -     )
2017-01-19 18:18:46 - let aa =
2017-01-19 18:18:46 -     [styledTraceSin]
2017-01-19 18:18:46 -     |> Chart.Plot
2017-01-19 18:18:46 -     |> Chart.WithLayout styledLayoutSin
2017-01-19 18:18:58 - let styledTraceSin = 
2017-01-19 18:18:58 -     Scatter(
2017-01-19 18:18:58 -         x = List.map fst sinGraph,
2017-01-19 18:18:58 -         y = List.map snd sinGraph,
2017-01-19 18:18:58 -         mode = "lines",
2017-01-19 18:18:58 -         marker =
2017-01-19 18:18:58 -             Marker(
2017-01-19 18:18:58 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:18:58 -                 size = 12,
2017-01-19 18:18:58 -                 line =
2017-01-19 18:18:58 -                     Line(
2017-01-19 18:18:58 -                         color = "white",
2017-01-19 18:18:58 -                         width = 0.5
2017-01-19 18:18:58 -                     )
2017-01-19 18:18:58 -             )
2017-01-19 18:18:58 -     )
2017-01-19 18:18:58 -     Scatter(
2017-01-19 18:18:58 -         x = List.map fst atanGraph,
2017-01-19 18:18:58 -         y = List.map snd atanGraph,
2017-01-19 18:18:58 -         mode = "lines",
2017-01-19 18:18:58 -         marker =
2017-01-19 18:18:58 -             Marker(
2017-01-19 18:18:58 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:18:58 -                 size = 12,
2017-01-19 18:18:58 -                 line =
2017-01-19 18:18:58 -                     Line(
2017-01-19 18:18:58 -                         color = "white",
2017-01-19 18:18:58 -                         width = 0.5
2017-01-19 18:18:58 -                     )
2017-01-19 18:18:58 -             )
2017-01-19 18:18:58 -     )
2017-01-19 18:18:58 - let styledLayoutSin =
2017-01-19 18:18:58 -     Layout(
2017-01-19 18:18:58 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:18:58 -         xaxis =
2017-01-19 18:18:58 -             Xaxis(
2017-01-19 18:18:58 -                 title = "Sample index",
2017-01-19 18:18:58 -                 showgrid = true,
2017-01-19 18:18:58 -                 zeroline = true
2017-01-19 18:18:58 -             ),
2017-01-19 18:18:58 -         yaxis =
2017-01-19 18:18:58 -             Yaxis(
2017-01-19 18:18:58 -                 title = "Original phase in radians",
2017-01-19 18:18:58 -                 showline = true
2017-01-19 18:18:58 -             )
2017-01-19 18:18:58 -     )
2017-01-19 18:18:58 - [styledTraceSin]
2017-01-19 18:18:58 - |> Chart.Plot
2017-01-19 18:18:58 - |> Chart.WithLayout styledLayoutSin
2017-01-19 18:19:07 - let styledTraceSin = 
2017-01-19 18:19:07 -     Scatter(
2017-01-19 18:19:07 -         x = List.map fst sinGraph,
2017-01-19 18:19:07 -         y = List.map snd sinGraph,
2017-01-19 18:19:07 -         mode = "lines",
2017-01-19 18:19:07 -         marker =
2017-01-19 18:19:07 -             Marker(
2017-01-19 18:19:07 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:19:07 -                 size = 12,
2017-01-19 18:19:07 -                 line =
2017-01-19 18:19:07 -                     Line(
2017-01-19 18:19:07 -                         color = "white",
2017-01-19 18:19:07 -                         width = 0.5
2017-01-19 18:19:07 -                     )
2017-01-19 18:19:07 -             )
2017-01-19 18:19:07 -     ),
2017-01-19 18:19:07 -     Scatter(
2017-01-19 18:19:07 -         x = List.map fst atanGraph,
2017-01-19 18:19:07 -         y = List.map snd atanGraph,
2017-01-19 18:19:07 -         mode = "lines",
2017-01-19 18:19:07 -         marker =
2017-01-19 18:19:07 -             Marker(
2017-01-19 18:19:07 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:19:07 -                 size = 12,
2017-01-19 18:19:07 -                 line =
2017-01-19 18:19:07 -                     Line(
2017-01-19 18:19:07 -                         color = "white",
2017-01-19 18:19:07 -                         width = 0.5
2017-01-19 18:19:07 -                     )
2017-01-19 18:19:07 -             )
2017-01-19 18:19:07 -     )
2017-01-19 18:19:07 - let styledLayoutSin =
2017-01-19 18:19:07 -     Layout(
2017-01-19 18:19:07 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:19:07 -         xaxis =
2017-01-19 18:19:07 -             Xaxis(
2017-01-19 18:19:07 -                 title = "Sample index",
2017-01-19 18:19:07 -                 showgrid = true,
2017-01-19 18:19:07 -                 zeroline = true
2017-01-19 18:19:07 -             ),
2017-01-19 18:19:07 -         yaxis =
2017-01-19 18:19:07 -             Yaxis(
2017-01-19 18:19:07 -                 title = "Original phase in radians",
2017-01-19 18:19:07 -                 showline = true
2017-01-19 18:19:07 -             )
2017-01-19 18:19:07 -     )
2017-01-19 18:19:07 - [styledTraceSin]
2017-01-19 18:19:07 - |> Chart.Plot
2017-01-19 18:19:07 - |> Chart.WithLayout styledLayoutSin
2017-01-19 18:19:07 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 18:19:07 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x40dffaf0 + 0x00183> in <filename unknown>:0 
2017-01-19 18:19:07 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x40d81700 + 0x00047> in <filename unknown>:0 
2017-01-19 18:19:07 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40c1fe20 + 0x00d27> in <filename unknown>:0 
2017-01-19 18:19:07 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41dd9190 + 0x00287> in <filename unknown>:0 
2017-01-19 18:20:00 - let styledTraceSin = 
2017-01-19 18:20:00 -     [
2017-01-19 18:20:00 -         Scatter(
2017-01-19 18:20:00 -             x = List.map fst sinGraph,
2017-01-19 18:20:00 -             y = List.map snd sinGraph,
2017-01-19 18:20:00 -             mode = "lines",
2017-01-19 18:20:00 -             marker =
2017-01-19 18:20:00 -                 Marker(
2017-01-19 18:20:00 -                     color = "rgb(164, 194, 244)",
2017-01-19 18:20:00 -                     size = 12,
2017-01-19 18:20:00 -                     line =
2017-01-19 18:20:00 -                         Line(
2017-01-19 18:20:00 -                             color = "white",
2017-01-19 18:20:00 -                             width = 0.5
2017-01-19 18:20:00 -                         )
2017-01-19 18:20:00 -                 )
2017-01-19 18:20:00 -         ) :> Trace;
2017-01-19 18:20:00 -         Scatter(
2017-01-19 18:20:00 -             x = List.map fst atanGraph,
2017-01-19 18:20:00 -             y = List.map snd atanGraph,
2017-01-19 18:20:00 -             mode = "lines",
2017-01-19 18:20:00 -             marker =
2017-01-19 18:20:00 -                 Marker(
2017-01-19 18:20:00 -                     color = "rgb(164, 194, 244)",
2017-01-19 18:20:00 -                     size = 12,
2017-01-19 18:20:00 -                     line =
2017-01-19 18:20:00 -                         Line(
2017-01-19 18:20:00 -                             color = "white",
2017-01-19 18:20:00 -                             width = 0.5
2017-01-19 18:20:00 -                         )
2017-01-19 18:20:00 -                 )
2017-01-19 18:20:00 -         )]
2017-01-19 18:20:00 - let styledLayoutSin =
2017-01-19 18:20:00 -     Layout(
2017-01-19 18:20:00 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:20:00 -         xaxis =
2017-01-19 18:20:00 -             Xaxis(
2017-01-19 18:20:00 -                 title = "Sample index",
2017-01-19 18:20:00 -                 showgrid = true,
2017-01-19 18:20:00 -                 zeroline = true
2017-01-19 18:20:00 -             ),
2017-01-19 18:20:00 -         yaxis =
2017-01-19 18:20:00 -             Yaxis(
2017-01-19 18:20:00 -                 title = "Original phase in radians",
2017-01-19 18:20:00 -                 showline = true
2017-01-19 18:20:00 -             )
2017-01-19 18:20:00 -     )
2017-01-19 18:20:00 - [styledTraceSin]
2017-01-19 18:20:00 - |> Chart.Plot
2017-01-19 18:20:00 - |> Chart.WithLayout styledLayoutSin
2017-01-19 18:20:00 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 18:20:00 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x40dffaf0 + 0x00183> in <filename unknown>:0 
2017-01-19 18:20:00 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x40d81700 + 0x00047> in <filename unknown>:0 
2017-01-19 18:20:00 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40c1fe20 + 0x00d27> in <filename unknown>:0 
2017-01-19 18:20:00 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41dd9190 + 0x00287> in <filename unknown>:0 
2017-01-19 18:20:11 - let styledTraceSin = 
2017-01-19 18:20:11 -     [
2017-01-19 18:20:11 -         Scatter(
2017-01-19 18:20:11 -             x = List.map fst sinGraph,
2017-01-19 18:20:11 -             y = List.map snd sinGraph,
2017-01-19 18:20:11 -             mode = "lines",
2017-01-19 18:20:11 -             marker =
2017-01-19 18:20:11 -                 Marker(
2017-01-19 18:20:11 -                     color = "rgb(164, 194, 244)",
2017-01-19 18:20:11 -                     size = 12,
2017-01-19 18:20:11 -                     line =
2017-01-19 18:20:11 -                         Line(
2017-01-19 18:20:11 -                             color = "white",
2017-01-19 18:20:11 -                             width = 0.5
2017-01-19 18:20:11 -                         )
2017-01-19 18:20:11 -                 )
2017-01-19 18:20:11 -         ) :> Trace;
2017-01-19 18:20:11 -         Scatter(
2017-01-19 18:20:11 -             x = List.map fst atanGraph,
2017-01-19 18:20:11 -             y = List.map snd atanGraph,
2017-01-19 18:20:11 -             mode = "lines",
2017-01-19 18:20:11 -             marker =
2017-01-19 18:20:11 -                 Marker(
2017-01-19 18:20:11 -                     color = "rgb(164, 194, 244)",
2017-01-19 18:20:11 -                     size = 12,
2017-01-19 18:20:11 -                     line =
2017-01-19 18:20:11 -                         Line(
2017-01-19 18:20:11 -                             color = "white",
2017-01-19 18:20:11 -                             width = 0.5
2017-01-19 18:20:11 -                         )
2017-01-19 18:20:11 -                 )
2017-01-19 18:20:11 -         ) :> Trace]
2017-01-19 18:20:11 - let styledLayoutSin =
2017-01-19 18:20:11 -     Layout(
2017-01-19 18:20:11 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:20:11 -         xaxis =
2017-01-19 18:20:11 -             Xaxis(
2017-01-19 18:20:11 -                 title = "Sample index",
2017-01-19 18:20:11 -                 showgrid = true,
2017-01-19 18:20:11 -                 zeroline = true
2017-01-19 18:20:11 -             ),
2017-01-19 18:20:11 -         yaxis =
2017-01-19 18:20:11 -             Yaxis(
2017-01-19 18:20:11 -                 title = "Original phase in radians",
2017-01-19 18:20:11 -                 showline = true
2017-01-19 18:20:11 -             )
2017-01-19 18:20:11 -     )
2017-01-19 18:20:11 - [styledTraceSin]
2017-01-19 18:20:11 - |> Chart.Plot
2017-01-19 18:20:11 - |> Chart.WithLayout styledLayoutSin
2017-01-19 18:20:11 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-19 18:20:11 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x40dffaf0 + 0x00183> in <filename unknown>:0 
2017-01-19 18:20:11 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x40d81700 + 0x00047> in <filename unknown>:0 
2017-01-19 18:20:11 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x40c1fe20 + 0x00d27> in <filename unknown>:0 
2017-01-19 18:20:11 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41dd9190 + 0x00287> in <filename unknown>:0 
2017-01-19 18:21:46 - let styledTraceSin = 
2017-01-19 18:21:46 -     [
2017-01-19 18:21:46 -         Scatter(
2017-01-19 18:21:46 -             x = List.map fst sinGraph,
2017-01-19 18:21:46 -             y = List.map snd sinGraph,
2017-01-19 18:21:46 -             mode = "lines",
2017-01-19 18:21:46 -             marker =
2017-01-19 18:21:46 -                 Marker(
2017-01-19 18:21:46 -                     color = "rgb(164, 194, 244)",
2017-01-19 18:21:46 -                     size = 12,
2017-01-19 18:21:46 -                     line =
2017-01-19 18:21:46 -                         Line(
2017-01-19 18:21:46 -                             color = "white",
2017-01-19 18:21:46 -                             width = 0.5
2017-01-19 18:21:46 -                         )
2017-01-19 18:21:46 -                 )
2017-01-19 18:21:46 -         ) :> Trace;
2017-01-19 18:21:46 -         Scatter(
2017-01-19 18:21:46 -             x = List.map fst atanGraph,
2017-01-19 18:21:46 -             y = List.map snd atanGraph,
2017-01-19 18:21:46 -             mode = "lines",
2017-01-19 18:21:46 -             marker =
2017-01-19 18:21:46 -                 Marker(
2017-01-19 18:21:46 -                     color = "rgb(164, 194, 244)",
2017-01-19 18:21:46 -                     size = 12,
2017-01-19 18:21:46 -                     line =
2017-01-19 18:21:46 -                         Line(
2017-01-19 18:21:46 -                             color = "white",
2017-01-19 18:21:46 -                             width = 0.5
2017-01-19 18:21:46 -                         )
2017-01-19 18:21:46 -                 )
2017-01-19 18:21:46 -         ) :> Trace]
2017-01-19 18:21:46 - let styledLayoutSin =
2017-01-19 18:21:46 -     Layout(
2017-01-19 18:21:46 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:21:46 -         xaxis =
2017-01-19 18:21:46 -             Xaxis(
2017-01-19 18:21:46 -                 title = "Sample index",
2017-01-19 18:21:46 -                 showgrid = true,
2017-01-19 18:21:46 -                 zeroline = true
2017-01-19 18:21:46 -             ),
2017-01-19 18:21:46 -         yaxis =
2017-01-19 18:21:46 -             Yaxis(
2017-01-19 18:21:46 -                 title = "Original phase in radians",
2017-01-19 18:21:46 -                 showline = true
2017-01-19 18:21:46 -             )
2017-01-19 18:21:46 -     )
2017-01-19 18:21:46 - styledTraceSin
2017-01-19 18:21:46 - |> Chart.Plot
2017-01-19 18:21:46 - |> Chart.WithLayout styledLayoutSin
2017-01-19 18:23:38 - let trace1 =
2017-01-19 18:23:38 -     Scatter(
2017-01-19 18:23:38 -         x = [1; 2; 3; 4],
2017-01-19 18:23:38 -         y = [10; 15; 13; 17],
2017-01-19 18:23:38 -         mode = "markers",
2017-01-19 18:23:38 -         marker =
2017-01-19 18:23:38 -             Marker(
2017-01-19 18:23:38 -                 color = "rgb(219, 64, 82)",
2017-01-19 18:23:38 -                 size = 12.
2017-01-19 18:23:38 -             )
2017-01-19 18:23:38 -     )
2017-01-19 18:23:38 - let trace2 =
2017-01-19 18:23:38 -     Scatter(
2017-01-19 18:23:38 -         x = [2; 3; 4; 5],
2017-01-19 18:23:38 -         y = [16; 5; 11; 9],
2017-01-19 18:23:38 -         mode = "lines",
2017-01-19 18:23:38 -         line =
2017-01-19 18:23:38 -             Line(
2017-01-19 18:23:38 -                 color = "rgb(55, 128, 191)",
2017-01-19 18:23:38 -                 width = 3.
2017-01-19 18:23:38 -             )
2017-01-19 18:23:38 -     )
2017-01-19 18:23:38 - let trace3 =
2017-01-19 18:23:38 -     Scatter(
2017-01-19 18:23:38 -         x = [1; 2; 3; 4],
2017-01-19 18:23:38 -         y = [12; 9; 15; 12],
2017-01-19 18:23:38 -         mode = "lines+markers",
2017-01-19 18:23:38 -         marker =
2017-01-19 18:23:38 -             Marker(
2017-01-19 18:23:38 -                 color = "rgb(128, 0, 128)",
2017-01-19 18:23:38 -                 size = 8.
2017-01-19 18:23:38 -             ),
2017-01-19 18:23:38 -         line =
2017-01-19 18:23:38 -             Line(
2017-01-19 18:23:38 -                 color = "rgb(128, 0, 128)",
2017-01-19 18:23:38 -                 width = 1.
2017-01-19 18:23:38 -             )
2017-01-19 18:23:38 -     )
2017-01-19 18:23:38 - let data = [trace1; trace2; trace3]
2017-01-19 18:23:38 - let layout = Layout(title = "Line and Scatter Styling")
2017-01-19 18:23:38 - (data, layout)
2017-01-19 18:23:38 - |> Chart.Plot
2017-01-19 18:23:38 - |> Chart.Show
2017-01-19 18:23:45 - let trace1 =
2017-01-19 18:23:45 -     Scatter(
2017-01-19 18:23:45 -         x = [1; 2; 3; 4],
2017-01-19 18:23:45 -         y = [10; 15; 13; 17],
2017-01-19 18:23:45 -         mode = "markers",
2017-01-19 18:23:45 -         marker =
2017-01-19 18:23:45 -             Marker(
2017-01-19 18:23:45 -                 color = "rgb(219, 64, 82)",
2017-01-19 18:23:45 -                 size = 12.
2017-01-19 18:23:45 -             )
2017-01-19 18:23:45 -     )
2017-01-19 18:23:45 - let trace2 =
2017-01-19 18:23:45 -     Scatter(
2017-01-19 18:23:45 -         x = [2; 3; 4; 5],
2017-01-19 18:23:45 -         y = [16; 5; 11; 9],
2017-01-19 18:23:45 -         mode = "lines",
2017-01-19 18:23:45 -         line =
2017-01-19 18:23:45 -             Line(
2017-01-19 18:23:45 -                 color = "rgb(55, 128, 191)",
2017-01-19 18:23:45 -                 width = 3.
2017-01-19 18:23:45 -             )
2017-01-19 18:23:45 -     )
2017-01-19 18:23:45 - let trace3 =
2017-01-19 18:23:45 -     Scatter(
2017-01-19 18:23:45 -         x = [1; 2; 3; 4],
2017-01-19 18:23:45 -         y = [12; 9; 15; 12],
2017-01-19 18:23:45 -         mode = "lines+markers",
2017-01-19 18:23:45 -         marker =
2017-01-19 18:23:45 -             Marker(
2017-01-19 18:23:45 -                 color = "rgb(128, 0, 128)",
2017-01-19 18:23:45 -                 size = 8.
2017-01-19 18:23:45 -             ),
2017-01-19 18:23:45 -         line =
2017-01-19 18:23:45 -             Line(
2017-01-19 18:23:45 -                 color = "rgb(128, 0, 128)",
2017-01-19 18:23:45 -                 width = 1.
2017-01-19 18:23:45 -             )
2017-01-19 18:23:45 -     )
2017-01-19 18:23:45 - let data = [trace1; trace2; trace3]
2017-01-19 18:23:45 - let layout = Layout(title = "Line and Scatter Styling")
2017-01-19 18:23:45 - (data, layout)
2017-01-19 18:23:45 - |> Chart.Plot
2017-01-19 18:24:55 - let styledTraceSin = 
2017-01-19 18:24:55 -     Scatter(
2017-01-19 18:24:55 -         x = List.map fst sinGraph,
2017-01-19 18:24:55 -         y = List.map snd sinGraph,
2017-01-19 18:24:55 -         mode = "lines",
2017-01-19 18:24:55 -         marker =
2017-01-19 18:24:55 -             Marker(
2017-01-19 18:24:55 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:24:55 -                 size = 12,
2017-01-19 18:24:55 -                 line =
2017-01-19 18:24:55 -                     Line(
2017-01-19 18:24:55 -                         color = "white",
2017-01-19 18:24:55 -                         width = 0.5
2017-01-19 18:24:55 -                     )
2017-01-19 18:24:55 -             )
2017-01-19 18:24:55 -     )
2017-01-19 18:24:55 - let styledLayoutSin =
2017-01-19 18:24:55 -     Layout(
2017-01-19 18:24:55 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-19 18:24:55 -         xaxis =
2017-01-19 18:24:55 -             Xaxis(
2017-01-19 18:24:55 -                 title = "Sample index",
2017-01-19 18:24:55 -                 showgrid = true,
2017-01-19 18:24:55 -                 zeroline = true
2017-01-19 18:24:55 -             ),
2017-01-19 18:24:55 -         yaxis =
2017-01-19 18:24:55 -             Yaxis(
2017-01-19 18:24:55 -                 title = "Original phase in radians",
2017-01-19 18:24:55 -                 showline = true
2017-01-19 18:24:55 -             )
2017-01-19 18:24:55 -     )
2017-01-19 18:24:55 - [styledTraceSin]
2017-01-19 18:24:55 - |> Chart.Plot
2017-01-19 18:24:55 - |> Chart.WithLayout styledLayoutSin
2017-01-19 18:24:59 - let styledTraceAtan =
2017-01-19 18:24:59 -     Scatter(
2017-01-19 18:24:59 -         x = List.map fst atanGraph,
2017-01-19 18:24:59 -         y = List.map snd atanGraph,
2017-01-19 18:24:59 -         mode = "lines",
2017-01-19 18:24:59 -         marker =
2017-01-19 18:24:59 -             Marker(
2017-01-19 18:24:59 -                 color = "rgb(164, 194, 244)",
2017-01-19 18:24:59 -                 size = 12,
2017-01-19 18:24:59 -                 line =
2017-01-19 18:24:59 -                     Line(
2017-01-19 18:24:59 -                         color = "white",
2017-01-19 18:24:59 -                         width = 0.5
2017-01-19 18:24:59 -                     )
2017-01-19 18:24:59 -             )
2017-01-19 18:24:59 -     )
2017-01-19 18:24:59 - let styledLayoutAtan =
2017-01-19 18:24:59 -     Layout(
2017-01-19 18:24:59 -         title = "The wrapped phase",
2017-01-19 18:24:59 -         xaxis =
2017-01-19 18:24:59 -             Xaxis(
2017-01-19 18:24:59 -                 title = "Sample index",
2017-01-19 18:24:59 -                 showgrid = true,
2017-01-19 18:24:59 -                 zeroline = true
2017-01-19 18:24:59 -             ),
2017-01-19 18:24:59 -         yaxis =
2017-01-19 18:24:59 -             Yaxis(
2017-01-19 18:24:59 -                 title = "Wrapped phase in radians",
2017-01-19 18:24:59 -                 showline = true
2017-01-19 18:24:59 -             )
2017-01-19 18:24:59 -     )
2017-01-19 18:24:59 - [styledTraceAtan]
2017-01-19 18:24:59 - |> Chart.Plot
2017-01-19 18:24:59 - |> Chart.WithLayout styledLayoutAtan
2017-01-19 18:26:23 - #load "Paket.fsx"
2017-01-19 18:26:23 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts"]
2017-01-19 18:26:23 - open System
2017-01-19 18:26:23 - #load "XPlot.Plotly.Paket.fsx"
2017-01-19 18:26:23 - #load "XPlot.Plotly.fsx"
2017-01-19 18:26:23 - open XPlot.Plotly
2017-01-19 18:27:01 - ### Display wrapped phase graph
2017-01-21 02:08:22 - let xu = atanGraph
2017-01-21 02:08:22 - for i=2:length(xw)
2017-01-21 02:08:22 -  difference = xw(i)-xw(i-1);
2017-01-21 02:08:22 -  if difference > pi
2017-01-21 02:08:22 -  xu(i:end) = xu(i:end) - 2*pi;
2017-01-21 02:08:22 -  elseif difference < -pi
2017-01-21 02:08:22 -  xu(i:end) = xu(i:end) + 2*pi;
2017-01-21 02:08:22 -  end
2017-01-21 02:08:22 - end
2017-01-22 04:15:36 - shutdown request
2017-01-22 05:10:35 - // include directory, this will be replaced by the kernel
2017-01-22 05:10:35 - #I "/IfSharp/bin"
2017-01-22 05:10:35 - // load base dlls
2017-01-22 05:10:35 - #r "IfSharp.Kernel.dll"
2017-01-22 05:10:35 - #r "NetMQ.dll"
2017-01-22 05:10:35 - // open the global functions and methods
2017-01-22 05:10:35 - open IfSharp.Kernel
2017-01-22 05:10:35 - open IfSharp.Kernel.Globals
2017-01-22 05:10:37 - F# Interactive for F# 4.1
2017-01-22 05:10:37 - Freely distributed under the Apache 2.0 Open Source License
2017-01-22 05:10:37 - For help type #help;;
2017-01-22 05:10:37 - > val it : ResizeArray<System.Type * (obj -> seq<string * string> * string)> =
2017-01-22 05:10:37 -   seq []
2017-01-22 05:10:37 - --> Added '/IfSharp/bin' to library include path
2017-01-22 05:10:37 - --> Referenced '/IfSharp/bin/IfSharp.Kernel.dll' (file may be locked by F# Interactive process)
2017-01-22 05:10:37 - --> Referenced '/IfSharp/bin/NetMQ.dll' (file may be locked by F# Interactive process)
2017-01-22 20:11:21 - // include directory, this will be replaced by the kernel
2017-01-22 20:11:21 - #I "/IfSharp/bin"
2017-01-22 20:11:21 - // load base dlls
2017-01-22 20:11:21 - #r "IfSharp.Kernel.dll"
2017-01-22 20:11:21 - #r "NetMQ.dll"
2017-01-22 20:11:21 - // open the global functions and methods
2017-01-22 20:11:21 - open IfSharp.Kernel
2017-01-22 20:11:21 - open IfSharp.Kernel.Globals
2017-01-22 20:11:23 - F# Interactive for F# 4.1
2017-01-22 20:11:23 - Freely distributed under the Apache 2.0 Open Source License
2017-01-22 20:11:23 - For help type #help;;
2017-01-22 20:11:23 - > val it : ResizeArray<System.Type * (obj -> seq<string * string> * string)> =
2017-01-22 20:11:23 -   seq []
2017-01-22 20:11:23 - --> Added '/IfSharp/bin' to library include path
2017-01-22 20:11:23 - --> Referenced '/IfSharp/bin/IfSharp.Kernel.dll' (file may be locked by F# Interactive process)
2017-01-22 20:11:23 - --> Referenced '/IfSharp/bin/NetMQ.dll' (file may be locked by F# Interactive process)
2017-01-22 20:12:05 - #load "Paket.fsx"
2017-01-22 20:12:05 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts";"Mathnet.Numerics"]
2017-01-22 20:12:05 - open System
2017-01-22 20:12:05 - #load "XPlot.Plotly.Paket.fsx"
2017-01-22 20:12:05 - #load "XPlot.Plotly.fsx"
2017-01-22 20:12:05 - open XPlot.Plotly
2017-01-22 20:12:05 - open MathNet.Numerics.LinearAlgebra
2017-01-22 20:12:41 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:12:41 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x421d4af0 + 0x00183> in <filename unknown>:0 
2017-01-22 20:12:41 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x421562c0 + 0x00047> in <filename unknown>:0 
2017-01-22 20:12:41 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x41ff4ff0 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:12:41 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x4252a5b0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:13:10 - #load "Paket.fsx"
2017-01-22 20:13:10 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts";"Mathnet.Numerics"]
2017-01-22 20:13:10 - open System
2017-01-22 20:13:10 - #load "XPlot.Plotly.Paket.fsx"
2017-01-22 20:13:10 - #load "XPlot.Plotly.fsx"
2017-01-22 20:13:10 - #load "MathNet.Numerics.LinearAlgebra.fsx"
2017-01-22 20:13:10 - open XPlot.Plotly
2017-01-22 20:13:10 - open MathNet.Numerics.LinearAlgebra
2017-01-22 20:13:15 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:13:15 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x421d4af0 + 0x00183> in <filename unknown>:0 
2017-01-22 20:13:15 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x421562c0 + 0x00047> in <filename unknown>:0 
2017-01-22 20:13:15 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x41ff4ff0 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:13:15 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x4252a5b0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:13:37 - #load "Paket.fsx"
2017-01-22 20:13:37 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts";"Mathnet.Numerics"]
2017-01-22 20:13:37 - open System
2017-01-22 20:13:37 - #load "XPlot.Plotly.Paket.fsx"
2017-01-22 20:13:37 - #load "XPlot.Plotly.fsx"
2017-01-22 20:13:37 - #r "./packages/MathNet.Numerics/lib/portable-net45+sl5+netcore45+MonoAndroid1+MonoTouch1/MathNet.Numerics.dll"
2017-01-22 20:13:37 - #r "./packages/MathNet.Numerics.FSharp/lib/portable-net45+sl5+netcore45+MonoAndroid1+MonoTouch1/MathNet.Numerics.FSharp.dll"
2017-01-22 20:13:37 - open XPlot.Plotly
2017-01-22 20:13:37 - open MathNet.Numerics.LinearAlgebra
2017-01-22 20:13:42 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:13:42 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x421d4af0 + 0x00183> in <filename unknown>:0 
2017-01-22 20:13:42 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x421562c0 + 0x00047> in <filename unknown>:0 
2017-01-22 20:13:42 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x41ff4ff0 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:13:42 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x4252a5b0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:14:14 - #load "Paket.fsx"
2017-01-22 20:14:14 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts";"Mathnet.Numerics";"Mathnet.Numerics.FSharp"]
2017-01-22 20:14:14 - open System
2017-01-22 20:14:14 - #load "XPlot.Plotly.Paket.fsx"
2017-01-22 20:14:14 - #load "XPlot.Plotly.fsx"
2017-01-22 20:14:14 - #r "./packages/MathNet.Numerics/lib/portable-net45+sl5+netcore45+MonoAndroid1+MonoTouch1/MathNet.Numerics.dll"
2017-01-22 20:14:14 - #r "./packages/MathNet.Numerics.FSharp/lib/portable-net45+sl5+netcore45+MonoAndroid1+MonoTouch1/MathNet.Numerics.FSharp.dll"
2017-01-22 20:14:14 - open XPlot.Plotly
2017-01-22 20:14:14 - open MathNet.Numerics.LinearAlgebra
2017-01-22 20:14:42 - let n = 512.0
2017-01-22 20:14:42 - let fo = 1.0/n
2017-01-22 20:14:42 - let x = DenseVector.init 5 double
2017-01-22 20:14:42 - let y = 6.0 * sin(x*fo*Math.PI *2.0)
2017-01-22 20:14:42 - let sinGraph = Array.zip (x.ToArray()) (y.ToArray())
2017-01-22 20:14:42 - let yw =  (sin y).PointwiseAtan2 (cos y) 
2017-01-22 20:14:42 - let atanGraph = Array.zip (x.ToArray()) (yw.ToArray())
2017-01-22 20:14:48 - let styledTraceSin = 
2017-01-22 20:14:48 -     Scatter(
2017-01-22 20:14:48 -         x = List.map fst sinGraph,
2017-01-22 20:14:48 -         y = List.map snd sinGraph,
2017-01-22 20:14:48 -         mode = "lines",
2017-01-22 20:14:48 -         marker =
2017-01-22 20:14:48 -             Marker(
2017-01-22 20:14:48 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:14:48 -                 size = 12,
2017-01-22 20:14:48 -                 line =
2017-01-22 20:14:48 -                     Line(
2017-01-22 20:14:48 -                         color = "white",
2017-01-22 20:14:48 -                         width = 0.5
2017-01-22 20:14:48 -                     )
2017-01-22 20:14:48 -             )
2017-01-22 20:14:48 -     )
2017-01-22 20:14:48 - let styledLayoutSin =
2017-01-22 20:14:48 -     Layout(
2017-01-22 20:14:48 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-22 20:14:48 -         xaxis =
2017-01-22 20:14:48 -             Xaxis(
2017-01-22 20:14:48 -                 title = "Sample index",
2017-01-22 20:14:48 -                 showgrid = true,
2017-01-22 20:14:48 -                 zeroline = true
2017-01-22 20:14:48 -             ),
2017-01-22 20:14:48 -         yaxis =
2017-01-22 20:14:48 -             Yaxis(
2017-01-22 20:14:48 -                 title = "Original phase in radians",
2017-01-22 20:14:48 -                 showline = true
2017-01-22 20:14:48 -             )
2017-01-22 20:14:48 -     )
2017-01-22 20:14:48 - [styledTraceSin]
2017-01-22 20:14:48 - |> Chart.Plot
2017-01-22 20:14:48 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:14:48 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:14:48 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x421d4af0 + 0x00183> in <filename unknown>:0 
2017-01-22 20:14:48 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x421562c0 + 0x00047> in <filename unknown>:0 
2017-01-22 20:14:48 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x41ff4ff0 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:14:48 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x4252a5b0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:15:20 - let styledTraceSin = 
2017-01-22 20:15:20 -     Scatter(
2017-01-22 20:15:20 -         x = Array.map fst sinGraph,
2017-01-22 20:15:20 -         y = Array.map snd sinGraph,
2017-01-22 20:15:20 -         mode = "lines",
2017-01-22 20:15:20 -         marker =
2017-01-22 20:15:20 -             Marker(
2017-01-22 20:15:20 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:15:20 -                 size = 12,
2017-01-22 20:15:20 -                 line =
2017-01-22 20:15:20 -                     Line(
2017-01-22 20:15:20 -                         color = "white",
2017-01-22 20:15:20 -                         width = 0.5
2017-01-22 20:15:20 -                     )
2017-01-22 20:15:20 -             )
2017-01-22 20:15:20 -     )
2017-01-22 20:15:20 - let styledLayoutSin =
2017-01-22 20:15:20 -     Layout(
2017-01-22 20:15:20 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-22 20:15:20 -         xaxis =
2017-01-22 20:15:20 -             Xaxis(
2017-01-22 20:15:20 -                 title = "Sample index",
2017-01-22 20:15:20 -                 showgrid = true,
2017-01-22 20:15:20 -                 zeroline = true
2017-01-22 20:15:20 -             ),
2017-01-22 20:15:20 -         yaxis =
2017-01-22 20:15:20 -             Yaxis(
2017-01-22 20:15:20 -                 title = "Original phase in radians",
2017-01-22 20:15:20 -                 showline = true
2017-01-22 20:15:20 -             )
2017-01-22 20:15:20 -     )
2017-01-22 20:15:20 - [styledTraceSin]
2017-01-22 20:15:20 - |> Chart.Plot
2017-01-22 20:15:20 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:15:47 - let n = 512.0
2017-01-22 20:15:47 - let fo = 1.0/n
2017-01-22 20:15:47 - let x = DenseVector.init int(n) double
2017-01-22 20:15:47 - let y = 6.0 * sin(x*fo*Math.PI *2.0)
2017-01-22 20:15:47 - let sinGraph = Array.zip (x.ToArray()) (y.ToArray())
2017-01-22 20:15:47 - let yw =  (sin y).PointwiseAtan2 (cos y) 
2017-01-22 20:15:47 - let atanGraph = Array.zip (x.ToArray()) (yw.ToArray())
2017-01-22 20:16:29 - let n = 512.0
2017-01-22 20:16:29 - let fo = 1.0/n
2017-01-22 20:16:29 - let x = DenseVector.init (int(n)) double
2017-01-22 20:16:29 - let y = 6.0 * sin(x*fo*Math.PI *2.0)
2017-01-22 20:16:29 - let sinGraph = Array.zip (x.ToArray()) (y.ToArray())
2017-01-22 20:16:29 - let yw =  (sin y).PointwiseAtan2 (cos y) 
2017-01-22 20:16:29 - let atanGraph = Array.zip (x.ToArray()) (yw.ToArray())
2017-01-22 20:16:33 - let styledTraceSin = 
2017-01-22 20:16:33 -     Scatter(
2017-01-22 20:16:33 -         x = Array.map fst sinGraph,
2017-01-22 20:16:33 -         y = Array.map snd sinGraph,
2017-01-22 20:16:33 -         mode = "lines",
2017-01-22 20:16:33 -         marker =
2017-01-22 20:16:33 -             Marker(
2017-01-22 20:16:33 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:16:33 -                 size = 12,
2017-01-22 20:16:33 -                 line =
2017-01-22 20:16:33 -                     Line(
2017-01-22 20:16:33 -                         color = "white",
2017-01-22 20:16:33 -                         width = 0.5
2017-01-22 20:16:33 -                     )
2017-01-22 20:16:33 -             )
2017-01-22 20:16:33 -     )
2017-01-22 20:16:33 - let styledLayoutSin =
2017-01-22 20:16:33 -     Layout(
2017-01-22 20:16:33 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-22 20:16:33 -         xaxis =
2017-01-22 20:16:33 -             Xaxis(
2017-01-22 20:16:33 -                 title = "Sample index",
2017-01-22 20:16:33 -                 showgrid = true,
2017-01-22 20:16:33 -                 zeroline = true
2017-01-22 20:16:33 -             ),
2017-01-22 20:16:33 -         yaxis =
2017-01-22 20:16:33 -             Yaxis(
2017-01-22 20:16:33 -                 title = "Original phase in radians",
2017-01-22 20:16:33 -                 showline = true
2017-01-22 20:16:33 -             )
2017-01-22 20:16:33 -     )
2017-01-22 20:16:33 - [styledTraceSin]
2017-01-22 20:16:33 - |> Chart.Plot
2017-01-22 20:16:33 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:16:36 - let styledTraceAtan =
2017-01-22 20:16:36 -     Scatter(
2017-01-22 20:16:36 -         x = List.map fst atanGraph,
2017-01-22 20:16:36 -         y = List.map snd atanGraph,
2017-01-22 20:16:36 -         mode = "lines",
2017-01-22 20:16:36 -         marker =
2017-01-22 20:16:36 -             Marker(
2017-01-22 20:16:36 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:16:36 -                 size = 12,
2017-01-22 20:16:36 -                 line =
2017-01-22 20:16:36 -                     Line(
2017-01-22 20:16:36 -                         color = "white",
2017-01-22 20:16:36 -                         width = 0.5
2017-01-22 20:16:36 -                     )
2017-01-22 20:16:36 -             )
2017-01-22 20:16:36 -     )
2017-01-22 20:16:36 - let styledLayoutAtan =
2017-01-22 20:16:36 -     Layout(
2017-01-22 20:16:36 -         title = "The wrapped phase",
2017-01-22 20:16:36 -         xaxis =
2017-01-22 20:16:36 -             Xaxis(
2017-01-22 20:16:36 -                 title = "Sample index",
2017-01-22 20:16:36 -                 showgrid = true,
2017-01-22 20:16:36 -                 zeroline = true
2017-01-22 20:16:36 -             ),
2017-01-22 20:16:36 -         yaxis =
2017-01-22 20:16:36 -             Yaxis(
2017-01-22 20:16:36 -                 title = "Wrapped phase in radians",
2017-01-22 20:16:36 -                 showline = true
2017-01-22 20:16:36 -             )
2017-01-22 20:16:36 -     )
2017-01-22 20:16:36 - [styledTraceAtan]
2017-01-22 20:16:36 - |> Chart.Plot
2017-01-22 20:16:36 - |> Chart.WithLayout styledLayoutAtan
2017-01-22 20:16:36 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:16:36 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x421d4af0 + 0x00183> in <filename unknown>:0 
2017-01-22 20:16:36 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x421562c0 + 0x00047> in <filename unknown>:0 
2017-01-22 20:16:36 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x41ff4ff0 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:16:36 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x4252a5b0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:16:46 - let styledTraceAtan =
2017-01-22 20:16:46 -     Scatter(
2017-01-22 20:16:46 -         x = Array.map fst atanGraph,
2017-01-22 20:16:46 -         y = Array.map snd atanGraph,
2017-01-22 20:16:46 -         mode = "lines",
2017-01-22 20:16:46 -         marker =
2017-01-22 20:16:46 -             Marker(
2017-01-22 20:16:46 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:16:46 -                 size = 12,
2017-01-22 20:16:46 -                 line =
2017-01-22 20:16:46 -                     Line(
2017-01-22 20:16:46 -                         color = "white",
2017-01-22 20:16:46 -                         width = 0.5
2017-01-22 20:16:46 -                     )
2017-01-22 20:16:46 -             )
2017-01-22 20:16:46 -     )
2017-01-22 20:16:46 - let styledLayoutAtan =
2017-01-22 20:16:46 -     Layout(
2017-01-22 20:16:46 -         title = "The wrapped phase",
2017-01-22 20:16:46 -         xaxis =
2017-01-22 20:16:46 -             Xaxis(
2017-01-22 20:16:46 -                 title = "Sample index",
2017-01-22 20:16:46 -                 showgrid = true,
2017-01-22 20:16:46 -                 zeroline = true
2017-01-22 20:16:46 -             ),
2017-01-22 20:16:46 -         yaxis =
2017-01-22 20:16:46 -             Yaxis(
2017-01-22 20:16:46 -                 title = "Wrapped phase in radians",
2017-01-22 20:16:46 -                 showline = true
2017-01-22 20:16:46 -             )
2017-01-22 20:16:46 -     )
2017-01-22 20:16:46 - [styledTraceAtan]
2017-01-22 20:16:46 - |> Chart.Plot
2017-01-22 20:16:46 - |> Chart.WithLayout styledLayoutAtan
2017-01-22 20:16:59 - let mutable xu = yw
2017-01-22 20:16:59 - [|1..atanGraph.Length-1|]
2017-01-22 20:16:59 - |> Array.iter ( fun i -> match yw.[i] - yw.[i-1] with 
2017-01-22 20:16:59 -                          | x when x > Math.PI -> xu.[i..] <- xu.[i..] - (2.0 * Math.PI) 
2017-01-22 20:16:59 -                          | _ ->                  xu.[i..] <-  xu.[i..] + (2.0 * Math.PI) )
2017-01-22 20:17:37 - let mutable xu = yw
2017-01-22 20:17:37 - [|1..atanGraph.Length-1|]
2017-01-22 20:17:37 - |> Array.iter ( fun i -> match yw.[i] - yw.[i-1] with 
2017-01-22 20:17:37 -                          | x when x > Math.PI -> xu.[i..] <- xu.[i..] - (2.0 * Math.PI) 
2017-01-22 20:17:37 -                          | _ ->                  xu.[i..] <-  xu.[i..] + (2.0 * Math.PI) )
2017-01-22 20:17:37 -                          
2017-01-22 20:17:37 - let atanUnwrapGraph = Array.zip (x.ToArray()) (xu.ToArray())
2017-01-22 20:18:15 - let styledTraceUnwrapAtan =
2017-01-22 20:18:15 -     Scatter(
2017-01-22 20:18:15 -         x = Array.map fst atanUnwrapGraph,
2017-01-22 20:18:15 -         y = Array.map snd atanUnwrapGraph,
2017-01-22 20:18:15 -         mode = "lines",
2017-01-22 20:18:15 -         marker =
2017-01-22 20:18:15 -             Marker(
2017-01-22 20:18:15 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:18:15 -                 size = 12,
2017-01-22 20:18:15 -                 line =
2017-01-22 20:18:15 -                     Line(
2017-01-22 20:18:15 -                         color = "white",
2017-01-22 20:18:15 -                         width = 0.5
2017-01-22 20:18:15 -                     )
2017-01-22 20:18:15 -             )
2017-01-22 20:18:15 -     )
2017-01-22 20:18:15 - let styledLayoutUnwrapAtan =
2017-01-22 20:18:15 -     Layout(
2017-01-22 20:18:15 -         title = "The wrapped phase",
2017-01-22 20:18:15 -         xaxis =
2017-01-22 20:18:15 -             Xaxis(
2017-01-22 20:18:15 -                 title = "Sample index",
2017-01-22 20:18:15 -                 showgrid = true,
2017-01-22 20:18:15 -                 zeroline = true
2017-01-22 20:18:15 -             ),
2017-01-22 20:18:15 -         yaxis =
2017-01-22 20:18:15 -             Yaxis(
2017-01-22 20:18:15 -                 title = "Wrapped phase in radians",
2017-01-22 20:18:15 -                 showline = true
2017-01-22 20:18:15 -             )
2017-01-22 20:18:15 -     )
2017-01-22 20:18:15 - [styledTraceUnwrapAtan]
2017-01-22 20:18:15 - |> Chart.Plot
2017-01-22 20:18:15 - |> Chart.WithLayout styledLayoutUnwrapAtan
2017-01-22 20:18:38 - shutdown request
2017-01-22 20:18:39 - // include directory, this will be replaced by the kernel
2017-01-22 20:18:39 - #I "/IfSharp/bin"
2017-01-22 20:18:39 - // load base dlls
2017-01-22 20:18:39 - #r "IfSharp.Kernel.dll"
2017-01-22 20:18:39 - #r "NetMQ.dll"
2017-01-22 20:18:39 - // open the global functions and methods
2017-01-22 20:18:39 - open IfSharp.Kernel
2017-01-22 20:18:39 - open IfSharp.Kernel.Globals
2017-01-22 20:18:41 - F# Interactive for F# 4.1
2017-01-22 20:18:41 - Freely distributed under the Apache 2.0 Open Source License
2017-01-22 20:18:41 - For help type #help;;
2017-01-22 20:18:41 - > val it : ResizeArray<System.Type * (obj -> seq<string * string> * string)> =
2017-01-22 20:18:41 -   seq []
2017-01-22 20:18:41 - --> Added '/IfSharp/bin' to library include path
2017-01-22 20:18:41 - --> Referenced '/IfSharp/bin/IfSharp.Kernel.dll' (file may be locked by F# Interactive process)
2017-01-22 20:18:41 - --> Referenced '/IfSharp/bin/NetMQ.dll' (file may be locked by F# Interactive process)
2017-01-22 20:18:41 - #load "Paket.fsx"
2017-01-22 20:18:41 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts";"Mathnet.Numerics";"Mathnet.Numerics.FSharp"]
2017-01-22 20:18:41 - open System
2017-01-22 20:18:41 - #load "XPlot.Plotly.Paket.fsx"
2017-01-22 20:18:41 - #load "XPlot.Plotly.fsx"
2017-01-22 20:18:41 - #r "./packages/MathNet.Numerics/lib/portable-net45+sl5+netcore45+MonoAndroid1+MonoTouch1/MathNet.Numerics.dll"
2017-01-22 20:18:41 - #r "./packages/MathNet.Numerics.FSharp/lib/portable-net45+sl5+netcore45+MonoAndroid1+MonoTouch1/MathNet.Numerics.FSharp.dll"
2017-01-22 20:18:41 - open XPlot.Plotly
2017-01-22 20:18:41 - open MathNet.Numerics.LinearAlgebra
2017-01-22 20:18:49 - let n = 512.0
2017-01-22 20:18:49 - let fo = 1.0/n
2017-01-22 20:18:49 - let x = DenseVector.init (int(n)) double
2017-01-22 20:18:49 - let y = 6.0 * sin(x*fo*Math.PI *2.0)
2017-01-22 20:18:49 - let sinGraph = Array.zip (x.ToArray()) (y.ToArray())
2017-01-22 20:18:49 - let yw =  (sin y).PointwiseAtan2 (cos y) 
2017-01-22 20:18:49 - let atanGraph = Array.zip (x.ToArray()) (yw.ToArray())
2017-01-22 20:18:49 - let styledTraceSin = 
2017-01-22 20:18:49 -     Scatter(
2017-01-22 20:18:49 -         x = Array.map fst sinGraph,
2017-01-22 20:18:49 -         y = Array.map snd sinGraph,
2017-01-22 20:18:49 -         mode = "lines",
2017-01-22 20:18:49 -         marker =
2017-01-22 20:18:49 -             Marker(
2017-01-22 20:18:49 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:18:49 -                 size = 12,
2017-01-22 20:18:49 -                 line =
2017-01-22 20:18:49 -                     Line(
2017-01-22 20:18:49 -                         color = "white",
2017-01-22 20:18:49 -                         width = 0.5
2017-01-22 20:18:49 -                     )
2017-01-22 20:18:49 -             )
2017-01-22 20:18:49 -     )
2017-01-22 20:18:49 - let styledLayoutSin =
2017-01-22 20:18:49 -     Layout(
2017-01-22 20:18:49 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-22 20:18:49 -         xaxis =
2017-01-22 20:18:49 -             Xaxis(
2017-01-22 20:18:49 -                 title = "Sample index",
2017-01-22 20:18:49 -                 showgrid = true,
2017-01-22 20:18:49 -                 zeroline = true
2017-01-22 20:18:49 -             ),
2017-01-22 20:18:49 -         yaxis =
2017-01-22 20:18:49 -             Yaxis(
2017-01-22 20:18:49 -                 title = "Original phase in radians",
2017-01-22 20:18:49 -                 showline = true
2017-01-22 20:18:49 -             )
2017-01-22 20:18:49 -     )
2017-01-22 20:18:49 - [styledTraceSin]
2017-01-22 20:18:49 - |> Chart.Plot
2017-01-22 20:18:49 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:18:49 - let styledTraceAtan =
2017-01-22 20:18:49 -     Scatter(
2017-01-22 20:18:49 -         x = Array.map fst atanGraph,
2017-01-22 20:18:49 -         y = Array.map snd atanGraph,
2017-01-22 20:18:49 -         mode = "lines",
2017-01-22 20:18:49 -         marker =
2017-01-22 20:18:49 -             Marker(
2017-01-22 20:18:49 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:18:49 -                 size = 12,
2017-01-22 20:18:49 -                 line =
2017-01-22 20:18:49 -                     Line(
2017-01-22 20:18:49 -                         color = "white",
2017-01-22 20:18:49 -                         width = 0.5
2017-01-22 20:18:49 -                     )
2017-01-22 20:18:49 -             )
2017-01-22 20:18:49 -     )
2017-01-22 20:18:49 - let styledLayoutAtan =
2017-01-22 20:18:49 -     Layout(
2017-01-22 20:18:49 -         title = "The wrapped phase",
2017-01-22 20:18:49 -         xaxis =
2017-01-22 20:18:49 -             Xaxis(
2017-01-22 20:18:49 -                 title = "Sample index",
2017-01-22 20:18:49 -                 showgrid = true,
2017-01-22 20:18:49 -                 zeroline = true
2017-01-22 20:18:49 -             ),
2017-01-22 20:18:49 -         yaxis =
2017-01-22 20:18:49 -             Yaxis(
2017-01-22 20:18:49 -                 title = "Wrapped phase in radians",
2017-01-22 20:18:49 -                 showline = true
2017-01-22 20:18:49 -             )
2017-01-22 20:18:49 -     )
2017-01-22 20:18:49 - [styledTraceAtan]
2017-01-22 20:18:49 - |> Chart.Plot
2017-01-22 20:18:49 - |> Chart.WithLayout styledLayoutAtan
2017-01-22 20:18:49 - let mutable xu = yw
2017-01-22 20:18:49 - [|1..atanGraph.Length-1|]
2017-01-22 20:18:49 - |> Array.iter ( fun i -> match yw.[i] - yw.[i-1] with 
2017-01-22 20:18:49 -                          | x when x > Math.PI -> xu.[i..] <- xu.[i..] - (2.0 * Math.PI) 
2017-01-22 20:18:49 -                          | _ ->                  xu.[i..] <-  xu.[i..] + (2.0 * Math.PI) )
2017-01-22 20:18:49 -                          
2017-01-22 20:18:49 - let atanUnwrapGraph = Array.zip (x.ToArray()) (xu.ToArray())
2017-01-22 20:18:49 - let styledTraceUnwrapAtan =
2017-01-22 20:18:49 -     Scatter(
2017-01-22 20:18:49 -         x = Array.map fst atanUnwrapGraph,
2017-01-22 20:18:49 -         y = Array.map snd atanUnwrapGraph,
2017-01-22 20:18:49 -         mode = "lines",
2017-01-22 20:18:49 -         marker =
2017-01-22 20:18:49 -             Marker(
2017-01-22 20:18:49 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:18:49 -                 size = 12,
2017-01-22 20:18:49 -                 line =
2017-01-22 20:18:49 -                     Line(
2017-01-22 20:18:49 -                         color = "white",
2017-01-22 20:18:49 -                         width = 0.5
2017-01-22 20:18:49 -                     )
2017-01-22 20:18:49 -             )
2017-01-22 20:18:49 -     )
2017-01-22 20:18:49 - let styledLayoutUnwrapAtan =
2017-01-22 20:18:49 -     Layout(
2017-01-22 20:18:49 -         title = "The wrapped phase",
2017-01-22 20:18:49 -         xaxis =
2017-01-22 20:18:49 -             Xaxis(
2017-01-22 20:18:49 -                 title = "Sample index",
2017-01-22 20:18:49 -                 showgrid = true,
2017-01-22 20:18:49 -                 zeroline = true
2017-01-22 20:18:49 -             ),
2017-01-22 20:18:49 -         yaxis =
2017-01-22 20:18:49 -             Yaxis(
2017-01-22 20:18:49 -                 title = "The unwrapped phase in radians",
2017-01-22 20:18:49 -                 showline = true
2017-01-22 20:18:49 -             )
2017-01-22 20:18:49 -     )
2017-01-22 20:18:49 - [styledTraceUnwrapAtan]
2017-01-22 20:18:49 - |> Chart.Plot
2017-01-22 20:18:49 - |> Chart.WithLayout styledLayoutUnwrapAtan
2017-01-22 20:19:16 - let mutable xu = yw
2017-01-22 20:19:16 - [|1..atanGraph.Length-1|]
2017-01-22 20:19:16 - |> Array.iter ( fun i -> match yw.[i] - yw.[i-1] with 
2017-01-22 20:19:16 -                          | x when x > Math.PI -> xu.[i..] <- xu.[i..] - (2.0 * Math.PI) 
2017-01-22 20:19:16 -                          | _ ->                  xu.[i..] <-  xu.[i..] + (2.0 * Math.PI) )
2017-01-22 20:19:16 -                          
2017-01-22 20:19:16 - let atanUnwrapGraph = Array.zip (x.ToArray()) (xu.ToArray())
2017-01-22 20:19:18 - let styledTraceUnwrapAtan =
2017-01-22 20:19:18 -     Scatter(
2017-01-22 20:19:18 -         x = Array.map fst atanUnwrapGraph,
2017-01-22 20:19:18 -         y = Array.map snd atanUnwrapGraph,
2017-01-22 20:19:18 -         mode = "lines",
2017-01-22 20:19:18 -         marker =
2017-01-22 20:19:18 -             Marker(
2017-01-22 20:19:18 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:19:18 -                 size = 12,
2017-01-22 20:19:18 -                 line =
2017-01-22 20:19:18 -                     Line(
2017-01-22 20:19:18 -                         color = "white",
2017-01-22 20:19:18 -                         width = 0.5
2017-01-22 20:19:18 -                     )
2017-01-22 20:19:18 -             )
2017-01-22 20:19:18 -     )
2017-01-22 20:19:18 - let styledLayoutUnwrapAtan =
2017-01-22 20:19:18 -     Layout(
2017-01-22 20:19:18 -         title = "The wrapped phase",
2017-01-22 20:19:18 -         xaxis =
2017-01-22 20:19:18 -             Xaxis(
2017-01-22 20:19:18 -                 title = "Sample index",
2017-01-22 20:19:18 -                 showgrid = true,
2017-01-22 20:19:18 -                 zeroline = true
2017-01-22 20:19:18 -             ),
2017-01-22 20:19:18 -         yaxis =
2017-01-22 20:19:18 -             Yaxis(
2017-01-22 20:19:18 -                 title = "The unwrapped phase in radians",
2017-01-22 20:19:18 -                 showline = true
2017-01-22 20:19:18 -             )
2017-01-22 20:19:18 -     )
2017-01-22 20:19:18 - [styledTraceUnwrapAtan]
2017-01-22 20:19:18 - |> Chart.Plot
2017-01-22 20:19:18 - |> Chart.WithLayout styledLayoutUnwrapAtan
2017-01-22 20:22:31 - [|1..atanGraph.Length-1|]
2017-01-22 20:22:31 - |> Array.iter ( fun i -> match yw.[i] - yw.[i-1] with 
2017-01-22 20:22:31 -                          | x when x > Math.PI -> xu.[i..] <- xu.[i..] - (2.0 * Math.PI) 
2017-01-22 20:22:31 -                          | x when x < -1.0 * Math.PI -> xu.[i..] <-  xu.[i..] + (2.0 * Math.PI) 
2017-01-22 20:22:31 -                          | _ -> ())
2017-01-22 20:22:31 -                          
2017-01-22 20:22:31 - let atanUnwrapGraph = Array.zip (x.ToArray()) (xu.ToArray())
2017-01-22 20:22:33 - let styledTraceUnwrapAtan =
2017-01-22 20:22:33 -     Scatter(
2017-01-22 20:22:33 -         x = Array.map fst atanUnwrapGraph,
2017-01-22 20:22:33 -         y = Array.map snd atanUnwrapGraph,
2017-01-22 20:22:33 -         mode = "lines",
2017-01-22 20:22:33 -         marker =
2017-01-22 20:22:33 -             Marker(
2017-01-22 20:22:33 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:22:33 -                 size = 12,
2017-01-22 20:22:33 -                 line =
2017-01-22 20:22:33 -                     Line(
2017-01-22 20:22:33 -                         color = "white",
2017-01-22 20:22:33 -                         width = 0.5
2017-01-22 20:22:33 -                     )
2017-01-22 20:22:33 -             )
2017-01-22 20:22:33 -     )
2017-01-22 20:22:33 - let styledLayoutUnwrapAtan =
2017-01-22 20:22:33 -     Layout(
2017-01-22 20:22:33 -         title = "The wrapped phase",
2017-01-22 20:22:33 -         xaxis =
2017-01-22 20:22:33 -             Xaxis(
2017-01-22 20:22:33 -                 title = "Sample index",
2017-01-22 20:22:33 -                 showgrid = true,
2017-01-22 20:22:33 -                 zeroline = true
2017-01-22 20:22:33 -             ),
2017-01-22 20:22:33 -         yaxis =
2017-01-22 20:22:33 -             Yaxis(
2017-01-22 20:22:33 -                 title = "The unwrapped phase in radians",
2017-01-22 20:22:33 -                 showline = true
2017-01-22 20:22:33 -             )
2017-01-22 20:22:33 -     )
2017-01-22 20:22:33 - [styledTraceUnwrapAtan]
2017-01-22 20:22:33 - |> Chart.Plot
2017-01-22 20:22:33 - |> Chart.WithLayout styledLayoutUnwrapAtan
2017-01-22 20:22:47 - let styledTraceUnwrapAtan =
2017-01-22 20:22:47 -     Scatter(
2017-01-22 20:22:47 -         x = Array.map fst atanUnwrapGraph,
2017-01-22 20:22:47 -         y = Array.map snd atanUnwrapGraph,
2017-01-22 20:22:47 -         mode = "lines",
2017-01-22 20:22:47 -         marker =
2017-01-22 20:22:47 -             Marker(
2017-01-22 20:22:47 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:22:47 -                 size = 12,
2017-01-22 20:22:47 -                 line =
2017-01-22 20:22:47 -                     Line(
2017-01-22 20:22:47 -                         color = "white",
2017-01-22 20:22:47 -                         width = 0.5
2017-01-22 20:22:47 -                     )
2017-01-22 20:22:47 -             )
2017-01-22 20:22:47 -     )
2017-01-22 20:22:47 - let styledLayoutUnwrapAtan =
2017-01-22 20:22:47 -     Layout(
2017-01-22 20:22:47 -         title = "The unwrapped phase",
2017-01-22 20:22:47 -         xaxis =
2017-01-22 20:22:47 -             Xaxis(
2017-01-22 20:22:47 -                 title = "Sample index",
2017-01-22 20:22:47 -                 showgrid = true,
2017-01-22 20:22:47 -                 zeroline = true
2017-01-22 20:22:47 -             ),
2017-01-22 20:22:47 -         yaxis =
2017-01-22 20:22:47 -             Yaxis(
2017-01-22 20:22:47 -                 title = "The unwrapped phase in radians",
2017-01-22 20:22:47 -                 showline = true
2017-01-22 20:22:47 -             )
2017-01-22 20:22:47 -     )
2017-01-22 20:22:47 - [styledTraceUnwrapAtan]
2017-01-22 20:22:47 - |> Chart.Plot
2017-01-22 20:22:47 - |> Chart.WithLayout styledLayoutUnwrapAtan
2017-01-22 20:24:54 - [fst sinGraph,snd sinGraph]
2017-01-22 20:24:54 - |> Chart.Plot
2017-01-22 20:24:54 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:24:54 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:24:54 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41d0daf0 + 0x00183> in <filename unknown>:0 
2017-01-22 20:24:54 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41c8f610 + 0x00047> in <filename unknown>:0 
2017-01-22 20:24:54 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x41b2dca0 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:24:54 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41fb00a0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:25:07 - [(fst sinGraph,snd sinGraph)]
2017-01-22 20:25:07 - |> Chart.Plot
2017-01-22 20:25:07 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:25:07 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:25:07 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41d0daf0 + 0x00183> in <filename unknown>:0 
2017-01-22 20:25:07 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41c8f610 + 0x00047> in <filename unknown>:0 
2017-01-22 20:25:07 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x41b2dca0 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:25:07 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41fb00a0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:25:35 - [(x,yw)]
2017-01-22 20:25:35 - |> Chart.Plot
2017-01-22 20:25:35 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:25:35 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:25:35 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41d0daf0 + 0x00183> in <filename unknown>:0 
2017-01-22 20:25:35 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41c8f610 + 0x00047> in <filename unknown>:0 
2017-01-22 20:25:35 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x41b2dca0 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:25:35 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41fb00a0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:26:27 - [x;yw]
2017-01-22 20:26:27 - |> Chart.Plot
2017-01-22 20:26:27 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:26:27 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:26:27 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41d0daf0 + 0x00183> in <filename unknown>:0 
2017-01-22 20:26:27 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41c8f610 + 0x00047> in <filename unknown>:0 
2017-01-22 20:26:27 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x41b2dca0 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:26:27 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41fb00a0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:27:01 - [atanGraph]
2017-01-22 20:27:01 - |> Chart.Plot
2017-01-22 20:27:01 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:27:01 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:27:01 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x41d0daf0 + 0x00183> in <filename unknown>:0 
2017-01-22 20:27:01 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x41c8f610 + 0x00047> in <filename unknown>:0 
2017-01-22 20:27:01 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x41b2dca0 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:27:01 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x41fb00a0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:31:14 - atanGraph
2017-01-22 20:31:14 - |> Chart.Line
2017-01-22 20:31:24 - #load "Paket.fsx"
2017-01-22 20:31:24 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts";"Mathnet.Numerics";"Mathnet.Numerics.FSharp"]
2017-01-22 20:31:24 - open System
2017-01-22 20:31:24 - #load "XPlot.Plotly.Paket.fsx"
2017-01-22 20:31:24 - #load "XPlot.Plotly.fsx"
2017-01-22 20:31:24 - #r "./packages/MathNet.Numerics/lib/portable-net45+sl5+netcore45+MonoAndroid1+MonoTouch1/MathNet.Numerics.dll"
2017-01-22 20:31:24 - #r "./packages/MathNet.Numerics.FSharp/lib/portable-net45+sl5+netcore45+MonoAndroid1+MonoTouch1/MathNet.Numerics.FSharp.dll"
2017-01-22 20:31:24 - open XPlot.Plotly
2017-01-22 20:31:24 - open MathNet.Numerics.LinearAlgebra
2017-01-22 20:31:30 - let n = 512.0
2017-01-22 20:31:30 - let fo = 1.0/n
2017-01-22 20:31:30 - let x = DenseVector.init (int(n)) double
2017-01-22 20:31:30 - let y = 6.0 * sin(x*fo*Math.PI *2.0)
2017-01-22 20:31:30 - let sinGraph = Array.zip (x.ToArray()) (y.ToArray())
2017-01-22 20:31:30 - let yw =  (sin y).PointwiseAtan2 (cos y) 
2017-01-22 20:31:30 - let atanGraph = Array.zip (x.ToArray()) (yw.ToArray())
2017-01-22 20:31:30 - atanGraph
2017-01-22 20:31:30 - |> Chart.Line
2017-01-22 20:31:42 - sinGraph
2017-01-22 20:31:42 - |> Chart.Line
2017-01-22 20:32:04 - let styledTraceSin = 
2017-01-22 20:32:04 -     Scatter(
2017-01-22 20:32:04 -         x = Array.map fst sinGraph,
2017-01-22 20:32:04 -         y = Array.map snd sinGraph,
2017-01-22 20:32:04 -         mode = "lines",
2017-01-22 20:32:04 -         marker =
2017-01-22 20:32:04 -             Marker(
2017-01-22 20:32:04 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:32:04 -                 size = 12,
2017-01-22 20:32:04 -                 line =
2017-01-22 20:32:04 -                     Line(
2017-01-22 20:32:04 -                         color = "white",
2017-01-22 20:32:04 -                         width = 0.5
2017-01-22 20:32:04 -                     )
2017-01-22 20:32:04 -             )
2017-01-22 20:32:04 -     )
2017-01-22 20:32:04 - let styledLayoutSin =
2017-01-22 20:32:04 -     Layout(
2017-01-22 20:32:04 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-22 20:32:04 -         xaxis =
2017-01-22 20:32:04 -             Xaxis(
2017-01-22 20:32:04 -                 title = "Sample index",
2017-01-22 20:32:04 -                 showgrid = true,
2017-01-22 20:32:04 -                 zeroline = true
2017-01-22 20:32:04 -             ),
2017-01-22 20:32:04 -         yaxis =
2017-01-22 20:32:04 -             Yaxis(
2017-01-22 20:32:04 -                 title = "Original phase in radians",
2017-01-22 20:32:04 -                 showline = true
2017-01-22 20:32:04 -             )
2017-01-22 20:32:04 -     )
2017-01-22 20:32:04 - [styledTraceSin]
2017-01-22 20:32:04 - |> Chart.Plot
2017-01-22 20:32:04 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:32:20 - let styledTraceAtan =
2017-01-22 20:32:20 -     Scatter(
2017-01-22 20:32:20 -         x = Array.map fst atanGraph,
2017-01-22 20:32:20 -         y = Array.map snd atanGraph,
2017-01-22 20:32:20 -         mode = "lines",
2017-01-22 20:32:20 -         marker =
2017-01-22 20:32:20 -             Marker(
2017-01-22 20:32:20 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:32:20 -                 size = 12,
2017-01-22 20:32:20 -                 line =
2017-01-22 20:32:20 -                     Line(
2017-01-22 20:32:20 -                         color = "white",
2017-01-22 20:32:20 -                         width = 0.5
2017-01-22 20:32:20 -                     )
2017-01-22 20:32:20 -             )
2017-01-22 20:32:20 -     )
2017-01-22 20:32:20 - let styledLayoutAtan =
2017-01-22 20:32:20 -     Layout(
2017-01-22 20:32:20 -         title = "The wrapped phase",
2017-01-22 20:32:20 -         xaxis =
2017-01-22 20:32:20 -             Xaxis(
2017-01-22 20:32:20 -                 title = "Sample index",
2017-01-22 20:32:20 -                 showgrid = true,
2017-01-22 20:32:20 -                 zeroline = true
2017-01-22 20:32:20 -             ),
2017-01-22 20:32:20 -         yaxis =
2017-01-22 20:32:20 -             Yaxis(
2017-01-22 20:32:20 -                 title = "Wrapped phase in radians",
2017-01-22 20:32:20 -                 showline = true
2017-01-22 20:32:20 -             )
2017-01-22 20:32:20 -     )
2017-01-22 20:32:20 - [styledTraceAtan]
2017-01-22 20:32:20 - |> Chart.Plot
2017-01-22 20:32:20 - |> Chart.WithLayout styledLayoutAtan
2017-01-22 20:32:33 - let styledTraceUnwrapAtan =
2017-01-22 20:32:33 -     Scatter(
2017-01-22 20:32:33 -         x = Array.map fst atanUnwrapGraph,
2017-01-22 20:32:33 -         y = Array.map snd atanUnwrapGraph,
2017-01-22 20:32:33 -         mode = "lines",
2017-01-22 20:32:33 -         marker =
2017-01-22 20:32:33 -             Marker(
2017-01-22 20:32:33 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:32:33 -                 size = 12,
2017-01-22 20:32:33 -                 line =
2017-01-22 20:32:33 -                     Line(
2017-01-22 20:32:33 -                         color = "white",
2017-01-22 20:32:33 -                         width = 0.5
2017-01-22 20:32:33 -                     )
2017-01-22 20:32:33 -             )
2017-01-22 20:32:33 -     )
2017-01-22 20:32:33 - let styledLayoutUnwrapAtan =
2017-01-22 20:32:33 -     Layout(
2017-01-22 20:32:33 -         title = "The unwrapped phase",
2017-01-22 20:32:33 -         xaxis =
2017-01-22 20:32:33 -             Xaxis(
2017-01-22 20:32:33 -                 title = "Sample index",
2017-01-22 20:32:33 -                 showgrid = true,
2017-01-22 20:32:33 -                 zeroline = true
2017-01-22 20:32:33 -             ),
2017-01-22 20:32:33 -         yaxis =
2017-01-22 20:32:33 -             Yaxis(
2017-01-22 20:32:33 -                 title = "The unwrapped phase in radians",
2017-01-22 20:32:33 -                 showline = true
2017-01-22 20:32:33 -             )
2017-01-22 20:32:33 -     )
2017-01-22 20:32:33 - [styledTraceUnwrapAtan]
2017-01-22 20:32:33 - |> Chart.Plot
2017-01-22 20:32:33 - |> Chart.WithLayout styledLayoutUnwrapAtan
2017-01-22 20:34:36 - atanGraph
2017-01-22 20:34:36 - |> Chart.Line
2017-01-22 20:34:59 - atanUnwrapGraph
2017-01-22 20:34:59 - |> Chart.Line
2017-01-22 20:35:25 - shutdown request
2017-01-22 20:35:26 - // include directory, this will be replaced by the kernel
2017-01-22 20:35:26 - #I "/IfSharp/bin"
2017-01-22 20:35:26 - // load base dlls
2017-01-22 20:35:26 - #r "IfSharp.Kernel.dll"
2017-01-22 20:35:26 - #r "NetMQ.dll"
2017-01-22 20:35:26 - // open the global functions and methods
2017-01-22 20:35:26 - open IfSharp.Kernel
2017-01-22 20:35:26 - open IfSharp.Kernel.Globals
2017-01-22 20:35:28 - F# Interactive for F# 4.1
2017-01-22 20:35:28 - Freely distributed under the Apache 2.0 Open Source License
2017-01-22 20:35:28 - For help type #help;;
2017-01-22 20:35:28 - > val it : ResizeArray<System.Type * (obj -> seq<string * string> * string)> =
2017-01-22 20:35:28 -   seq []
2017-01-22 20:35:28 - --> Added '/IfSharp/bin' to library include path
2017-01-22 20:35:28 - --> Referenced '/IfSharp/bin/IfSharp.Kernel.dll' (file may be locked by F# Interactive process)
2017-01-22 20:35:28 - --> Referenced '/IfSharp/bin/NetMQ.dll' (file may be locked by F# Interactive process)
2017-01-22 20:35:28 - #load "Paket.fsx"
2017-01-22 20:35:28 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts";"Mathnet.Numerics";"Mathnet.Numerics.FSharp"]
2017-01-22 20:35:28 - open System
2017-01-22 20:35:28 - #load "XPlot.Plotly.Paket.fsx"
2017-01-22 20:35:28 - #load "XPlot.Plotly.fsx"
2017-01-22 20:35:28 - #r "./packages/MathNet.Numerics/lib/portable-net45+sl5+netcore45+MonoAndroid1+MonoTouch1/MathNet.Numerics.dll"
2017-01-22 20:35:28 - #r "./packages/MathNet.Numerics.FSharp/lib/portable-net45+sl5+netcore45+MonoAndroid1+MonoTouch1/MathNet.Numerics.FSharp.dll"
2017-01-22 20:35:28 - open XPlot.Plotly
2017-01-22 20:35:28 - open MathNet.Numerics.LinearAlgebra
2017-01-22 20:35:35 - let n = 512.0
2017-01-22 20:35:35 - let fo = 1.0/n
2017-01-22 20:35:35 - let x = DenseVector.init (int(n)) double
2017-01-22 20:35:35 - let y = 6.0 * sin(x*fo*Math.PI *2.0)
2017-01-22 20:35:35 - let sinGraph = Array.zip (x.ToArray()) (y.ToArray())
2017-01-22 20:35:35 - let yw =  (sin y).PointwiseAtan2 (cos y) 
2017-01-22 20:35:35 - let atanGraph = Array.zip (x.ToArray()) (yw.ToArray())
2017-01-22 20:35:35 - sinGraph
2017-01-22 20:35:35 - |> Chart.Line
2017-01-22 20:35:35 - atanGraph
2017-01-22 20:35:35 - |> Chart.Line
2017-01-22 20:35:35 - [|1..atanGraph.Length-1|]
2017-01-22 20:35:35 - |> Array.iter ( fun i -> match yw.[i] - yw.[i-1] with 
2017-01-22 20:35:35 -                          | x when x > Math.PI -> xu.[i..] <- xu.[i..] - (2.0 * Math.PI) 
2017-01-22 20:35:35 -                          | x when x < -1.0 * Math.PI -> xu.[i..] <-  xu.[i..] + (2.0 * Math.PI) 
2017-01-22 20:35:35 -                          | _ -> ())
2017-01-22 20:35:35 -                          
2017-01-22 20:35:35 - let atanUnwrapGraph = Array.zip (x.ToArray()) (xu.ToArray())
2017-01-22 20:35:36 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:35:36 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x406d5e10 + 0x00183> in <filename unknown>:0 
2017-01-22 20:35:36 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x406575f0 + 0x00047> in <filename unknown>:0 
2017-01-22 20:35:36 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x404f4d20 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:35:36 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x40977ff0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:35:36 - atanUnwrapGraph
2017-01-22 20:35:36 - |> Chart.Line
2017-01-22 20:35:36 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:35:36 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x406d5e10 + 0x00183> in <filename unknown>:0 
2017-01-22 20:35:36 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x406575f0 + 0x00047> in <filename unknown>:0 
2017-01-22 20:35:36 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x404f4d20 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:35:36 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x40977ff0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:35:36 - let styledTraceSin = 
2017-01-22 20:35:36 -     Scatter(
2017-01-22 20:35:36 -         x = Array.map fst sinGraph,
2017-01-22 20:35:36 -         y = Array.map snd sinGraph,
2017-01-22 20:35:36 -         mode = "lines",
2017-01-22 20:35:36 -         marker =
2017-01-22 20:35:36 -             Marker(
2017-01-22 20:35:36 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:35:36 -                 size = 12,
2017-01-22 20:35:36 -                 line =
2017-01-22 20:35:36 -                     Line(
2017-01-22 20:35:36 -                         color = "white",
2017-01-22 20:35:36 -                         width = 0.5
2017-01-22 20:35:36 -                     )
2017-01-22 20:35:36 -             )
2017-01-22 20:35:36 -     )
2017-01-22 20:35:36 - let styledLayoutSin =
2017-01-22 20:35:36 -     Layout(
2017-01-22 20:35:36 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-22 20:35:36 -         xaxis =
2017-01-22 20:35:36 -             Xaxis(
2017-01-22 20:35:36 -                 title = "Sample index",
2017-01-22 20:35:36 -                 showgrid = true,
2017-01-22 20:35:36 -                 zeroline = true
2017-01-22 20:35:36 -             ),
2017-01-22 20:35:36 -         yaxis =
2017-01-22 20:35:36 -             Yaxis(
2017-01-22 20:35:36 -                 title = "Original phase in radians",
2017-01-22 20:35:36 -                 showline = true
2017-01-22 20:35:36 -             )
2017-01-22 20:35:36 -     )
2017-01-22 20:35:36 - [styledTraceSin]
2017-01-22 20:35:36 - |> Chart.Plot
2017-01-22 20:35:36 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:35:36 - let styledTraceAtan =
2017-01-22 20:35:36 -     Scatter(
2017-01-22 20:35:36 -         x = Array.map fst atanGraph,
2017-01-22 20:35:36 -         y = Array.map snd atanGraph,
2017-01-22 20:35:36 -         mode = "lines",
2017-01-22 20:35:36 -         marker =
2017-01-22 20:35:36 -             Marker(
2017-01-22 20:35:36 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:35:36 -                 size = 12,
2017-01-22 20:35:36 -                 line =
2017-01-22 20:35:36 -                     Line(
2017-01-22 20:35:36 -                         color = "white",
2017-01-22 20:35:36 -                         width = 0.5
2017-01-22 20:35:36 -                     )
2017-01-22 20:35:36 -             )
2017-01-22 20:35:36 -     )
2017-01-22 20:35:36 - let styledLayoutAtan =
2017-01-22 20:35:36 -     Layout(
2017-01-22 20:35:36 -         title = "The wrapped phase",
2017-01-22 20:35:36 -         xaxis =
2017-01-22 20:35:36 -             Xaxis(
2017-01-22 20:35:36 -                 title = "Sample index",
2017-01-22 20:35:36 -                 showgrid = true,
2017-01-22 20:35:36 -                 zeroline = true
2017-01-22 20:35:36 -             ),
2017-01-22 20:35:36 -         yaxis =
2017-01-22 20:35:36 -             Yaxis(
2017-01-22 20:35:36 -                 title = "Wrapped phase in radians",
2017-01-22 20:35:36 -                 showline = true
2017-01-22 20:35:36 -             )
2017-01-22 20:35:36 -     )
2017-01-22 20:35:36 - [styledTraceAtan]
2017-01-22 20:35:36 - |> Chart.Plot
2017-01-22 20:35:36 - |> Chart.WithLayout styledLayoutAtan
2017-01-22 20:35:36 - let styledTraceUnwrapAtan =
2017-01-22 20:35:36 -     Scatter(
2017-01-22 20:35:36 -         x = Array.map fst atanUnwrapGraph,
2017-01-22 20:35:36 -         y = Array.map snd atanUnwrapGraph,
2017-01-22 20:35:36 -         mode = "lines",
2017-01-22 20:35:36 -         marker =
2017-01-22 20:35:36 -             Marker(
2017-01-22 20:35:36 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:35:36 -                 size = 12,
2017-01-22 20:35:36 -                 line =
2017-01-22 20:35:36 -                     Line(
2017-01-22 20:35:36 -                         color = "white",
2017-01-22 20:35:36 -                         width = 0.5
2017-01-22 20:35:36 -                     )
2017-01-22 20:35:36 -             )
2017-01-22 20:35:36 -     )
2017-01-22 20:35:36 - let styledLayoutUnwrapAtan =
2017-01-22 20:35:36 -     Layout(
2017-01-22 20:35:36 -         title = "The unwrapped phase",
2017-01-22 20:35:36 -         xaxis =
2017-01-22 20:35:36 -             Xaxis(
2017-01-22 20:35:36 -                 title = "Sample index",
2017-01-22 20:35:36 -                 showgrid = true,
2017-01-22 20:35:36 -                 zeroline = true
2017-01-22 20:35:36 -             ),
2017-01-22 20:35:36 -         yaxis =
2017-01-22 20:35:36 -             Yaxis(
2017-01-22 20:35:36 -                 title = "The unwrapped phase in radians",
2017-01-22 20:35:36 -                 showline = true
2017-01-22 20:35:36 -             )
2017-01-22 20:35:36 -     )
2017-01-22 20:35:36 - [styledTraceUnwrapAtan]
2017-01-22 20:35:36 - |> Chart.Plot
2017-01-22 20:35:36 - |> Chart.WithLayout styledLayoutUnwrapAtan
2017-01-22 20:35:36 - ExceptionOperation failed. The error text has been printed in the error stream. To return the corresponding FSharpErrorInfo use the EvalInteractionNonThrowing, EvalScriptNonThrowing or EvalExpressionNonThrowing
2017-01-22 20:35:36 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.commitResult[a,b] (Microsoft.FSharp.Core.FSharpChoice`2 res) <0x406d5e10 + 0x00183> in <filename unknown>:0 
2017-01-22 20:35:36 -   at Microsoft.FSharp.Compiler.Interactive.Shell+FsiEvaluationSession.EvalInteraction (System.String code) <0x406575f0 + 0x00047> in <filename unknown>:0 
2017-01-22 20:35:36 -   at IfSharp.Kernel.IfSharpKernel.preprocessAndEval (System.String code) <0x404f4d20 + 0x00d27> in <filename unknown>:0 
2017-01-22 20:35:36 -   at IfSharp.Kernel.IfSharpKernel.executeRequest (IfSharp.Kernel.KernelMessage msg, IfSharp.Kernel.ExecuteRequest content) <0x40977ff0 + 0x00287> in <filename unknown>:0 
2017-01-22 20:36:03 - let mutable xu = yw
2017-01-22 20:36:03 - [|1..atanGraph.Length-1|]
2017-01-22 20:36:03 - |> Array.iter ( fun i -> match yw.[i] - yw.[i-1] with 
2017-01-22 20:36:03 -                          | x when x > Math.PI -> xu.[i..] <- xu.[i..] - (2.0 * Math.PI) 
2017-01-22 20:36:03 -                          | x when x < -1.0 * Math.PI -> xu.[i..] <-  xu.[i..] + (2.0 * Math.PI) 
2017-01-22 20:36:03 -                          | _ -> ())
2017-01-22 20:36:03 -                          
2017-01-22 20:36:03 - let atanUnwrapGraph = Array.zip (x.ToArray()) (xu.ToArray())
2017-01-22 20:36:05 - atanUnwrapGraph
2017-01-22 20:36:05 - |> Chart.Line
2017-01-22 20:36:09 - let styledTraceSin = 
2017-01-22 20:36:09 -     Scatter(
2017-01-22 20:36:09 -         x = Array.map fst sinGraph,
2017-01-22 20:36:09 -         y = Array.map snd sinGraph,
2017-01-22 20:36:09 -         mode = "lines",
2017-01-22 20:36:09 -         marker =
2017-01-22 20:36:09 -             Marker(
2017-01-22 20:36:09 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:36:09 -                 size = 12,
2017-01-22 20:36:09 -                 line =
2017-01-22 20:36:09 -                     Line(
2017-01-22 20:36:09 -                         color = "white",
2017-01-22 20:36:09 -                         width = 0.5
2017-01-22 20:36:09 -                     )
2017-01-22 20:36:09 -             )
2017-01-22 20:36:09 -     )
2017-01-22 20:36:09 - let styledLayoutSin =
2017-01-22 20:36:09 -     Layout(
2017-01-22 20:36:09 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-22 20:36:09 -         xaxis =
2017-01-22 20:36:09 -             Xaxis(
2017-01-22 20:36:09 -                 title = "Sample index",
2017-01-22 20:36:09 -                 showgrid = true,
2017-01-22 20:36:09 -                 zeroline = true
2017-01-22 20:36:09 -             ),
2017-01-22 20:36:09 -         yaxis =
2017-01-22 20:36:09 -             Yaxis(
2017-01-22 20:36:09 -                 title = "Original phase in radians",
2017-01-22 20:36:09 -                 showline = true
2017-01-22 20:36:09 -             )
2017-01-22 20:36:09 -     )
2017-01-22 20:36:09 - [styledTraceSin]
2017-01-22 20:36:09 - |> Chart.Plot
2017-01-22 20:36:09 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:36:10 - let styledTraceAtan =
2017-01-22 20:36:10 -     Scatter(
2017-01-22 20:36:10 -         x = Array.map fst atanGraph,
2017-01-22 20:36:10 -         y = Array.map snd atanGraph,
2017-01-22 20:36:10 -         mode = "lines",
2017-01-22 20:36:10 -         marker =
2017-01-22 20:36:10 -             Marker(
2017-01-22 20:36:10 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:36:10 -                 size = 12,
2017-01-22 20:36:10 -                 line =
2017-01-22 20:36:10 -                     Line(
2017-01-22 20:36:10 -                         color = "white",
2017-01-22 20:36:10 -                         width = 0.5
2017-01-22 20:36:10 -                     )
2017-01-22 20:36:10 -             )
2017-01-22 20:36:10 -     )
2017-01-22 20:36:10 - let styledLayoutAtan =
2017-01-22 20:36:10 -     Layout(
2017-01-22 20:36:10 -         title = "The wrapped phase",
2017-01-22 20:36:10 -         xaxis =
2017-01-22 20:36:10 -             Xaxis(
2017-01-22 20:36:10 -                 title = "Sample index",
2017-01-22 20:36:10 -                 showgrid = true,
2017-01-22 20:36:10 -                 zeroline = true
2017-01-22 20:36:10 -             ),
2017-01-22 20:36:10 -         yaxis =
2017-01-22 20:36:10 -             Yaxis(
2017-01-22 20:36:10 -                 title = "Wrapped phase in radians",
2017-01-22 20:36:10 -                 showline = true
2017-01-22 20:36:10 -             )
2017-01-22 20:36:10 -     )
2017-01-22 20:36:10 - [styledTraceAtan]
2017-01-22 20:36:10 - |> Chart.Plot
2017-01-22 20:36:10 - |> Chart.WithLayout styledLayoutAtan
2017-01-22 20:36:11 - let styledTraceUnwrapAtan =
2017-01-22 20:36:11 -     Scatter(
2017-01-22 20:36:11 -         x = Array.map fst atanUnwrapGraph,
2017-01-22 20:36:11 -         y = Array.map snd atanUnwrapGraph,
2017-01-22 20:36:11 -         mode = "lines",
2017-01-22 20:36:11 -         marker =
2017-01-22 20:36:11 -             Marker(
2017-01-22 20:36:11 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:36:11 -                 size = 12,
2017-01-22 20:36:11 -                 line =
2017-01-22 20:36:11 -                     Line(
2017-01-22 20:36:11 -                         color = "white",
2017-01-22 20:36:11 -                         width = 0.5
2017-01-22 20:36:11 -                     )
2017-01-22 20:36:11 -             )
2017-01-22 20:36:11 -     )
2017-01-22 20:36:11 - let styledLayoutUnwrapAtan =
2017-01-22 20:36:11 -     Layout(
2017-01-22 20:36:11 -         title = "The unwrapped phase",
2017-01-22 20:36:11 -         xaxis =
2017-01-22 20:36:11 -             Xaxis(
2017-01-22 20:36:11 -                 title = "Sample index",
2017-01-22 20:36:11 -                 showgrid = true,
2017-01-22 20:36:11 -                 zeroline = true
2017-01-22 20:36:11 -             ),
2017-01-22 20:36:11 -         yaxis =
2017-01-22 20:36:11 -             Yaxis(
2017-01-22 20:36:11 -                 title = "The unwrapped phase in radians",
2017-01-22 20:36:11 -                 showline = true
2017-01-22 20:36:11 -             )
2017-01-22 20:36:11 -     )
2017-01-22 20:36:11 - [styledTraceUnwrapAtan]
2017-01-22 20:36:11 - |> Chart.Plot
2017-01-22 20:36:11 - |> Chart.WithLayout styledLayoutUnwrapAtan
2017-01-22 20:38:40 - shutdown request
2017-01-22 20:41:32 - // include directory, this will be replaced by the kernel
2017-01-22 20:41:32 - #I "/IfSharp/bin"
2017-01-22 20:41:32 - // load base dlls
2017-01-22 20:41:32 - #r "IfSharp.Kernel.dll"
2017-01-22 20:41:32 - #r "NetMQ.dll"
2017-01-22 20:41:32 - // open the global functions and methods
2017-01-22 20:41:32 - open IfSharp.Kernel
2017-01-22 20:41:32 - open IfSharp.Kernel.Globals
2017-01-22 20:41:34 - F# Interactive for F# 4.1
2017-01-22 20:41:34 - Freely distributed under the Apache 2.0 Open Source License
2017-01-22 20:41:34 - For help type #help;;
2017-01-22 20:41:34 - > val it : ResizeArray<System.Type * (obj -> seq<string * string> * string)> =
2017-01-22 20:41:34 -   seq []
2017-01-22 20:41:34 - --> Added '/IfSharp/bin' to library include path
2017-01-22 20:41:34 - --> Referenced '/IfSharp/bin/IfSharp.Kernel.dll' (file may be locked by F# Interactive process)
2017-01-22 20:41:34 - --> Referenced '/IfSharp/bin/NetMQ.dll' (file may be locked by F# Interactive process)
2017-01-22 20:41:48 - shutdown request
2017-01-22 20:41:49 - // include directory, this will be replaced by the kernel
2017-01-22 20:41:49 - #I "/IfSharp/bin"
2017-01-22 20:41:49 - // load base dlls
2017-01-22 20:41:49 - #r "IfSharp.Kernel.dll"
2017-01-22 20:41:49 - #r "NetMQ.dll"
2017-01-22 20:41:49 - // open the global functions and methods
2017-01-22 20:41:49 - open IfSharp.Kernel
2017-01-22 20:41:49 - open IfSharp.Kernel.Globals
2017-01-22 20:41:51 - F# Interactive for F# 4.1
2017-01-22 20:41:51 - Freely distributed under the Apache 2.0 Open Source License
2017-01-22 20:41:51 - For help type #help;;
2017-01-22 20:41:51 - > val it : ResizeArray<System.Type * (obj -> seq<string * string> * string)> =
2017-01-22 20:41:51 -   seq []
2017-01-22 20:41:51 - --> Added '/IfSharp/bin' to library include path
2017-01-22 20:41:51 - --> Referenced '/IfSharp/bin/IfSharp.Kernel.dll' (file may be locked by F# Interactive process)
2017-01-22 20:41:51 - --> Referenced '/IfSharp/bin/NetMQ.dll' (file may be locked by F# Interactive process)
2017-01-22 20:41:51 - #load "Paket.fsx"
2017-01-22 20:41:51 - Paket.Package["XPlot.Plotly";"XPlot.GoogleCharts";"Mathnet.Numerics";"Mathnet.Numerics.FSharp"]
2017-01-22 20:41:51 - open System
2017-01-22 20:41:51 - #load "XPlot.Plotly.Paket.fsx"
2017-01-22 20:41:51 - #load "XPlot.Plotly.fsx"
2017-01-22 20:41:51 - #r "./packages/MathNet.Numerics/lib/portable-net45+sl5+netcore45+MonoAndroid1+MonoTouch1/MathNet.Numerics.dll"
2017-01-22 20:41:51 - #r "./packages/MathNet.Numerics.FSharp/lib/portable-net45+sl5+netcore45+MonoAndroid1+MonoTouch1/MathNet.Numerics.FSharp.dll"
2017-01-22 20:41:51 - open XPlot.Plotly
2017-01-22 20:41:51 - open MathNet.Numerics.LinearAlgebra
2017-01-22 20:42:25 - let n = 512.0
2017-01-22 20:42:25 - let fo = 1.0/n
2017-01-22 20:42:25 - let x = DenseVector.init (int(n)) double
2017-01-22 20:42:25 - let y = 6.0 * sin(x*fo*Math.PI *2.0)
2017-01-22 20:42:25 - let sinGraph = Array.zip (x.ToArray()) (y.ToArray())
2017-01-22 20:42:25 - let yw =  (sin y).PointwiseAtan2 (cos y) 
2017-01-22 20:42:25 - let atanGraph = Array.zip (x.ToArray()) (yw.ToArray())
2017-01-22 20:42:25 - sinGraph
2017-01-22 20:42:25 - |> Chart.Line
2017-01-22 20:42:25 - atanGraph
2017-01-22 20:42:25 - |> Chart.Line
2017-01-22 20:42:25 - let mutable xu = yw
2017-01-22 20:42:25 - [|1..atanGraph.Length-1|]
2017-01-22 20:42:25 - |> Array.iter ( fun i -> match yw.[i] - yw.[i-1] with 
2017-01-22 20:42:25 -                          | x when x > Math.PI -> xu.[i..] <- xu.[i..] - (2.0 * Math.PI) 
2017-01-22 20:42:25 -                          | x when x < -1.0 * Math.PI -> xu.[i..] <-  xu.[i..] + (2.0 * Math.PI) 
2017-01-22 20:42:25 -                          | _ -> ())
2017-01-22 20:42:25 -                          
2017-01-22 20:42:25 - let atanUnwrapGraph = Array.zip (x.ToArray()) (xu.ToArray())
2017-01-22 20:42:25 - atanUnwrapGraph
2017-01-22 20:42:25 - |> Chart.Line
2017-01-22 20:42:25 - let styledTraceSin = 
2017-01-22 20:42:25 -     Scatter(
2017-01-22 20:42:25 -         x = Array.map fst sinGraph,
2017-01-22 20:42:25 -         y = Array.map snd sinGraph,
2017-01-22 20:42:25 -         mode = "lines",
2017-01-22 20:42:25 -         marker =
2017-01-22 20:42:25 -             Marker(
2017-01-22 20:42:25 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:42:25 -                 size = 12,
2017-01-22 20:42:25 -                 line =
2017-01-22 20:42:25 -                     Line(
2017-01-22 20:42:25 -                         color = "white",
2017-01-22 20:42:25 -                         width = 0.5
2017-01-22 20:42:25 -                     )
2017-01-22 20:42:25 -             )
2017-01-22 20:42:25 -     )
2017-01-22 20:42:25 - let styledLayoutSin =
2017-01-22 20:42:25 -     Layout(
2017-01-22 20:42:25 -         title = "The signal x whose amplitude exceeds the range:  [-&#960;,&#960;]",
2017-01-22 20:42:25 -         xaxis =
2017-01-22 20:42:25 -             Xaxis(
2017-01-22 20:42:25 -                 title = "Sample index",
2017-01-22 20:42:25 -                 showgrid = true,
2017-01-22 20:42:25 -                 zeroline = true
2017-01-22 20:42:25 -             ),
2017-01-22 20:42:25 -         yaxis =
2017-01-22 20:42:25 -             Yaxis(
2017-01-22 20:42:25 -                 title = "Original phase in radians",
2017-01-22 20:42:25 -                 showline = true
2017-01-22 20:42:25 -             )
2017-01-22 20:42:25 -     )
2017-01-22 20:42:25 - [styledTraceSin]
2017-01-22 20:42:25 - |> Chart.Plot
2017-01-22 20:42:25 - |> Chart.WithLayout styledLayoutSin
2017-01-22 20:42:25 - let styledTraceAtan =
2017-01-22 20:42:25 -     Scatter(
2017-01-22 20:42:25 -         x = Array.map fst atanGraph,
2017-01-22 20:42:25 -         y = Array.map snd atanGraph,
2017-01-22 20:42:25 -         mode = "lines",
2017-01-22 20:42:25 -         marker =
2017-01-22 20:42:25 -             Marker(
2017-01-22 20:42:25 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:42:25 -                 size = 12,
2017-01-22 20:42:25 -                 line =
2017-01-22 20:42:25 -                     Line(
2017-01-22 20:42:25 -                         color = "white",
2017-01-22 20:42:25 -                         width = 0.5
2017-01-22 20:42:25 -                     )
2017-01-22 20:42:25 -             )
2017-01-22 20:42:25 -     )
2017-01-22 20:42:25 - let styledLayoutAtan =
2017-01-22 20:42:25 -     Layout(
2017-01-22 20:42:25 -         title = "The wrapped phase",
2017-01-22 20:42:25 -         xaxis =
2017-01-22 20:42:25 -             Xaxis(
2017-01-22 20:42:25 -                 title = "Sample index",
2017-01-22 20:42:25 -                 showgrid = true,
2017-01-22 20:42:25 -                 zeroline = true
2017-01-22 20:42:25 -             ),
2017-01-22 20:42:25 -         yaxis =
2017-01-22 20:42:25 -             Yaxis(
2017-01-22 20:42:25 -                 title = "Wrapped phase in radians",
2017-01-22 20:42:25 -                 showline = true
2017-01-22 20:42:25 -             )
2017-01-22 20:42:25 -     )
2017-01-22 20:42:25 - [styledTraceAtan]
2017-01-22 20:42:25 - |> Chart.Plot
2017-01-22 20:42:25 - |> Chart.WithLayout styledLayoutAtan
2017-01-22 20:42:25 - let styledTraceUnwrapAtan =
2017-01-22 20:42:25 -     Scatter(
2017-01-22 20:42:25 -         x = Array.map fst atanUnwrapGraph,
2017-01-22 20:42:25 -         y = Array.map snd atanUnwrapGraph,
2017-01-22 20:42:25 -         mode = "lines",
2017-01-22 20:42:25 -         marker =
2017-01-22 20:42:25 -             Marker(
2017-01-22 20:42:25 -                 color = "rgb(164, 194, 244)",
2017-01-22 20:42:25 -                 size = 12,
2017-01-22 20:42:25 -                 line =
2017-01-22 20:42:25 -                     Line(
2017-01-22 20:42:25 -                         color = "white",
2017-01-22 20:42:25 -                         width = 0.5
2017-01-22 20:42:25 -                     )
2017-01-22 20:42:25 -             )
2017-01-22 20:42:25 -     )
2017-01-22 20:42:25 - let styledLayoutUnwrapAtan =
2017-01-22 20:42:25 -     Layout(
2017-01-22 20:42:25 -         title = "The unwrapped phase",
2017-01-22 20:42:25 -         xaxis =
2017-01-22 20:42:25 -             Xaxis(
2017-01-22 20:42:25 -                 title = "Sample index",
2017-01-22 20:42:25 -                 showgrid = true,
2017-01-22 20:42:25 -                 zeroline = true
2017-01-22 20:42:25 -             ),
2017-01-22 20:42:25 -         yaxis =
2017-01-22 20:42:25 -             Yaxis(
2017-01-22 20:42:25 -                 title = "The unwrapped phase in radians",
2017-01-22 20:42:25 -                 showline = true
2017-01-22 20:42:25 -             )
2017-01-22 20:42:25 -     )
2017-01-22 20:42:25 - [styledTraceUnwrapAtan]
2017-01-22 20:42:25 - |> Chart.Plot
2017-01-22 20:42:25 - |> Chart.WithLayout styledLayoutUnwrapAtan
2017-01-22 20:42:52 - shutdown request
